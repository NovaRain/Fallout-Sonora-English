#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_SCIntndt
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PUERTO // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        10  // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_BROTHERS_STEEL   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BOS_CAVALER        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_BOS              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      130 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure setBarterC;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeAnswer;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeBarter100;
procedure NodeBarter101;
procedure NodeBarter102;
procedure NodeBarter103;
procedure NodeBarter104;
procedure NodeBarter105;
procedure NodeBarter106;
procedure NodeBarter200;
procedure NodeBarter201;
procedure NodeBarter202;
procedure NodeBarter203;
procedure NodeBarter204;
procedure NodeBarter205;
procedure NodeBarter206;
procedure NodeBarter207;
procedure NodeBarter208;
procedure NodeBarter209;
procedure NodeBarter300;
procedure NodeBarter301;
procedure NodeBarter302;
procedure NodeBarter303;
procedure NodeBarter304;
procedure NodeBarter305;
procedure NodeBarter306;
procedure NodeBarter400;
procedure NodeBarter401;
procedure NodeBarter402;
procedure NodeBarter403;
procedure NodeBarter404;
procedure NodeBarter405;
procedure NodeArmorPower100;
procedure NodeArmorPower101;
procedure NodeArmorPower102;
procedure NodeArmorPower103;
procedure NodeArmorPower104;
procedure NodeArmorPower105;
procedure NodeArmorPower200;
procedure NodeArmorPower201;
procedure NodeArmorPower202;
procedure NodeArmorPower203;

//---------------------

#define LVAR_ArmorRepair_Timer         (8) // время до окончания ремонта силовой брони
#define LVAR_Bonus_Holo                (9) // выдача награды за доставку диска Улисса Гранта: 0 - не выдана, 1 - выдана

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_first_run) then begin
       incBarterMod(50);
       check_restock_item(PID_TOOL_RADIO, 1, 1, 100) // 1 шт на всю игру!
       end
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
   //Зеленый уровень товара - для простых гражданских
        check_restock_item(PID_TOOL_FLARE, 4, 8, 100)
        check_restock_item(PID_TOOL_GEIGER_COUNTER, 1, 1, 100)
        check_restock_item(PID_M_STIMPAK, 2, 4, 100)

        check_restock_item(PID_W_GRENADE_FRAG, 4, 8, 100)
        check_restock_item(PID_W_THROWING_KNIFE, 3, 6, 100)
        check_restock_item(PID_W_COMBAT_KNIFE, 2, 3, 100)

        check_restock_item(PID_W_SIGNAL_PISTOL, 1, 1, 100)
           check_restock_item(PID_AMMO_SIGNAL_A, 10, 20, 100)
        check_restock_item(PID_W_PISTOL_10, 1, 1, 100)
        check_restock_item(PID_W_SMG_10, 1, 1, 100)
           check_restock_item(PID_AMMO_10_MM, 40, 60, 100)
        check_restock_item(PID_W_REVOLVER_POLICE, 1, 1, 100)
           check_restock_item(PID_AMMO_44_MAGNUM, 20, 40, 100)
        check_restock_item(PID_W_PISTOL_50, 1, 1, 100)
           check_restock_item(PID_AMMO_50_AE, 8, 16, 100)
        check_restock_item(PID_W_SHOTGUN_COMBAT, 1, 1, 100)
           check_restock_item(PID_AMMO_SHOTGUN_SHELLS, 20, 30, 100)
        check_restock_item(PID_W_RIFLE_ASSAULT, 1, 1, 100)
           check_restock_item(PID_AMMO_5_MM, 30, 40, 100) // в пачке 5 патронов
        check_restock_item(PID_W_RIFLE_HUNTING, 1, 1, 100)
        check_restock_item(PID_W_RIFLE_COMBAT, 1, 1, 100)
           check_restock_item(PID_AMMO_308, 12, 24, 100)
        check_restock_item(PID_W_LASER_PISTOL, 1, 1, 100)
           check_restock_item(PID_AMMO_MICRO_FUSION_CELL, 20, 30, 100)

        //- крышки
        check_restock_many(2500,3500)
end

procedure setBarterB begin
   //Синий уровень товара - для приближенных и торговцев
        check_restock_item(PID_ARMOR_COMBAT, 1, 1, 100)
        check_restock_item(PID_TOOL_PLASTIC_EXPLOSIVES, 2, 3, 100)

        check_restock_item(PID_W_GRENADE_PLASMA, 3, 6, 100)
        check_restock_item(PID_W_GRENADE_PULSE, 2, 4, 100)
        check_restock_item(PID_W_POWER_FIST, 1, 1, 100)
        check_restock_item(PID_W_SPEAR_SHOCKER, 1, 1, 100)
        check_restock_item(PID_W_SUPER_SLEDGE, 1, 1, 100)

        check_restock_item(PID_W_SMG_UZI, 1, 1, 100)
        check_restock_item(PID_W_REVOLVER_COMBAT, 1, 1, 100)
        check_restock_item(PID_W_SHOTGUN_ASSAULT, 1, 1, 100)
           check_restock_item(PID_AMMO_SHOTGUN_SHELLS_BULLET, 10, 20, 100)
        check_restock_item(PID_W_LIGHT_AUTOGUN, 1, 1, 100)
        check_restock_item(PID_W_LAUNCHER, 1, 1, 100)
           check_restock_item(PID_AMMO_40_MM, 16, 20, 100)
        check_restock_item(PID_W_RIFLE_SNIPER, 1, 1, 100)
        check_restock_item(PID_W_LASER_RIFLE, 1, 1, 100)
        check_restock_item(PID_W_PLASMA_PISTOL, 1, 1, 100)

   set_BarterDopusk;
   if (get_BarterDopusk_B != 0) then begin
   call setBarterC;
   end
end

procedure setBarterC begin
   //Красный уровень товара - только для членов БС
        check_restock_item(PID_ARMOR_COMBAT_BOS, 1, 1, 100)
        check_restock_item(PID_TOOL_STEALTH_BOY, 1, 1, 100)
        check_restock_item(PID_W_ATOMIC_CUTTER, 1, 1, 100)
        check_restock_item(PID_AMMO_10_MM_NSP, 24, 36, 100)
        check_restock_item(PID_W_MINIGUN, 1, 1, 100)
           check_restock_item(PID_AMMO_5_MM, 20, 40, 100) // в пачке 5 патронов
        check_restock_item(PID_W_PLASMA_RIFLE, 1, 1, 100)
	     //! гатлинг-лазер?

   set_BarterDopusk_B;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_BOS) <= 0) then begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if ((map_var(MVAR_PUERTO_ALARM_SCLAD) > 0) and (tile_distance_objs(self_obj,dude_obj)<8)) then begin
   if (global_var(GVAR_TITUL_BOS) <= 0) then begin
   attack(dude_obj);
   end
   end
   if self_enemy_dude then begin
   BarklyAttakDude
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
   BarklyAttakDude
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_PUERTO_POWER_ARMOR) == qStart) then begin
   setQuest(GVAR_PUERTO_POWER_ARMOR,qEnd);
   end
   if (get_BarterDopusk_B == 0) then begin
   call setBarterB;
   end
   kill_critter_opt
   kill_critter_box
   kill_critter_BoS_item
end

procedure talk_p_proc begin
   if (global_var(GVAR_PUERTO_BOS_DESTROY_TIMER) != 0) then begin
   floater(dude_obj,102,COLOR_MSG_GREY);
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,-90) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   incBarterMod(100);
   Reply(200)
   NAnswer(202,1,NodeFstDialog2)
   NAnswer(201,1,Node999)
end

procedure NodeFstDialog2 begin
   bitDialogExp(bit_1,0)
   Reply(203)
   NAnswer(205,1,NodeSndDialog)
   GAnswer(204,1,NodeFstDialog3)
   BAnswer(206,1,NodeFstDialog4)
end

procedure NodeFstDialog3 begin
   set_REP(1)
   setBonusReaction(10)
   call NodeSndDialog;
end

procedure NodeFstDialog4 begin
   set_REP(-1)
   setBonusReaction(-10)
   call NodeSndDialog;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   zReply(215)
   end
   else begin
   Reply(210)
   end

   //--- Раскрытие товара
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   if (get_BarterDopusk_B == 0) then begin
   NAnswer(300,1,NodeBarter300)
   end
   end

   if (get_BarterDopusk == 0) then begin
      NAnswer(250,1,NodeBarter200)
   end
   else if (get_BarterDopusk != 0) then begin
      if (bitDialog(bit_2) == 0) then begin
      if (item_amnt(dude_obj,PID_W_LAUNCHER) > 0) then begin
      NAnswer(290,1,NodeBarter208)
      end
      end
   end

   //--- Расспросы
   if (global_var(GVAR_TITUL_BOS) == 0) then begin
   NAnswer(212,3,NodeAnswer)
   end

   //--- Реликвия
   if (item_amnt(dude_obj,PID_RELICT_MEDAL) > 0) then begin
   NAnswer(220,3,NodeBarter100)
   end

   //--- Награда от генерала за диск Улисса Гранта
   if (local_var(LVAR_Bonus_Holo) == 0) then begin
      if (getQuest(GVAR_PHENIX_QST_OWRS_HOLO) == qEnd) then begin
      NAnswer(287,1,NodeBarter404)
      end
   end

   //--- Жетоны БС
   if ((item_amnt(dude_obj,PID_BOS_ARMYTAG_A)>0) or (item_amnt(dude_obj,PID_BOS_ARMYTAG_B)>0)) then begin
   NAnswer(275,1,NodeBarter405)
   end

   if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
   NAnswer(280,1,NodeBarter400)
   end

   //--- Силовая броня
   if (getQuest(GVAR_PUERTO_POWER_ARMOR) == qStart) then begin
   NAnswer(340,1,NodeArmorPower200)
   end
   if (getQuest(GVAR_PUERTO_QST_INFERNO) != qZero) then begin
   if (getQuest(GVAR_PUERTO_POWER_ARMOR) == qZero) then begin
   if (item_amnt(dude_obj,PID_ARMOR_POWER_A) > 0) then begin
   NAnswer(320,1,NodeArmorPower100)
   end
   end
   end

   NAnswer(211,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer begin
   Reply(213)
   NAnswer(240,3,NodeAnswer101)
   NAnswer(244,1,NodeAnswer102)
   if (item_amnt(self_obj,PID_AMMO_10_MM_NSP)>0) then begin
   NAnswer(247,1,NodeAnswer103)
   end
   NAnswer(214,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(241)
   NAnswer(243,1,NodeAnswer)
   NAnswer(242,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(245)
   NAnswer(246,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(248)
   NAnswer(249,1,NodeSndDialog)
end

//--- РЕЛИКВИЯ

procedure NodeBarter100 begin
   if (item_amnt(dude_obj,PID_RELICT_MEDAL) > 0) then begin
   call NodeBarter101;
   end
   else begin
   Reply(224)
   NAnswer(225,1,Node999)
   end
end

procedure NodeBarter101 begin
   item_remove(dude_obj,PID_RELICT_MEDAL,1)
   setBonusReaction(10)
   exp_add(500);
   g_display_mstr(491);
   Reply(221)
   NAnswer(222,1,NodeBarter102)
end

procedure NodeBarter102 begin
   Reply(223)
   NAnswer(226,1,NodeBarter103)
   NAnswer(229,1,NodeBarter104)
   NAnswer(232,1,NodeBarter105)
end

procedure NodeBarter103 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,350)
   Reply(227)
   NAnswer(228,1,Node999)
end

procedure NodeBarter104 begin
   decBarterMod(10);
   set_REP(3)
   setBonusReaction(50)
   display_mstr(235);
   Reply(230)
   NAnswer(231,1,Node999)
end

procedure NodeBarter105 begin
   Reply(233)
   NAnswer(234,1,NodeBarter106)
end

procedure NodeBarter106 begin
   game_time_advance(ONE_GAME_HOUR*5);
   PLAY_FADE
   if (is_skill_tagged(SKILL_BIG_GUNS) == true) then begin
   skill_up(SKILL_BIG_GUNS,6);
   end
   else begin
   skill_up(SKILL_BIG_GUNS,5);
   end
   call Node999;
end

//--- ТОВАРООБОРОТ

procedure NodeBarter200 begin
   Reply(252)

   if (bitDialog(bit_2) == 0) then begin
   if (item_amnt(dude_obj,PID_W_LAUNCHER) > 0) then begin
   NAnswer(290,1,NodeBarter208)
   end
   end

   NAnswer(253,1,NodeBarter201)
   NAnswer(258,1,NodeSndDialog)
end

procedure NodeBarter201 begin
   Reply(254)

   if (global_var(GVAR_PUERTO_SKLAD_DOPUSK) == 3) then begin
   NAnswer(271,1,NodeBarter205)
   end
   if (global_var(GVAR_PUERTO_SKLAD_DOPUSK) == 2) then begin
   NAnswer(272,1,NodeBarter205)
   end
   if (global_var(GVAR_PUERTO_SKLAD_DOPUSK) == 1) then begin
   NAnswer(265,1,NodeBarter205)
   end
   NAnswerSkill(262,3,NodeBarter204,SKILL_BARTER,100,259,NodeBarter203)
   NAnswerRep(268,3,NodeBarter206,15,255,NodeBarter202)
   //? Заплатить 500 крышек, доказывая свою платежеспособность

   NAnswer(258,1,NodeSndDialog)
end

procedure NodeBarter202 begin
   Reply(256)
   NAnswer(257,1,NodeSndDialog)
end

procedure NodeBarter203 begin
   Reply(260)
   NAnswer(261,1,Node999)
end

procedure NodeBarter204 begin
   call NodeBarter207;
   Reply(263)
   NAnswer(264,1,NodeSndDialog)
end

procedure NodeBarter205 begin
   call NodeBarter207;
   Reply(266)
   NAnswer(267,1,NodeSndDialog)
end

procedure NodeBarter206 begin
   call NodeBarter207;
   Reply(269)
   NAnswer(270,1,NodeSndDialog)
end

procedure NodeBarter207 begin
   call setBarterB;
   call NodeSndDialog;
end

procedure NodeBarter208 begin
   Reply(mstr(291)+proto_data(PID_W_LAUNCHER, it_cost)+mstr(292))
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= proto_data(PID_W_LAUNCHER, it_cost)) then begin
   NAnswer(293,1,NodeBarter209)
   end
   NAnswer(294,1,NodeSndDialog)
end

procedure NodeBarter209 begin
   if (item_amnt(dude_obj,PID_W_LAUNCHER) > 0) then begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= proto_data(PID_W_LAUNCHER, it_cost)) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,proto_data(PID_W_LAUNCHER, it_cost))
   item_add(self_obj,PID_BOOTLE_CAPS,proto_data(PID_W_LAUNCHER, it_cost))
   item_remove(dude_obj,PID_W_LAUNCHER,1)
   item_add(dude_obj,PID_W_LAUNCHER_UPD,1)
   PLAY_FADE
   play_sfx("FIXSTILL");
   bitDialogExp(bit_2,0)
   end
   end
   call Node999;
end


//--- ВЫДАЧА СЛУЖЕБНОГО СНАРЯЖЕНИЯ

procedure NodeBarter300 begin
   Reply(301)
   NAnswer(302,1,NodeBarter301)
end

procedure NodeBarter301 begin
   Reply(303)
   if (global_var(GVAR_TITUL_BOS_SCRIBE) > 0) then begin
   NAnswer(305,1,NodeBarter302)
   end
   else if (global_var(GVAR_TITUL_BOS_PALADIN) > 0) then begin
   NAnswer(307,1,NodeBarter303)
   end
   else if (global_var(GVAR_TITUL_BOS_CAVALER) > 0) then begin
   NAnswer(309,1,NodeBarter304)
   end
   else if (global_var(GVAR_TITUL_BOS_SCOUT) > 0) then begin
   NAnswer(311,1,NodeBarter305)
   end
   NAnswer(304,1,Node999)
end

procedure NodeBarter302 begin
   call NodeBarter306;
   item_add(dude_obj,PID_W_LASER_PISTOL,1)
   item_add(dude_obj,PID_AMMO_MICRO_FUSION_CELL,50)
   item_add(dude_obj,PID_TOOL_LOCKPICKS_EL,1)
   item_add(dude_obj,PID_TOOL_GEIGER_COUNTER,1)
   Reply(306)
   NAnswer(313,1,Node999)
end

procedure NodeBarter303 begin
   call NodeBarter306;
   item_add(dude_obj,PID_W_LIGHT_AUTOGUN,1)
   item_add(dude_obj,PID_AMMO_5_MM,20)
   item_add(dude_obj,PID_ARMOR_COMBAT_BOS,1)
   Reply(308)
   NAnswer(313,1,Node999)
end

procedure NodeBarter304 begin
   call NodeBarter306;
   item_add(dude_obj,PID_W_ATOMIC_CUTTER,1)
   item_add(dude_obj,PID_W_SUPER_SLEDGE,1)
   item_add(dude_obj,PID_TOOL_BOOTS,1)
   Reply(310)
   NAnswer(313,1,Node999)
end

procedure NodeBarter305 begin
   call NodeBarter306;
   item_add(dude_obj,PID_W_SIGNAL_PISTOL,1)
   item_add(dude_obj,PID_AMMO_SIGNAL_A,20)
   item_add(dude_obj,PID_W_KNUCKLES_SHOCKER,1)
   item_add(dude_obj,PID_TOOL_STEALTH_BOY,1)
   Reply(312)
   NAnswer(313,1,Node999)
end

procedure NodeBarter306 begin
   decBarterMod(30);
   if (get_BarterDopusk == 0) then begin
   call setBarterB;
   end
   call setBarterC;
end

procedure NodeBarter400 begin
   Reply(281)
   NAnswer(282,1,NodeBarter401)
   GAnswer(283,1,NodeBarter402)
end

procedure NodeBarter401 begin
   if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,10)
   call NodeBarter403;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeBarter402 begin
   if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
   set_REP(1)
   set_SLAVA(5)
   setBonusReaction(10)
   call NodeBarter403;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeBarter403 begin
   item_remove(dude_obj,PID_BOS_ARMY_TAG,1)
   exp_add(50);
   Reply(284)
   NAnswer(285,1,NodeSndDialog)
   NAnswer(286,1,Node999)
end

procedure NodeBarter404 begin
   set_local_var(LVAR_Bonus_Holo,1);
   item_add(dude_obj,PID_BOOTLE_CAPS,250)
   item_add(dude_obj,PID_M_STIMPAK,3)
   item_add(dude_obj,PID_M_RADAWAY,2)
   Reply(288)
   NAnswer(289,1,Node999)
end

procedure NodeBarter405 begin
   if ((getQuest(GVAR_INF_QST_PALADIN_B) == qZero) or (getQuest(GVAR_INF_QST_PALADIN_B) == qStart)) then begin
      Reply(273)
      NAnswer(274,1,NodeSndDialog)
   end
   else begin
      if (item_amnt(dude_obj,PID_BOS_ARMYTAG_A)>0) then begin
      item_add(dude_obj,PID_BOS_ARMY_TAG,1)
      item_remove(dude_obj,PID_BOS_ARMYTAG_A,1)
      end
      if (item_amnt(dude_obj,PID_BOS_ARMYTAG_B)>0) then begin
      item_add(dude_obj,PID_BOS_ARMY_TAG,1)
      item_remove(dude_obj,PID_BOS_ARMYTAG_B,1)
      end
      call NodeBarter400;
   end
end

//--- СИЛОВАЯ БРОНЯ

procedure NodeArmorPower100 begin
   if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B)) then begin
      Reply(335)
      NAnswer(336,1,NodeSndDialog)
      NAnswer(337,1,Node999)
   end
   else begin
      Reply(321)
      NAnswer(331,1,NodeArmorPower101)
      if (item_amnt(dude_obj,PID_ARMOR_POWER_A) > 0) then begin
      GAnswer(323,1,NodeArmorPower102)
      end
      NAnswer(322,1,Node999)
   end
end

procedure NodeArmorPower101 begin
   Reply(332)
   if (item_amnt(dude_obj,PID_ARMOR_POWER_A) > 0) then begin
   GAnswer(333,1,NodeArmorPower102)
   end
   NAnswer(334,1,Node999)
end

procedure NodeArmorPower102 begin
   if (item_amnt(dude_obj,PID_ARMOR_POWER_A) > 0) then begin
   call NodeArmorPower103;
   end
   else begin
   call NodeArmorPower100;
   end
end

procedure NodeArmorPower103 begin
   setQuest(GVAR_PUERTO_POWER_ARMOR,qStart);
   set_local_var(LVAR_ArmorRepair_Timer, (ONE_GAME_WEEK*2) + game_time);
   item_remove(dude_obj,PID_ARMOR_POWER_A,1)
   create_object_sid(33556220, 19683, self_elevation, SCRIPT_SIPwrArm);
   exp_add(1000);
   set_REP(5)
   set_SLAVA(15)
   Reply(324)
   NAnswer(325,1,NodeArmorPower104)
end

procedure NodeArmorPower104 begin
   Reply(326)
   NAnswer(327,1,NodeArmorPower105)
end

procedure NodeArmorPower105 begin
   if (global_var(GVAR_TITUL_BOS)>0) then begin
   Reply(329)
   end
   else begin
   Reply(328)
   end
   NAnswer(330,1,Node999)
end

procedure NodeArmorPower200 begin
   if (local_var(LVAR_ArmorRepair_Timer) < game_time) then begin
   Reply(343)
   NAnswer(344,1,NodeArmorPower201)
   NAnswer(345,1,NodeArmorPower201)
   end
   else begin
   Reply(341)
   NAnswer(342,1,NodeSndDialog)
   end
end

procedure NodeArmorPower201 begin
   if (global_var(GVAR_TITUL_BOS)>0) then begin
   call NodeArmorPower202;
   end
   else begin
   call NodeArmorPower203;
   end
end

procedure NodeArmorPower202 begin
   setQuest(GVAR_PUERTO_POWER_ARMOR,qEnd);
   Reply(348)
   NAnswer(349,1,Node999)
end

procedure NodeArmorPower203 begin
   Reply(346)
   NAnswer(347,1,Node999)
end
