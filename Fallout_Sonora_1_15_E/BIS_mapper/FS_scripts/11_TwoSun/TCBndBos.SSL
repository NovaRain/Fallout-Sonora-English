#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCBndBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN_BAND // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TWOSUN_SLAVES    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      70 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;
procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog100;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog200;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;
procedure NodeFstDialog303;
procedure NodeFstDialog304;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeEnd100;
procedure NodeEnd101;
procedure NodeEnd102;
procedure NodeEnd102b;
procedure NodeEnd103;
procedure NodeEnd104;
procedure NodeEnd200;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_4) != 0) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure map_update_p_proc begin
   if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_5) != 0) then begin
      if (self_visible == true) then begin
      set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_3);
      rm_timer_event(self_obj);
      kill_critter(self_obj, ANIM_fall_back_sf);
      end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_3);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_4) == 0) then begin
      set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_2);
      dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
      floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog100)
   zNAnswer(210,1,NodeFstDialog200)
   BAnswer(220,1,NodeFstDialog300)
end

procedure NodeFstDialog100 begin
   Reply(202)
   NAnswerSkill(203,1,NodeFstDialog101,SKILL_CONVERSANT,50,203,NodeFstDialog102)
   zNAnswer(210,1,NodeFstDialog200)
   BAnswer(220,1,NodeFstDialog300)
end

procedure NodeFstDialog101 begin
   bitDialogExp(bit_2,100)
   zReply(204)
   NAnswer(205,1,NodeFstDialog2)
end

procedure NodeFstDialog102 begin
   Reply(206)
   NAnswer(207,1,Node998)
end

procedure NodeFstDialog200 begin
   Reply(211)
   NAnswer(212,1,NodeFstDialog2)
end

procedure NodeFstDialog300 begin
   Reply(221)
   NAnswer(222,1,NodeFstDialog301)
end

procedure NodeFstDialog301 begin
   Reply(223)
   NAnswer(224,1,NodeFstDialog302)
   NAnswer(225,1,Node998)
end

procedure NodeFstDialog302 begin
   Reply(226)
   if (get_SLAVA > 0) then begin
   NAnswer(227,1,NodeFstDialog303)
   end
   else begin
   NAnswer(227,1,NodeFstDialog304)
   end
end

procedure NodeFstDialog303 begin
   zReply(228)
   NAnswer(229,1,Node998)
end

procedure NodeFstDialog304 begin
   zReply(230)
   NAnswer(231,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(240)
   NAnswer(241,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(250)
   NAnswer(260,1,NodeAnswer100)
   //zNAnswer(270,1,NodeAnswer200)

   if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_4) == 0) then begin
      if (global_var(GVAR_TWOSUN_STATUS_ZAX) == 1) then begin
      NAnswer(280,1,NodeEnd100)
      end
      else if (global_var(GVAR_TWOSUN_STATUS_BOSS) < 0) then begin
      NAnswer(283,1,NodeEnd101)
      end
      else begin
      NAnswerSkill(297,1,NodeEnd102,SKILL_CONVERSANT,90,286,NodeEnd102b)
      end
   end
   NAnswer(251,1,Node999)
end

procedure NodeEnd100 begin
   Reply(281)
   NAnswer(282,1,NodeEnd200)
end

procedure NodeEnd101 begin
   Reply(284)
   NAnswer(285,1,NodeEnd200)
end

procedure NodeEnd102 begin
   Reply(287)
   NAnswer(291,1,NodeEnd103)
   NAnswer(288,1,Node999)
end

procedure NodeEnd102b begin
   Reply(287)
   NAnswer(288,1,Node999)
end

procedure NodeEnd103 begin
   Reply(292)
   NAnswer(293,1,NodeEnd104)
   NAnswer(294,1,Node999)
end

procedure NodeEnd104 begin
   Reply(295)
   NAnswer(296,1,NodeEnd200)
end

procedure NodeEnd200 begin
   set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_4);
   Reply(289)
   NAnswer(290,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(261)
   NAnswer(262,1,NodeAnswer101)
   NAnswer(264,1,NodeAnswer102)
   NAnswer(266,1,NodeAnswer103)
   NAnswer(268,1,NodeAnswer104)
end

procedure NodeAnswer101 begin
   Reply(263)
   NAnswer(264,1,NodeAnswer102)
   NAnswer(266,1,NodeAnswer103)
   NAnswer(268,1,NodeAnswer104)
   NAnswer(252,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(265)
   NAnswer(262,1,NodeAnswer101)
   NAnswer(266,1,NodeAnswer103)
   NAnswer(268,1,NodeAnswer104)
   NAnswer(252,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(267)
   NAnswer(262,1,NodeAnswer101)
   NAnswer(264,1,NodeAnswer102)
   NAnswer(268,1,NodeAnswer104)
   NAnswer(252,1,Node999)
end

procedure NodeAnswer104 begin
   Reply(269)
   NAnswer(262,1,NodeAnswer101)
   NAnswer(264,1,NodeAnswer102)
   NAnswer(266,1,NodeAnswer103)
   NAnswer(252,1,Node999)
end
