#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCFarmB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_RAIDERS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeFstDialog108;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_first_run == true) then begin
       inc_map_var(MVAR_FLAG_RAIDERS_LIFE);
       end
       if (map_var(MVAR_FLAG_RAIDERS_RUNS) > 0) then begin
       set_obj_visibility(self_obj, 1);
       destroy_object(self_obj);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (map_var(MVAR_FLAG_RAIDERS_RUNS) == 0) then begin
       if (HomeTile == 18690) then begin
       timer_move_patrol(HomeTile,18682)
       end
       else begin
       timer_move_to_home
       end
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       attack(dude_obj);
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ

   //--- Персонаж уходит с карты
   if (map_var(MVAR_FLAG_RAIDERS_RUNS) > 0) then begin
      if (combat_is_initialized == false) then begin
          if (self_tile == 23472) then begin
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
          end
          else begin
          move_to_tile(0,23472,0)
          end
      end
   end

   //--- Принудительный диалог
   if (bitDialog(bit_1) == 0) then begin
      if self_can_see_dude then begin
         if (map_var(MVAR_FLAGFARM_RAIDERS_ENEMY) == 0) then begin
         if (map_var(MVAR_FLAG_RAIDERS_RUNS) == 0) then begin
         dialogue_system_forcing(7)
         end
         end
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_FLAGFARM_RAIDERS_ENEMY, 1);
   dec_map_var(MVAR_FLAG_RAIDERS_LIFE);
   if (map_var(MVAR_FLAG_RAIDERS_RUNS) > 0) then begin
   set_map_var(MVAR_FLAG_RAIDERS_RUNS,0);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (map_var(MVAR_FLAGFARM_RAIDERS_ENEMY) != 0) then begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
   else if (map_var(MVAR_FLAG_RAIDERS_LIFE) <= 0) then begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
   else if (map_var(MVAR_FLAG_RAIDERS_RUNS) > 0) then begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
   set_map_var(MVAR_FLAGFARM_RAIDERS_ENEMY, 1);
   add_timer_event(self_obj, 1, 3);
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (armor_pid_dude_var == PID_ARMOR_POWER_A) then begin
   call NodeFstDialog200;
   end
   else if (armor_pid_dude_var == PID_ARMOR_POWER_B) then begin
   call NodeFstDialog200;
   end
   else if (armor_pid_dude_var == PID_ARMOR_POWER_C) then begin
   call NodeFstDialog200;
   end
   else if (global_var(GVAR_TITUL_REBIRTH) > 0) then begin
   call NodeFstDialog300;
   end
   else begin
   call NodeFstDialog101;
   end
end

procedure NodeFstDialog101 begin
   bitDialogExp(bit_1,0)
   Reply(200)
   zNAnswer(204,3,NodeFstDialog103)
   BAnswer(201,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(202)
   NAnswer(203,1,Node998)
end

procedure NodeFstDialog103 begin
   Reply(205)
   NAnswer(207,4,NodeFstDialog104)
   BAnswer(206,1,NodeFstDialog102)
end

procedure NodeFstDialog104 begin
   Reply(208)
   NAnswerSkill(213,4,NodeFstDialog106,SKILL_CONVERSANT,60,209,NodeFstDialog105)
   BAnswer(206,1,NodeFstDialog102)
end

procedure NodeFstDialog105 begin
   Reply(210)
   BAnswer(211,1,Node998)
   NAnswer(212,1,Node998)
end

procedure NodeFstDialog106 begin
   Reply(214)
   NAnswer(215,1,NodeFstDialog107)
end

procedure NodeFstDialog107 begin
   Reply(216)
   NAnswer(217,1,NodeFstDialog108)
   BAnswer(218,1,NodeFstDialog102)
end

procedure NodeFstDialog108 begin
   set_map_var(MVAR_FLAG_RAIDERS_RUNS,1);
   set_map_var(MVAR_FLAGFARM_TRAPS_VSBL,1);
   Reply(219)
   NAnswer(220,1,Node999)
   BAnswer(221,1,Node999)
end

procedure NodeFstDialog200 begin
   set_map_var(MVAR_FLAG_RAIDERS_RUNS,1);
   set_map_var(MVAR_FLAGFARM_TRAPS_VSBL,1);
   Reply(250)
   NAnswer(252,1,NodeFstDialog201)
   NAnswer(251,1,NodeFstDialog201)
end

procedure NodeFstDialog201 begin
   Reply(253)
   NAnswer(254,1,Node999)
   BAnswer(255,1,Node998)
end

procedure NodeFstDialog300 begin
   set_map_var(MVAR_FLAG_RAIDERS_RUNS,1);
   set_map_var(MVAR_FLAGFARM_TRAPS_VSBL,1);
   Reply(260)
   NAnswer(261,1,NodeFstDialog301)
end

procedure NodeFstDialog301 begin
   Reply(262)
   NAnswer(264,3,NodeFstDialog302)
   BAnswer(263,1,NodeFstDialog102)
end

procedure NodeFstDialog302 begin
   Reply(265)
   NAnswer(215,3,NodeFstDialog107)
   BAnswer(266,1,NodeFstDialog102)
end
