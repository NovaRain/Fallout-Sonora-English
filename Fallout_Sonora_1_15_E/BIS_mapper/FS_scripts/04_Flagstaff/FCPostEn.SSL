#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCPostEn
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_BANDITS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeDialog;
procedure NodeDialog2;
procedure NodeDialog3;
procedure NodeDialog4;
procedure NodeDialog5;
procedure NodeDialog6;
procedure NodeDialog7;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       //!!!чит:       setQuest(GVAR_FLAGSTAFF_SLAVES_RUN,qEnd);

       if (getQuest(GVAR_FLAGSTAFF_SLAVES_RUN) >= qEnd) then begin
          set_obj_visibility(self_obj, 0);
          if (bitDialog(bit_3) == 0) then begin
          add_timer_event(self_obj, 3, 3);
          bitDialogExp(bit_3,0)
          end
       end
       else begin
          set_map_var(MVAR_FLAG_PostSlav,0);
          set_obj_visibility(self_obj, 1);
       end

       if (map_var(MVAR_FLAG_PostSlav) == -1) then begin
          rm_timer_event(self_obj);
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_run_to_home
   end
   if (fixed_param == 2) then begin
       if (map_var(MVAR_FLAG_PostSlav) >0) then begin
          if (tile_distance(self_tile, HomeTile) < 7) then begin
          timer_floater(110,115,COLOR_MSG_RED,random(40,60))
          end
          else begin
          add_timer_event(self_obj, 20, 2);
          end
       end
   end
   if (fixed_param == 3) then begin
       floater(dude_obj,103,COLOR_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   if (getQuest(GVAR_FLAGSTAFF_SLAVES_RUN) >= qEnd) then begin
      if (map_var(MVAR_FLAG_PostSlav) >= 0) then begin
      set_map_var(MVAR_FLAG_PostSlav,self_tile);
      end
   end
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,1,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
   set_map_var(MVAR_FLAG_PostSlav,-1);
end

procedure talk_p_proc begin
   if (map_var(MVAR_FLAG_PostSlav) > 0) then begin
   dialog_proc(104,0,NodeDialog,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeDialog begin
   Reply(200)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 50) then begin
   NAnswer(201,1,NodeDialog2)
   end
   else begin
   NAnswer(207,1,NodeDialog2)
   BAnswer(215,1,NodeDialog7)
   end
   NAnswerSkill(205,1,NodeDialog3,SKILL_CONVERSANT,40,205,NodeDialog4)
   BAnswer(211,1,NodeDialog6)
end

procedure NodeDialog2 begin
   set_map_var(MVAR_FLAG_PostSlav,-1);
   set_local_var(LVAR_Home_Tile,20156);
   bitDialogExp(bit_2,100)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 50) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,50)
   item_add(self_obj,PID_BOOTLE_CAPS,50)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) > 0) then begin
   item_add(self_obj, PID_BOOTLE_CAPS, item_amnt(dude_obj, PID_BOOTLE_CAPS)) // здесь важен порядок - сначала item_add, затем item_remove
   item_remove(dude_obj,PID_BOOTLE_CAPS,item_amnt(dude_obj,PID_BOOTLE_CAPS))
   end
   Reply(202)
   NAnswer(203,1,Node999)
   BAnswer(204,1,Node998)
end

procedure NodeDialog3 begin
   Reply(208)
   NAnswer(209,1,NodeDialog5)
end

procedure NodeDialog4 begin
   Reply(206)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 50) then begin
   NAnswer(201,1,NodeDialog2)
   end
   else begin
   NAnswer(207,1,NodeDialog2)
   BAnswer(215,1,NodeDialog7)
   end
   BAnswer(204,1,Node998)
end

procedure NodeDialog5 begin
   set_map_var(MVAR_FLAG_PostSlav,-1);
   set_local_var(LVAR_Home_Tile,20155);
   bitDialogExp(bit_2,250)
   Reply(210)
   NAnswer(203,1,Node999)
   BAnswer(204,1,Node998)
end

procedure NodeDialog6 begin
   Reply(212)
   NAnswer(213,1,Node998)
   NAnswer(214,1,Node998)
end

procedure NodeDialog7 begin
   Reply(216)
   NAnswer(213,1,Node998)
   NAnswer(214,1,Node998)
end
