#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_EncLamnt
#define TOWN_REP_VAR                    -1                    // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_WIMPY       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog100;
procedure NodeDialog101;
procedure NodeDialog102;
procedure NodeDialog200;
procedure NodeDialog201;
procedure NodeDialog202;
procedure NodeDialog203;
procedure NodeDialog300;
procedure NodeDialog301;
procedure NodeDialog302;
procedure NodeDialog303;
procedure NodeDialog304;
procedure NodeDialog305;
procedure NodeDialog306;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_var(MVAR_ENC_CRY_STATUS)>=3) then begin
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if (map_var(MVAR_ENC_CRY_STATUS)>=3) then begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   bitDialogExp(bit_1,0)
   inc_map_var(MVAR_ENC_CRY_STATUS);
   move_to(self_obj,HomeTile,0);
   move_to(dude_obj,tile_num_in_direction(HomeTile, 2, 2),0);
   anim(dude_obj, ANIMATE_ROTATION, 5);
   anim(self_obj, ANIMATE_ROTATION, 2);

   if (map_var(MVAR_ENC_CRY_STATUS) > 3) then begin
   call NodeDialog306;
   end
   else if (map_var(MVAR_ENC_CRY_STATUS) == 3) then begin
   call NodeDialog300;
   end
   else if (map_var(MVAR_ENC_CRY_STATUS) == 2) then begin
   call NodeDialog200;
   end
   else begin
   call NodeDialog100;
   end
end

procedure NodeDialog100 begin
   Reply(200)
   NAnswer(201,1,NodeDialog101)
end

procedure NodeDialog101 begin
   Reply(202)
   NAnswer(203,1,NodeDialog102)
end

procedure NodeDialog102 begin
   Reply(204)
   NAnswer(205,1,Node999)
end


procedure NodeDialog200 begin
   Reply(210)
   NAnswer(211,1,NodeDialog201)
end

procedure NodeDialog201 begin
   Reply(212)
   NAnswer(213,1,NodeDialog202)
end

procedure NodeDialog202 begin
   Reply(214)
   NAnswer(215,1,NodeDialog203)
end

procedure NodeDialog203 begin
   Reply(216)
   NAnswer(217,1,Node999)
end


procedure NodeDialog300 begin
   Reply(220)
   NAnswer(221,1,NodeDialog301)
end

procedure NodeDialog301 begin
   Reply(222)
   NAnswer(223,1,NodeDialog302)
end

procedure NodeDialog302 begin
   Reply(224)
   NAnswer(225,1,NodeDialog303)
end

procedure NodeDialog303 begin
   Reply(226)
   NAnswer(227,1,NodeDialog304)
end

procedure NodeDialog304 begin
   Reply(228)
   NAnswer(229,1,NodeDialog305)
end

procedure NodeDialog305 begin
   exp_add(500);
   move_to(dude_obj,tile_num_in_direction(HomeTile, 2, 6),0);
   Reply(230)
   NAnswer(231,1,Node999)
end

procedure NodeDialog306 begin
   Reply(230)
   NAnswer(231,1,Node999)
end
