#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_DCCrvBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_CASA_GRANDE // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_DRIVER     // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      90 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

#define COAST_PORTAL_PNX                350

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeCaravan;
procedure NodeCaravan2;
procedure NodeCaravan3;
procedure NodeCaravan4;
procedure NodeCaravan5;
procedure NodeCaravan6;
procedure NodeCaravan7;
procedure NodeCaravan8;
procedure NodeCaravan9;
procedure NodeCaravan10;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_first_run) then begin
       item_add(self_obj,PID_BOOTLE_CAPS,random(40,60))
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       dude_teleport_map(1,1,MAP_PHOENIX_SIGN,48+random(1,12));
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-50) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   NAnswer(202,1,NodeSndDialog)
   BAnswer(201,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)

   NAnswer(220,1,NodeAnswer100)
   NAnswer(230,1,NodeAnswer104)
   NAnswer(240,4,NodeAnswer200)
   NAnswer(260,4,NodeAnswer106)

   NAnswer(300,4,NodeCaravan)
   NAnswer(211,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(222,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(227,3,NodeAnswer103)
   NAnswer(226,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   Reply(225)
   NAnswer(227,3,NodeAnswer103)
   NAnswer(226,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(228)
   NAnswer(226,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   if (global_var(GVAR_CGRANDE_STATUS_MER) >= 0) then begin
   Reply(231)
   NAnswer(235,3,NodeAnswer105)
   end
   else if (global_var(GVAR_CGRANDE_STATUS_SHEFF) >= 0) then begin
   Reply(232)
   end
   else begin
   Reply(233)
   end
   NAnswer(234,1,NodeSndDialog)
end

procedure NodeAnswer105 begin
   Reply(236)
   NAnswer(237,1,NodeSndDialog)
   NAnswer(238,1,Node999)
end

procedure NodeAnswer106 begin
   Reply(261)
   NAnswer(262,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   /*
   Reply(241)
   NAnswer(242,1,NodeAnswer201)
   */
   call NodeAnswer201;
end

procedure NodeAnswer201 begin
   if (global_var(GVAR_GRAVES_CASAGRANDE) > 0) then begin
   Reply(243)
   NAnswer(244,1,NodeAnswer202)
   end
   else begin
   Reply(245)
   NAnswer(246,1,NodeAnswer202)
   end
end

procedure NodeAnswer202 begin
   if (global_var(GVAR_CGRANDE_STATUS_MER) < 0) then begin
   Reply(247)
   NAnswer(248,1,NodeAnswer203)
   end
   else if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) != qZero) then begin
   Reply(255)
   NAnswer(248,1,NodeAnswer203)
   end
   else begin
   Reply(249)
   NAnswer(250,1,NodeAnswer203)
   end
end

procedure NodeAnswer203 begin
   if (global_var(GVAR_CGRANDE_STATUS_BATHHOUSE) >= 2) then begin
   Reply(251)
   NAnswer(252,1,NodeAnswer204)
   end
   else begin
   Reply(253)
   NAnswer(254,1,NodeAnswer204)
   end
end

procedure NodeAnswer204 begin
   if (global_var(GVAR_TWOSUN_STATUS_ZAX) > 0) then begin
   Reply(256)
   NAnswer(257,1,NodeAnswer205)
   end
   else begin
   call NodeAnswer205;
   end
end

procedure NodeAnswer205 begin
   if (getQuest(GVAR_CGRANDE_QST_ROADSTOP) >= qEnd) then begin
   Reply(258)
   NAnswer(259,1,NodeAnswer206)
   end
   else begin
   call NodeAnswer206;
   end
end

procedure NodeAnswer206 begin
   Reply(263)
   NAnswer(264,1,NodeSndDialog)
end

//--- ОТПРАВКА

procedure NodeCaravan begin
   Reply(301)
   NAnswer(303,1,NodeCaravan2)
   NAnswer(302,1,NodeSndDialog)
end

procedure NodeCaravan2 begin
   Reply(304)
   if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   NAnswer(305,1,NodeCaravan3)
   end
   else begin
   NAnswerSlava(305,1,NodeCaravan4,0,305,NodeCaravan3)
   end
   NAnswer(306,1,NodeSndDialog)
end

procedure NodeCaravan3 begin
   Reply(307)
   NAnswer(308,1,NodeSndDialog)
   BAnswer(309,1,NodeSndDialog)
end

procedure NodeCaravan4 begin
   Reply(mstr(310)+COAST_PORTAL_PNX+mstr(311))
   zNAnswer(314,1,NodeCaravan5)
   NAnswer(313,1,NodeSndDialog)
   NAnswer(312,1,Node999)
end

procedure NodeCaravan5 begin
   if (who_carry_amount(dude_obj) > 50) then begin
      Reply(315)
      NAnswerSkill(324,3,NodeCaravan9,SKILL_CONVERSANT,50,321,NodeCaravan8)
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= COAST_PORTAL_PNX) then begin
      //NAnswer(mstr(329)+COAST_PORTAL_PNX+mstr(330),1,NodeCaravan10)
      end
      NAnswer(316,1,Node999)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) < COAST_PORTAL_PNX) then begin
      Reply(317)
      NAnswer(318,1,Node999)
   end
   else begin
      call NodeCaravan6;
   end
end

procedure NodeCaravan6 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) < COAST_PORTAL_PNX) then begin
   call Node999;
   end
   else begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,COAST_PORTAL_PNX)
   Reply(319)
   NAnswer(320,1,NodeCaravan7)
   end
end

procedure NodeCaravan7 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end

procedure NodeCaravan8 begin
   Reply(322)
   NAnswer(323,1,Node999)
end

procedure NodeCaravan9 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) < COAST_PORTAL_PNX) then begin
   Reply(325)
   NAnswer(326,1,Node999)
   end
   else begin
   Reply(327)
   NAnswer(328,1,NodeCaravan6)
   end
end

procedure NodeCaravan10 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,COAST_PORTAL_PNX)
   call NodeCaravan9;
end
