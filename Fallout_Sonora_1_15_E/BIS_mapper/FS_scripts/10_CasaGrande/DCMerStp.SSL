#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_DCMerStp
#define TOWN_REP_VAR                    GVAR_TOWN_REP_CASA_GRANDE // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CASAGRANDE_CITYHALL // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GUARDS             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;
procedure NodeStopDialog2;
procedure NodeStopDialog200;
procedure NodeStopDialog201;
procedure NodeStopDialog202;
procedure NodeStopDialog203;
procedure NodeStopDialog204;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_using_stop
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   dec_global_var(GVAR_CGRANDE_STATUS_CTZN);
   kill_critter_opt
end

procedure talk_p_proc begin
   if ((armor_pid_dude_var == PID_ARMOR_ROAD) or (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0)) then begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-25) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_CGRANDE_STATUS_MER) < 0)then begin
      if (bitDialog(bit_2) == 0) then begin
      call NodeStopDialog200;
      end
      else begin
      call NodeStopDialog204;
      end
   end
   else if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) == qStart) then begin
      call NodeStopDialog;
   end
   else begin
      if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeSndDialog;
      end
   end
end

//--- СТОП-ДИАЛОГ

procedure NodeStopDialog begin
   Reply(200)
   NAnswer(201,1,Node999)
   NAnswer(202,1,NodeStopDialog2)
end

procedure NodeStopDialog2 begin
   Reply(203)
   NAnswer(204,1,Node999)
end

procedure NodeStopDialog200 begin
   bitDialogExp(bit_2,0)
   Reply(210)
   NAnswer(211,1,NodeStopDialog201)
   NAnswer(213,1,NodeStopDialog202)
end

procedure NodeStopDialog201 begin
   Reply(212)
   NAnswer(215,1,NodeStopDialog203)
end

procedure NodeStopDialog202 begin
   Reply(214)
   NAnswer(215,1,NodeStopDialog203)
end

procedure NodeStopDialog203 begin
   Reply(216)
   BAnswer(217,1,Node998)
   NAnswer(218,1,Node999)
end

procedure NodeStopDialog204 begin
   //Чем займешься? - Не знаю. Попробую уйти в другое место, если не найду новый заработок здесь. - Понятно. Ну, удачи.
   Reply(219)
   BAnswer(221,1,Node998)
   NAnswer(220,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(250)
   NAnswer(251,1,NodeFstDialog2)
   NAnswer(257,1,NodeFstDialog4)
end

procedure NodeFstDialog2 begin
   Reply(252)
   NAnswer(253,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(254)
   NAnswer(256,1,NodeAnswer100)
   NAnswer(255,1,Node999)
end

procedure NodeFstDialog4 begin
   Reply(258)
   NAnswer(259,1,NodeFstDialog5)
   BAnswer(263,1,NodeFstDialog2)
end

procedure NodeFstDialog5 begin
   Reply(260)
   NAnswer(262,1,NodeAnswer100)
   NAnswer(261,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if ((getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) >= qEnd) and (getQuest(GVAR_CGRANDE_QST_ROADSTOP) == qZero)) then begin
   Reply(231)
   end
   else begin
   Reply(230)
   end

   NAnswer(300,3,NodeAnswer100)
   if (bitDialog(bit_5) == 0) then begin
   NAnswer(310,3,NodeAnswer200)
   end
   NAnswer(232,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(301)
   NAnswer(302,3,NodeAnswer101)
   NAnswer(304,3,NodeAnswer102)
end

procedure NodeAnswer101 begin
   Reply(303)
   NAnswer(304,3,NodeAnswer102)
   if (bitDialog(bit_5) == 0) then begin
   NAnswer(306,3,NodeAnswer200)
   end
   NAnswer(319,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(305)
   NAnswer(302,3,NodeAnswer101)
   if (bitDialog(bit_5) == 0) then begin
   NAnswer(306,3,NodeAnswer200)
   end
   NAnswer(319,1,Node999)
end

procedure NodeAnswer200 begin
   bitDialogExp(bit_5,0)
   Reply(311)
   NAnswer(312,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   Reply(313)
   BAnswer(316,3,NodeAnswer202)
   NAnswer(314,3,NodeAnswer203)
   GAnswer(325,3,NodeAnswer204)
end

procedure NodeAnswer202 begin
   setBonusReaction(-25)
   set_REP(-1)
   zReply(317)
   NAnswer(318,3,Node999)
end

procedure NodeAnswer203 begin
   Reply(315)
   BAnswer(323,1,Node999)
   NAnswer(324,1,Node999)
end

procedure NodeAnswer204 begin
   setBonusReaction(25)
   set_REP(1)
   Reply(326)
   NAnswer(328,1,Node999)
   BAnswer(327,1,Node999)
end
