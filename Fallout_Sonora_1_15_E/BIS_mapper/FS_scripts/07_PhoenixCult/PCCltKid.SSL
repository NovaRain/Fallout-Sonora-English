#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCCltKid
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_CITIZEN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CHILD              // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_CHILD      // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CHILD        // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog;
procedure NodeDialog2;
procedure NodeDialog3;
procedure NodeDialog4;
procedure NodeDialog5;

//---------------------

//#define LVAR_Invis                     (6) // при !=0 юнец удаляется с карты

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home

       if ((bitDialog(bit_1) == 0) and (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 5)) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end

       /*
       if ((bitDialog(bit_1) != 0) or (global_var(GVAR_PHENIX_QST_CULT_A_BIT) > 5)) then begin
       set_obj_visibility(self_obj, 1);
       rm_timer_event(self_obj);
       destroy_object(self_obj);
       end
       */
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       //timer_run_random
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (bitDialog(bit_1) == 0) then begin
      //partyRunToDude
      //Flee_From_Dude_NoSee
      dialogue_system_forcing(10)
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if (bitDialog(bit_1) == 0) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeDialog;
end

procedure NodeDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   BAnswer(201,1,NodeDialog2)
   NAnswer(202,1,NodeDialog3)
end

procedure NodeDialog2 begin
   set_SLAVA(-3)
   call NodeDialog3;
end

procedure NodeDialog3 begin
   Reply(203)
   BAnswer(204,1,NodeDialog4)
   NAnswer(205,1,NodeDialog5)
end

procedure NodeDialog4 begin
   set_SLAVA(-3)
   call NodeDialog5;
end

procedure NodeDialog5 begin
   set_obj_visibility(self_obj, 1);
   Reply(207)
   BAnswer(208,1,Node999)
   NAnswer(209,1,Node999)
end
