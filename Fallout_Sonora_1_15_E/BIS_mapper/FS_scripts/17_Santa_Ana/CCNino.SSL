#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_CCNino
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SANTA_ANA // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANTA_ANA_CTZN   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CHILD              // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_CHILD      // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeSndDialog;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeEndDialog100;
procedure NodeEndDialog101;
procedure NodeEndDialog200;
procedure NodeEndDialog201;
procedure NodeEndDialog202;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (objUsedPid == PID_Q_SANTAANA_CORONA) then begin
      script_overrides;
      floater(self_obj, 102, COLOR_MSG_NORMAL);
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   stop_santa_fiesta
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_SANTAANA_STATUS_NINA) >= 3) then begin
   call NodeEndDialog200;
   end
   else if (global_var(GVAR_SANTAANA_STATUS_NINA) == 2) then begin
   call NodeEndDialog100;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ЗНАКОМСТВО

procedure NodeFstDialog begin
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   bitDialogExp(bit_1,0)
   dialog_qst_SANTA
   Reply(206)
   GAnswer(207,1,NodeFstDialog5)
   NAnswer(210,1,NodeFstDialog6)
end

procedure NodeFstDialog5 begin
   setBonusReaction(40)
   Reply(208)
   zNAnswer(209,1,Node999)
end

procedure NodeFstDialog6 begin
   setBonusReaction(-10)
   Reply(211)
   NAnswer(212,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction>=40) then begin
   Reply(220)
   end
   else if (getReaction>0) then begin
   Reply(221)
   end
   else begin
   Reply(222)
   end

   if (getQuest(GVAR_SANTAANA_QST_FIESTA) == qStart) then begin
      if (bitDialog(bit_2) == 0) then begin
      NAnswer(230,1,NodeAnswer101)
      end
      else begin
      NAnswer(247,1,NodeAnswer107)
      end
   end

   NAnswer(223,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(231)
   NAnswer(233,1,NodeAnswer102)
   NAnswer(232,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(234)
   NAnswer(235,1,NodeAnswer103)
end

procedure NodeAnswer103 begin
   Reply(236)
   NAnswer(237,1,NodeAnswer105)
   BAnswer(246,1,NodeAnswer104)
end

procedure NodeAnswer104 begin
   setBonusReaction(-30)
   call NodeAnswer107;
end

procedure NodeAnswer105 begin
   Reply(238)
   NAnswer(239,1,NodeAnswer106)
end

procedure NodeAnswer106 begin
   Reply(240)
   NAnswer(241,1,NodeAnswer107)
end

procedure NodeAnswer107 begin
   bitDialogExp(bit_2,0)
   Reply(242)
   NAnswer(243,1,NodeAnswer108)
   NAnswer(245,1,Node999)
end

procedure NodeAnswer108 begin
   Reply(244)
   NAnswer(245,1,Node999)
end

//--- ЗАВЕРШЕНИЕ КВЕСТОВ

procedure NodeEndDialog100 begin
   if (getQuest(GVAR_SANTAANA_QST_NINA) == qZero) then begin
   setQuest(GVAR_SANTAANA_QST_NINA, qStart);
   end
   zReply(260)
   NAnswer(261,1,NodeEndDialog101)
end

procedure NodeEndDialog101 begin
   Reply(262)
   NAnswer(263,1,Node999)
   BAnswer(264,1,Node999)
end

procedure NodeEndDialog200 begin
   Reply(250)
   if (getQuest(GVAR_SANTAANA_QST_NINA) <= qEnd) then begin
   NAnswer(252,1,NodeEndDialog201)
   end
   zNAnswer(251,1,Node999)
end

procedure NodeEndDialog201 begin
   Reply(253)
   NAnswer(254,1,NodeEndDialog202)
end

procedure NodeEndDialog202 begin
   setQuest(GVAR_SANTAANA_QST_NINA, qEnd+1);
   item_add(dude_obj, PID_BOOK_COMIX, 1)
   Reply(255)
   NAnswer(257,1,Node999)
end
