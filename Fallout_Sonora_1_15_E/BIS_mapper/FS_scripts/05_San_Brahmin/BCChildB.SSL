#include "..\headers\define.h"
//--------------------- Дети в Загонах, которые отводят в Погребенный Город

#define NAME                            SCRIPT_BCChildB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SAN_BRAHMIN // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANBRAHMIN_PEASAN // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CHILD              // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_CHILD      // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      30 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog100;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeSndDialog;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_var(MVAR_BRAHMIN_CHILD_VIS) == 0) then begin
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure map_update_p_proc begin
   if (map_var(MVAR_BRAHMIN_CHILD_VIS) != 0) then begin
      set_obj_visibility(self_obj, 0);
   end
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       if (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO) == qZero) then begin
       timer_float_reply(110,119)
       end
   end
   if (fixed_param == 3) then begin
       dude_teleport_map(1,1,MAP_SAN_BRAHMIN_CAVE,4);
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure push_p_proc begin
   push_options(HomeTile,5,102) //Толкать (точка отсчета, макс расстояние, фраза нпс при толкании), удалить если не надо
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (global_var(GVAR_BRAHMIN_STATUS_CHILDRUN) == 0) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,104,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO) == qZero) then begin
   call NodeFstDialog100;
   end
   else if (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO) == qStart) then begin
   call NodeFstDialog104;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeFstDialog100 begin
   setQuest(GVAR_BRAHMIN_QST_ELMONSTRO,qStart);
   Reply(200)
   zNAnswer(201,1,NodeFstDialog101)
end

procedure NodeFstDialog101 begin
   zReply(202)
   NAnswer(203,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog103)
   BAnswer(206,1,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   Reply(207)
   BAnswer(208,1,NodeFstDialog104)
   GAnswer(209,1,NodeFstDialog104)
   NAnswer(210,1,NodeFstDialog104)
end

procedure NodeFstDialog104 begin
   Reply(211)
   NAnswer(212,1,NodeFstDialog105)
   NAnswer(215,1,NodeFstDialog106)
   NAnswer(214,1,Node999)
end

procedure NodeFstDialog105 begin
   Reply(213)
   NAnswer(215,1,NodeFstDialog106)
   NAnswer(214,1,Node999)
end

procedure NodeFstDialog106 begin
   add_timer_event(self_obj,5,3);
   call Node999;
end

procedure NodeSndDialog begin
   Reply(220)
   NAnswer(221,1,Node999)
   NAnswer(222,1,Node999)
end
