#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//---------------------

#define NAME                            SCRIPT_YCPirTlk
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GHOUL_GENERIC      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeCorDialog;
procedure NodeCorDialog2;
procedure NodeCorDialog3;
procedure NodeCorDialog4;
procedure NodeCorDialog5;
procedure NodeCorDialog6;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog103;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       if ((global_var(GVAR_DAYGLOW_CORONADO_CODE_SIGNAL) == 1) and (global_var(GVAR_DAYGLOW_CORONADO_STATUS) == 0)) then begin
          if (tile_contains_obj_pid(20524,0,33555672) == true) then begin
          destroy_object(tile_contains_pid_obj(20524, 0, 33555672));
          create_object_sid(33554433, 20524, 0, -1);
          end
          set_obj_visibility(self_obj, 0);
       end
       if ((global_var(GVAR_DAYGLOW_STATUS_BOSS_A) < 0) and (global_var(GVAR_DAYGLOW_STATUS_BOSS_B) < 0)) then begin
          set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,5,3,3,3) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,20) // поправка к отношению за принадлежность к фракции
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (cur_map_index == MAP_DAYGLOW_CORONADO) then begin
      if (bitDialog(bit_2) == 0) then begin
      call NodeCorDialog;
      end
      else begin
      call NodeCorDialog3;
      end
   end
   else if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
   end
   else begin
      call NodeSndDialog;
   end
end

procedure NodeCorDialog begin
   Reply(250)
   NAnswer(251,0,NodeCorDialog2)
end

procedure NodeCorDialog2 begin
   bitDialogExp(bit_2,0)
   Reply(252)
   zNAnswer(253,0,Node999)
   NAnswer(254,0,Node999)
end

procedure NodeCorDialog3 begin
   Reply(255)
   if (global_var(GVAR_DAYGLOW_CORONADO_STATUS) > 0) then begin
   GAnswer(256,0,NodeCorDialog4)
   end
   zNAnswer(253,0,Node999)
   NAnswer(254,0,Node999)
end

procedure NodeCorDialog4 begin
   Reply(257)
   NAnswer(259,4,NodeCorDialog5)
   NAnswer(258,0,Node999)
end

procedure NodeCorDialog5 begin
   if (getQuest(GVAR_DAYGLOW_MAIN_D) >= qEnd) then begin
   Reply(265)
   NAnswer(266,0,Node999)
   end
   else begin
   Reply(260)
   NAnswer(261,0,NodeCorDialog6)
   end
end

procedure NodeCorDialog6 begin
   Reply(262)
   BAnswer(264,0,Node998)
   NAnswer(263,0,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if ((getQuest(GVAR_DAYGLOW_MAIN_D) >= qEnd) and (global_var(GVAR_DAYGLOW_STATUS_BOSS_A) >= 0)) then begin
   Reply(206)
   NAnswer(207,0,NodeSndDialog2)
   BAnswer(208,0,NodeSndDialog2)
   end
   else if DudePerkHas(PERK_ghouling_fiziology) then begin
   zReply(203)
   NAnswer(204,0,NodeSndDialog2)
   BAnswer(205,0,NodeSndDialog2)
   end
   else begin
   zReply(200)
   NAnswer(201,0,NodeSndDialog2)
   BAnswer(202,0,NodeSndDialog2)
   end
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(220,0,NodeSndDialog100)
   NAnswer(222,0,NodeSndDialog101)
   NAnswer(224,0,NodeSndDialog102)
   NAnswer(212,0,NodeSndDialog103)
   NAnswer(211,0,Node999)
end

procedure NodeSndDialog2 begin
   Reply(210)
   NAnswer(212,0,NodeSndDialog103)
end

procedure NodeSndDialog100 begin
   Reply(221)
   NAnswer(220,0,NodeSndDialog100)
   NAnswer(222,0,NodeSndDialog101)
   NAnswer(224,0,NodeSndDialog102)
   NAnswer(226,0,NodeSndDialog103)
   NAnswer(211,0,Node999)
end

procedure NodeSndDialog101 begin
   Reply(223)
   NAnswer(220,0,NodeSndDialog100)
   NAnswer(222,0,NodeSndDialog101)
   NAnswer(224,0,NodeSndDialog102)
   NAnswer(226,0,NodeSndDialog103)
   NAnswer(211,0,Node999)
end

procedure NodeSndDialog102 begin
   Reply(225)
   NAnswer(220,0,NodeSndDialog100)
   NAnswer(222,0,NodeSndDialog101)
   NAnswer(224,0,NodeSndDialog102)
   NAnswer(226,0,NodeSndDialog103)
   NAnswer(211,0,Node999)
end

procedure NodeSndDialog103 begin
   zReply(227)
   NAnswer(220,0,NodeSndDialog100)
   NAnswer(222,0,NodeSndDialog101)
   NAnswer(224,0,NodeSndDialog102)
   NAnswer(226,0,NodeSndDialog103)
   NAnswer(211,0,Node999)
end
