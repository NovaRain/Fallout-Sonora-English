#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- Сердце - раненный гуль

#define NAME                            SCRIPT_YCHsptlB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      10 // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure uninjure_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure loot_gener;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
   set_injure_start(0,0,1,1,0) // травмировать (отметить нужное цифрой 1): a - левая рука, b - правая рука, c - левая нога, d - правая нога, e - слепота
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       set_injure_start(0,0,1,1,0)

       if (get_Medic_Quest == 0)  then begin
       set_obj_visibility(self_obj, 0);
       reg_anim_clear(self_obj);
       reg_anim_begin();
       reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
       reg_anim_end();
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
       if (self_tile == HomeTile) then begin
       if (get_Medic_Quest == 0)  then begin
       reg_anim_clear(self_obj);
       reg_anim_begin();
       reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
       reg_anim_end();
       end
       end
   end
   if (fixed_param == 2) then begin
       if (get_Medic_Quest == 0)  then begin
       timer_float_reply(110,113)
       end
   end
   if (fixed_param == 3) then begin
       set_REP(-5)
       call loot_gener;
       kill_critter(self_obj, ANIM_fall_back_blood_sf);
   end
end

procedure critter_p_proc begin
   set_injure_update(250,-1)
   set_critter_options(0,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
   skillUseDoctor(70)
end

procedure uninjure_proc begin
   reg_anim_clear(self_obj);
   reg_anim_begin();
   reg_anim_animate(self_obj,ANIM_back_to_standing,-1);
   reg_anim_end();
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
   call loot_gener;
end

procedure loot_gener begin
   item_add(self_obj,PID_W_SIGNAL_PISTOL,1)
   item_add(self_obj,PID_AMMO_SIGNAL_A,10)
   item_add(self_obj,PID_BOOK_OLD,6)
   item_add(self_obj,PID_MANY,5)
   item_add(self_obj,PID_KATOD_LUMP,10)
end

procedure talk_p_proc begin
   setReaction(0) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,75) // поправка к отношению за принадлежность к фракции
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
   anim(self_obj, ANIMATE_ROTATION, HomeRotat);
end

procedure NodeStartDialog begin
   if (get_Medic_Quest == 0)  then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)

   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(201)
   end
   else begin
   Reply(200)
   end

   NAnswer(202,1,Node999)
   BAnswer(203,1,Node999)
   BAnswer(204,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(205)
   BAnswer(206,1,NodeFstDialog3)
   NAnswer(207,1,Node999)
end

procedure NodeFstDialog3 begin
   add_timer_event(self_obj, 5, 3);
   call Node999;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   set_REP(3)
   set_map_var(MVAR_DIEGOHEART_DWCL_VISBL, 1);
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   zReply(213)
   end
   else begin
   zReply(208)
   end
   NAnswer(209,1,NodeSndDialog2)
   BAnswer(210,1,NodeSndDialog2)
end

procedure NodeSndDialog2 begin
   Reply(211)
   NAnswer(212,1,NodeSndDialog3)
end

procedure NodeSndDialog3 begin
   set_obj_visibility(self_obj, 1);
   call Node999;
end
