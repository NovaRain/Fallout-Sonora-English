#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_RCIntndt
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RANGERS // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        10  // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_RANGERS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_RANGER             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_RANGER           // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      100 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeStopDialog1;
procedure NodeStopDialog2;
procedure NodeSndDialog;
procedure NodeBarter100;
procedure NodeBarter101;
procedure NodeBarter102;
procedure NodeBarter103;
procedure NodeBarter104;
procedure NodeBarter105;
procedure NodeBarter106;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer104b;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer210;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;
procedure NodeAnswer310;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeRelict;
procedure NodeRelict1;
procedure NodeRelict2;
procedure NodeRelict3;
procedure NodeRelict4;
procedure NodeRelict5;
procedure NodeRelict6;
procedure NodeRelict7;
procedure NodeRelict8;
procedure NodeRelict9;
procedure NodeRelict10;

//---------------------

#define LVAR_Bonus_QstOvrs             (8) // выдача награды за квест Смотрителя дамбы: 0 - не выдана, 1 - выдана

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
        // До раскрытия товара не торгует
end

procedure setBarterB begin
        check_restock_item(PID_TOOL_FLARE, 2, 6, 100)
        check_restock_item(PID_W_KNIFE, 2, 4, 100)
        check_restock_item(PID_W_THROWING_KNIFE, 1, 4, 100)
        check_restock_item(PID_W_COMBAT_KNIFE, 1, 3, 100)
        check_restock_item(PID_W_SMG_22, 1, 1, 100)
           check_restock_item(PID_AMMO_22_LR, 5, 10, 100)
        check_restock_item(PID_W_SIGNAL_PISTOL, 1, 1, 100)
           check_restock_item(PID_AMMO_SIGNAL_A, 10, 20, 100)
           check_restock_item(PID_AMMO_SIGNAL_B, 5, 10, 100)
        check_restock_item(PID_W_REVOLVER_OLD, 1, 1, 100)
           check_restock_item(PID_AMMO_44_MAGNUM, 10, 20, 100)
        check_restock_item(PID_W_RIFLE_HUNTING, 1, 1, 100)
           check_restock_item(PID_AMMO_308, 10, 12, 100)
        //Персонаж не использует крышки от бутылок!

        if (get_BarterDopusk == 0) then begin
        item_add(self_obj,PID_TOOL_RADIO,1)
        end
   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_RANGERS_QST_INTENDANT) == qStart) then begin
   setQuest(GVAR_RANGERS_QST_INTENDANT,qStop);
   end
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc_barter(1,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((bitDialog(bit_2) == 0) and (global_var(GVAR_GRAVES_RANGERS) > 0)) then begin
   call NodeStopDialog1;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   BAnswer(202,1,NodeFstDialog2)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(203)
   BAnswer(204,1,NodeSndDialog)
   NAnswer(205,1,NodeSndDialog)
end

procedure NodeStopDialog1 begin
   bitDialogExp(bit_2,0)
   Reply(206)
   NAnswer(207,1,NodeStopDialog2)
end

procedure NodeStopDialog2 begin
   Reply(208)
   NAnswer(209,1,NodeStartDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)

   //- Расспросы
   NAnswer(220,1,NodeAnswer100)

   if (getQuest(GVAR_RANGERS_QST_PUERTO) >= qStart) then begin
      if (bitDialog(bit_6) == 0) then begin
      NAnswer(280,1,NodeBarter100)
      end
      else if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
      NAnswer(287,1,NodeBarter103)
      end
   end

   //- Допуск к товару
   if (bitDialog(bit_5) == 0) then begin
      if (global_var(GVAR_TITUL_ARIZONA_RANGER) > 0) then begin
      NAnswer(250,1,NodeAnswer200)
      end
   end

   //- Награда от Руфуса
   if (local_var(LVAR_Bonus_QstOvrs) == 0) then begin
      if (getQuest(GVAR_RANGERS_QST_EUGENE_DUM) == qEnd) then begin
      NAnswer(270,1,NodeAnswer300)
      end
   end

   //- Квест по поиск пропажи
   if (getQuest(GVAR_RANGERS_QST_INTENDANT) == qZero) then begin
   NAnswer(300,3,NodeQst100)
   end
   if (getQuest(GVAR_RANGERS_QST_INTENDANT) == qStart) then begin
   NAnswer(311,3,NodeQst103)
   end

   if (item_amnt(dude_obj,PID_RELICT_STAR_RANGER) > 0) then begin
   NAnswer(350,1,NodeRelict)
   end

   NAnswer(211,1,Node999)
end

//--- РАССПРОСЫ О СЕБЕ

procedure NodeBarter100 begin
   bitDialogExp(bit_6,0)
   Reply(281)
   NAnswer(282,1,NodeBarter101)
end

procedure NodeBarter101 begin
   Reply(283)
   NAnswer(284,1,NodeBarter102)
end

procedure NodeBarter102 begin
   Reply(285)
   NAnswer(286,1,NodeSndDialog)
end

procedure NodeBarter103 begin
   Reply(288)
   NAnswer(289,1,NodeBarter104)
   GAnswer(290,1,NodeBarter105)
end

procedure NodeBarter104 begin
   if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,10)
   call NodeBarter106;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeBarter105 begin
   if (item_amnt(dude_obj,PID_BOS_ARMY_TAG) > 0) then begin
   set_REP(1)
   set_SLAVA(5)
   setBonusReaction(10)
   call NodeBarter106;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeBarter106 begin
   item_remove(dude_obj,PID_BOS_ARMY_TAG,1)
   exp_add(50);
   Reply(291)
   NAnswer(293,1,NodeSndDialog)
   NAnswer(292,1,Node999)
end

//--- РАССПРОСЫ О СЕБЕ

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(222,1,NodeAnswer101)
   NAnswer(234,1,NodeAnswer105)
   NAnswer(238,1,NodeAnswer107)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   Reply(225)
   NAnswer(226,1,NodeAnswer103)
   if (get_BarterDopusk == 0) then begin
      if (global_var(GVAR_TITUL_ARIZONA_RANGER) <= 0) then begin
      NAnswerSkill(228,1,NodeAnswer104,SKILL_BARTER,80,228,NodeAnswer104b)
      end
   end
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(227)
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   call setBarterB;
   Reply(229)
   NAnswer(230,1,NodeSndDialog)
end

procedure NodeAnswer104b begin
   Reply(231)
   NAnswer(232,1,NodeSndDialog)
end

procedure NodeAnswer105 begin
   Reply(235)
   NAnswer(236,4,NodeAnswer106)
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer106 begin
   bitDialogExp(bit_3,50)
   Reply(237)
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer107 begin
   bitDialogExp(bit_4,20)
   Reply(239)
   NAnswer(213,1,NodeAnswer100)
   NAnswer(212,1,NodeSndDialog)
end

//--- НАГРАДА ЗА ТИТУЛ РЕЙНДЖЕРА

procedure NodeAnswer200 begin
   Reply(251)
   NAnswer(252,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   bitDialogExp(bit_5,0)
   if (get_BarterDopusk == 0) then begin
   call setBarterB;
   end
   item_add(dude_obj,PID_M_WATER_FLASK,1)
   item_add(dude_obj,PID_ARMOR_LEATHER_RANGER,1)
   Reply(253)
   NAnswer(254,1,NodeAnswer202)
   NAnswer(255,1,NodeAnswer203)
   NAnswer(256,1,NodeAnswer204)
end

procedure NodeAnswer202 begin
   item_add(dude_obj,PID_AMMO_308,12)
   item_add(dude_obj,PID_W_RIFLE_HUNTING,1)
   call NodeAnswer210;
end

procedure NodeAnswer203 begin
   item_add(dude_obj,PID_AMMO_SIGNAL_A,16)
   item_add(dude_obj,PID_W_SIGNAL_PISTOL,1)
   call NodeAnswer210;
end

procedure NodeAnswer204 begin
   item_add(dude_obj,PID_W_THROWING_KNIFE,5)
   call NodeAnswer210;
end

procedure NodeAnswer210 begin
   Reply(257)
   NAnswer(258,1,Node999)
   BAnswer(259,1,Node999)
end

//--- НАГРАДА ЗА КВЕСТЫ СМОТРИТЕЛЯ

procedure NodeAnswer300 begin
   Reply(271)
   NAnswer(273,1,NodeAnswer301)
   NAnswer(274,1,NodeAnswer302)
   NAnswer(275,1,NodeAnswer303)
   NAnswer(276,1,NodeAnswer304)
   NAnswer(272,1,Node999)
end

procedure NodeAnswer301 begin
   item_add(dude_obj,PID_M_STIMPAK,3)
   call NodeAnswer305;
end

procedure NodeAnswer302 begin
   item_add(dude_obj,PID_AMMO_44_MAGNUM,35)
   call NodeAnswer305;
end

procedure NodeAnswer303 begin
   item_add(dude_obj,PID_AMMO_308,20)
   call NodeAnswer305;
end

procedure NodeAnswer304 begin
   item_add(dude_obj,PID_ARMOR_LEATHER,1)
   call NodeAnswer305;
end

procedure NodeAnswer305 begin
   set_local_var(LVAR_Bonus_QstOvrs,1);
   Reply(278)
   NAnswer(279,1,Node999)
end

//--- КВЕСТ НА ПРОПАЖУ

procedure NodeQst100 begin
   Reply(301)
   NAnswer(303,1,NodeQst101)
   NAnswer(302,1,NodeSndDialog)
end

procedure NodeQst101 begin
   Reply(304)
   NAnswer(305,3,NodeQst102)
   GAnswer(306,1,Node999)
   BAnswer(307,1,Node999)
end

procedure NodeQst102 begin
   setQuest(GVAR_RANGERS_QST_INTENDANT,qStart);
   Reply(308)
   NAnswer(309,1,Node999)
   BAnswer(310,1,Node999)
end

procedure NodeQst103 begin
   Reply(312)
   if (item_amnt(dude_obj,PID_Q_PISTOL_LOST) > 0) then begin
   GAnswer(320,1,NodeQst200)
   end
   NAnswer(314,1,NodeQst104)
   NAnswer(317,1,NodeQst105)
   NAnswer(313,1,Node999)
end

procedure NodeQst104 begin
   Reply(315)
   NAnswer(317,1,NodeQst105)
   NAnswer(316,1,Node999)
end

procedure NodeQst105 begin
   Reply(318)
   NAnswer(314,1,NodeQst104)
   NAnswer(316,1,Node999)
end

procedure NodeQst200 begin
   if (item_amnt(dude_obj,PID_Q_PISTOL_LOST) > 0) then begin
   call NodeQst201;
   end
   else begin
   call NodeQst103;
   end
end

procedure NodeQst201 begin
   setQuest(GVAR_RANGERS_QST_INTENDANT,qEnd);
   set_gvar_bit_on(GVAR_DIALOGS_FLAGS_BIT, bit_7);
   item_remove(dude_obj,PID_Q_PISTOL_LOST,1)
   item_add(dude_obj,PID_AMMO_10_MM,16)
   setBonusReaction(25)
   set_SLAVA(-10)
   exp_add(350);

   Reply(323)
   zNAnswer(324,1,Node999)
   BAnswer(325,1,Node999)
end

//--- РЕЛИКВИЯ

procedure NodeRelict begin
   if (item_amnt(dude_obj,PID_RELICT_STAR_RANGER) > 0) then begin
   call NodeRelict1;
   end
   else begin
   call Node999;
   end
end

procedure NodeRelict1 begin
   item_remove(dude_obj,PID_RELICT_STAR_RANGER,1)
   setBonusReaction(10)
   exp_add(500);
   g_display_mstr(491);
   Reply(351)
   NAnswer(352,1,NodeRelict2)
end

procedure NodeRelict2 begin
   Reply(353)
   NAnswer(354,1,NodeRelict3)
end

procedure NodeRelict3 begin
   Reply(355)
   NAnswer(356,1,NodeRelict4)
   NAnswer(359,1,NodeRelict5)
   NAnswer(362,1,NodeRelict6)
   NAnswer(365,1,NodeRelict7)

   GAnswer(368,1,NodeRelict8)
   NAnswer(371,1,NodeRelict9)
end

procedure NodeRelict4 begin
   item_add(dude_obj,PID_AMMO_308,35)
   Reply(357)
   NAnswer(358,1,Node999)
end

procedure NodeRelict5 begin
   item_add(dude_obj,PID_AMMO_44_MAGNUM,50)
   Reply(360)
   NAnswer(361,1,Node999)
end

procedure NodeRelict6 begin
   item_add(dude_obj,PID_AMMO_22_LR,30)
   Reply(363)
   NAnswer(364,1,Node999)
end

procedure NodeRelict7 begin
   item_add(dude_obj,PID_AMMO_SIGNAL_A,30)
   Reply(366)
   NAnswer(367,1,Node999)
end

procedure NodeRelict8 begin
   decBarterMod(10);
   set_REP(3)
   setBonusReaction(50)
   display_mstr(374);

   Reply(369)
   NAnswer(370,1,Node999)
end

procedure NodeRelict9 begin
   Reply(372)
   NAnswer(373,1,NodeRelict10)
end

procedure NodeRelict10 begin
   game_time_advance(ONE_GAME_HOUR*5);
   PLAY_FADE
   if (is_skill_tagged(SKILL_SMALL_GUNS) == true) then begin
   skill_up(SKILL_SMALL_GUNS,6);
   end
   else begin
   skill_up(SKILL_SMALL_GUNS,5);
   end
   call Node999;
end
