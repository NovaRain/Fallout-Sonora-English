#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCMer
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_BANDITS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PARTY_MERCVILLA    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog001;
procedure NodeFstDialog002;
procedure NodeFstDialog003;
procedure NodeFstDialog004;
procedure NodeFstDialog005;
procedure NodeFstDialog006;
procedure NodeFstDialog007;
procedure NodeFstDialog008;
procedure NodeFstDialog009;
procedure NodeFstDialog010;
procedure NodeSndDialog;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodePartyAd;
procedure NodePartyDel;
procedure NodeParty2;
procedure NodeParty3;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

variable manyAmnt;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       if (global_var(GVAR_VILLA_STATUS_RAIDER_PARTY) > 0) then begin
       set_obj_visibility(self_obj, 0);
       end
       if (global_var(GVAR_VILLA_STATUS_RAIDER_PARTY) >= 100) then begin
       add_timer_event(self_obj,3,3);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
      if ((cur_map_index == MAP_CASA_NUEVA_PLANT) and (bitDialog(bit_10) == 0)) then begin
      floater(self_obj, 110, COLOR_MSG_NORMAL);
      bitDialogExp(bit_10,0)
      end
      else if ((cur_map_index == MAP_PHOENIX_SIGN) and (bitDialog(bit_11) == 0)) then begin
      floater(self_obj, 111, COLOR_MSG_NORMAL);
      bitDialogExp(bit_11,0)
      end
      else if ((cur_map_index == MAP_PHOENIX_CENTER) and (bitDialog(bit_11) == 0)) then begin
      floater(self_obj, 111, COLOR_MSG_NORMAL);
      bitDialogExp(bit_11,0)
      end
      else if ((cur_map_index == MAP_TWO_SUN_GRAVE) and (bitDialog(bit_12) == 0)) then begin
      floater(self_obj, 112, COLOR_MSG_NORMAL);
      bitDialogExp(bit_12,0)
      end
      else if ((cur_map_index == MAP_RANGERS_ROAD) and (bitDialog(bit_13) == 0)) then begin
      floater(self_obj, 113, COLOR_MSG_NORMAL);
      bitDialogExp(bit_13,0)
      end
      else if ((cur_map_index == MAP_RANGERS_BASA) and (bitDialog(bit_13) == 0)) then begin
      floater(self_obj, 113, COLOR_MSG_NORMAL);
      bitDialogExp(bit_13,0)
      end
      else if ((cur_map_index == MAP_RANGERS_CITY) and (bitDialog(bit_13) == 0)) then begin
      floater(self_obj, 113, COLOR_MSG_NORMAL);
      bitDialogExp(bit_13,0)
      end
      else if ((cur_map_index == MAP_INFIERNO_ROAD) and (bitDialog(bit_14) == 0)) then begin
      floater(self_obj, 114, COLOR_MSG_NORMAL);
      bitDialogExp(bit_14,0)
      end
      else if ((cur_map_index == MAP_INFIERNO_CITY) and (bitDialog(bit_14) == 0)) then begin
      floater(self_obj, 114, COLOR_MSG_NORMAL);
      bitDialogExp(bit_14,0)
      end
      else if ((cur_map_index == MAP_HERMO_RANCHO) and (bitDialog(bit_15) == 0)) then begin
      floater(self_obj, 115, COLOR_MSG_NORMAL);
      bitDialogExp(bit_15,0)
      end
      else if ((cur_map_index == MAP_OIL_CITY) and (bitDialog(bit_16) == 0)) then begin
      floater(self_obj, 116, COLOR_MSG_NORMAL);
      bitDialogExp(bit_16,0)
      end
      else if ((cur_map_index == MAP_OLD_MOTEL) and (bitDialog(bit_17) == 0)) then begin
      floater(self_obj, 117, COLOR_MSG_NORMAL);
      bitDialogExp(bit_17,0)
      end
      else if ((cur_map_index == MAP_PUERTO_SIGN) and (bitDialog(bit_18) == 0)) then begin
      floater(self_obj, 118, COLOR_MSG_NORMAL);
      bitDialogExp(bit_18,0)
      end
      else if ((cur_map_index == MAP_PUERTO_DOCS) and (bitDialog(bit_18) == 0)) then begin
      floater(self_obj, 118, COLOR_MSG_NORMAL);
      bitDialogExp(bit_18,0)
      end
      else if ((cur_map_index == MAP_SAN_BRAHMIN_SIGN) and (bitDialog(bit_19) == 0)) then begin
      floater(self_obj, 119, COLOR_MSG_NORMAL);
      bitDialogExp(bit_19,0)
      end
      else if ((cur_map_index == MAP_SAN_BRAHMIN_CITY) and (bitDialog(bit_19) == 0)) then begin
      floater(self_obj, 119, COLOR_MSG_NORMAL);
      bitDialogExp(bit_19,0)
      end
      else if ((cur_map_index == MAP_VILLA_PLAZA) and (bitDialog(bit_20) == 0)) then begin
      floater(self_obj, 120, COLOR_MSG_NORMAL);
      bitDialogExp(bit_20,0)
      end
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (global_var(GVAR_VILLA_STATUS_RAIDER_PARTY) >= 100) then begin
   partyRunToDude // Персонаж следует за ГГ
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure push_p_proc begin
   if (self_TEAM != TEAM_PLAYER) then begin
   script_overrides;
   end
   //push_options(HomeTile,5,110) // толкать (точка отсчета, макс расстояние, фраза над нпс при толкании), удалить если не надо
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   if (critter_is_fleeing(self_obj) == true) then begin
   critter_set_flee_state(self_obj, 0);
   end
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_VILLA_STATUS_RAIDER_PARTY, -10);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_VILLA_STATUS_RAIDER_PARTY)>=10) then begin
   call NodeSndDialog;
   end
   else if (bitDialog(bit_1) != 0) then begin
   call NodeFstDialog004;
   end
   else begin
   call NodeFstDialog001;
   end
end

//---

procedure NodeFstDialog001 begin
   Reply(200)
   NAnswer(201,4,NodeFstDialog002)
   NAnswer(230,-3,NodeFstDialog010)
end

procedure NodeFstDialog002 begin
   bitDialogExp(bit_1,0)
   Reply(202)
   zNAnswer(203,0,NodeFstDialog003)
end

procedure NodeFstDialog003 begin
   Reply(204)
   NAnswer(205,0,NodeFstDialog004)
end

procedure NodeFstDialog004 begin
   manyAmnt := 550;
   manyAmnt -= dude_charisma*50;

   if (global_var(GVAR_STATUS_FLAGSTAFF_FABER)<0) then begin
   Reply(mstr(207)+manyAmnt+mstr(208))
   end
   else begin
   Reply(mstr(206)+manyAmnt+mstr(208))
   end

   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=manyAmnt) then begin
   NAnswer(209,0,NodeFstDialog006)
   end
   NAnswerSkill(222,3,NodeFstDialog008,SKILL_CONVERSANT,65,222,NodeFstDialog009)
   BAnswer(210,0,NodeFstDialog005)
   NAnswer(211,0,NodeFstDialog005)
end

procedure NodeFstDialog005 begin
   Reply(212)
   NAnswer(213,0,Node999)
end

procedure NodeFstDialog006 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=manyAmnt) then begin
   call NodeFstDialog007;
   end
   else begin
   call NodeStartDialog;
   end
end

procedure NodeFstDialog007 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,manyAmnt)
   zReply(215)
   NAnswer(216,0,NodePartyAd)
end

procedure NodeFstDialog008 begin
   Reply(217)
   NAnswer(218,0,NodePartyAd)
end

procedure NodeFstDialog009 begin
   Reply(219)
   NAnswer(220,0,NodeFstDialog004)
   NAnswer(221,0,Node999)
end

procedure NodeFstDialog010 begin
   Reply(231)
   NAnswer(232,0,Node999)
end

//---

procedure NodeSndDialog begin
   Reply(random(260,269))

   NAnswer(300,4,NodeAnswer)

   if weapon_invn_self then begin
   NAnswer(252,4,NodeParty2)
   end
   if (inven_armor(self_obj) > 0) then begin
   NAnswer(255,4,NodeParty3)
   end

   if (global_var(GVAR_VILLA_STATUS_RAIDER_PARTY)>=100) then begin
   NAnswer(244,4,NodePartyDel)
   end
   else begin
   NAnswer(243,4,NodePartyAd)
   end

   NAnswer(251,0,Node999)
end

procedure NodeAnswer begin
   Reply(301)
   NAnswer(303,0,NodeAnswer100)
   NAnswer(306,0,NodeAnswer101)
   if (cur_town == AREA_FLAGSTAFF) then begin
   if (global_var(GVAR_STATUS_FLAGSTAFF_FABER)>=0) then begin
   NAnswer(308,0,NodeAnswer102)
   end
   end
   if (getQuest(GVAR_MAIN_QUEST_PHENIX) == qZero) then begin
   if (town_known(AREA_PHOENIX) == MARK_STATE_UNKNOWN) then begin
   NAnswer(310,0,NodeAnswer103)
   end
   end
   NAnswer(314,0,NodeAnswer105)
   NAnswer(302,0,NodeSndDialog)
end

procedure NodeAnswer100 begin
   Reply(304)
   NAnswer(305,0,NodeAnswer)
end

procedure NodeAnswer101 begin
   Reply(307)
   NAnswer(305,0,NodeAnswer)
end

procedure NodeAnswer102 begin
   Reply(309)
   NAnswer(305,0,NodeAnswer)
end

procedure NodeAnswer103 begin
   Reply(311)
   NAnswer(312,0,NodeAnswer104)
   NAnswer(305,0,NodeAnswer)
end

procedure NodeAnswer104 begin
   mark_on_map(AREA_PHOENIX)
   Reply(313)
   NAnswer(305,0,NodeAnswer)
end

procedure NodeAnswer105 begin
   Reply(315)
   NAnswer(305,0,NodeAnswer)
end

//---

procedure NodePartyAd begin
   if party_limit then begin
   set_global_var(GVAR_VILLA_STATUS_RAIDER_PARTY, 10);
   Reply(247)
   NAnswer(248,0,Node999)
   end
   else begin
   set_global_var(GVAR_VILLA_STATUS_RAIDER_PARTY, 100);
   rm_timer_event(self_obj);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   party_add(self_obj);
   Reply(240)
   NAnswer(242,0,NodeSndDialog)
   NAnswer(241,0,Node999)
   end
end

procedure NodePartyDel begin
   set_global_var(GVAR_VILLA_STATUS_RAIDER_PARTY, 10);
   set_local_var(LVAR_Home_Tile, self_tile);
   set_local_var(LVAR_Flags,0);
   off_enemy_dude;
   rm_timer_event(self_obj);
   party_remove(self_obj);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,NUM_TEAM);
   Reply(245)
   NAnswer(242,0,NodeSndDialog)
   NAnswer(246,0,Node999)
end

procedure NodeParty2 begin
   inven_unwield(self_obj);
   Reply(253)
   NAnswer(254,1,NodeSndDialog)
end

procedure NodeParty3 begin
   item_remove_armor(self_obj)
   Reply(256)
   NAnswer(257,1,NodeSndDialog)
end
