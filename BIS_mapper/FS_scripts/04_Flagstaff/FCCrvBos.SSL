#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCCrvBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_DRIVER     // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      90 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialogStop;
procedure NodeDialogStop2;
procedure NodeDialogStop3;
procedure NodeDialogStop4;
procedure NodeDialogStop5;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeRoadDialog;
procedure NodeDialogMap100;
procedure NodeDialogMap101;
procedure NodeDialogMap102;
procedure NodeDialogMap103;
procedure NodeRoad;
procedure NodeRoad100;
procedure NodeRoad101;
procedure NodeRoad102;
procedure NodeRoad103;
procedure NodeRoad200;
procedure NodeRoad300;
procedure NodeRoad301;
procedure NodeRoad302;
procedure NodeRoadEnd;
procedure NodeRoadEnd2;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer300;

//---------------------

#define LVAR_Caravan_Timer              (6) // время до исчезновения с карты

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (local_var(LVAR_Caravan_Timer) != 0) then begin
       set_local_var(LVAR_Home_Tile,tile_num_in_direction(dude_tile,random(0,5),1));
       end
       set_start_home

       if (cur_map_index == MAP_FLAGSTAFF_MINE) then begin
          if (map_first_run) then begin
          item_add(self_obj,PID_BOOTLE_CAPS,random(40,60))
          end
       end
       else begin
          party_remove(self_obj);
          critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,NUM_TEAM);
          set_obj_visibility(self_obj, 1);
          if (local_var(LVAR_Caravan_Timer) == 0) then begin
          set_local_var(LVAR_Caravan_Timer, (ONE_GAME_HOUR*24) + game_time);
          end
          if (local_var(LVAR_Caravan_Timer) >= game_time) then begin
          set_obj_visibility(self_obj, 0);
          end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       set_lvar_bit_on(LVAR_Dialog_Status, bit_6);
       set_local_var(LVAR_Caravan_Timer, 0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_SAN_BRAHMIN_SIGN,(7*24)+random(1,23));
   end
   if (fixed_param == 4) then begin
       set_local_var(LVAR_Caravan_Timer, 0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_PHOENIX_SIGN,(3*24)+random(1,23));
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_PHENIX_CULT,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   if (cur_map_index == MAP_PHOENIX_SIGN) then begin
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else if (cur_map_index == MAP_FLAGSTAFF_MINE) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else if (cur_map_index == MAP_SAN_BRAHMIN_SIGN) then begin
   dialog_proc(0,0,NodeDialogMap100,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (((getQuest(GVAR_FLAGSTAFF_SLAVES_RUN) == qEnd) and (global_var(GVAR_STATUS_FLAGSTAFF_FABER) == -1)) or (getQuest(GVAR_FLAGSTAFF_MINES_DESTROY) >= qEnd) or (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd)) then begin
   call NodeDialogStop;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ДРУГИЕ ЛОКАЦИИ

procedure NodeDialogMap100 begin
   Reply(400)
   NAnswer(401,1,NodeDialogMap101)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap101 begin
   Reply(402)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap102 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 4);
   call Node999;
end

procedure NodeDialogMap103 begin
   set_local_var(LVAR_Caravan_Timer,-1);
   set_obj_visibility(self_obj, 1);
   Reply(406)
   NAnswer(407,1,Node999)
end

//--- ПОПРАВКА ПРИ УНИЧТОЖЕНИИ КУЛЬТА

procedure NodeDialogStop begin
   Reply(250)
   NAnswer(251,1,NodeDialogStop2)
end

procedure NodeDialogStop2 begin
   bitDialogExp(bit_1,0)
   bitDialogExp(bit_5,25)
   Reply(252)
   NAnswer(253,1,NodeDialogStop3)
   NAnswer(258,1,NodeDialogStop4)
   NAnswer(260,1,NodeDialogStop5)
end

procedure NodeDialogStop3 begin
   if (getQuest(GVAR_FLAGSTAFF_MINES_DESTROY) >= qEnd) then begin
   Reply(255)
   end
   else if (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) then begin
   Reply(256)
   end
   else begin
   Reply(257)
   end
   NAnswer(258,1,NodeDialogStop4)
   NAnswer(260,1,NodeDialogStop5)
   NAnswer(254,1,Node999)
end

procedure NodeDialogStop4 begin
   Reply(259)
   NAnswer(253,1,NodeDialogStop3)
   NAnswer(260,1,NodeDialogStop5)
   NAnswer(254,1,Node999)
end

procedure NodeDialogStop5 begin
   Reply(261)
   NAnswer(253,1,NodeDialogStop3)
   NAnswer(258,1,NodeDialogStop4)
   NAnswer(254,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   Reply(210)
   NAnswer(211,1,NodeFstDialog2)
   NAnswer(212,1,Node999)
end

procedure NodeFstDialog2 begin
   Reply(213)
   NAnswer(214,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   bitDialogExp(bit_1,25)
   Reply(215)
   NAnswer(216,1,NodeAnswer)
   NAnswer(217,1,Node999)
end

//--- ВТОРОЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(200)

   NAnswer(218,1,NodeAnswer)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeRoadDialog begin
   if (bitDialog(bit_6) != 0) then begin
   NAnswer(330,1,NodeRoad300)
   end
   else if (getQuest(GVAR_MAIN_QUEST_PHENIX) >= qStart) then begin
   NAnswer(300,1,NodeRoad)
   end
end

//--- ПОЕЗДКА В ФЕНИКС

procedure NodeRoad begin
   Reply(301)
   NAnswer(310,1,NodeRoad100)
   NAnswerSkill(322,1,NodeRoad102,SKILL_BARTER,80,323,NodeRoad103)
   NAnswer(302,1,NodeAnswer)
   NAnswer(303,1,Node999)
end

procedure NodeRoad100 begin
   Reply(311)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 500) then begin
   NAnswer(312,1,NodeRoad101)
   end
   NAnswerSkill(322,1,NodeRoad102,SKILL_BARTER,80,323,NodeRoad103)
   NAnswer(302,1,NodeAnswer)
   NAnswer(313,1,Node999)
end

procedure NodeRoad101 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 500) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,500)
   call NodeRoad200;
   end
   else begin
   Reply(306)
   BAnswer(307,1,Node999)
   end
end

procedure NodeRoad102 begin
   Reply(315)
   NAnswer(316,1,NodeRoad200)
   NAnswer(317,1,Node999)
end

procedure NodeRoad103 begin
   Reply(318)
   NAnswer(310,1,NodeRoad100)
   NAnswer(302,1,NodeAnswer)
   NAnswer(319,1,Node999)
end

procedure NodeRoad200 begin
   bitDialogExp(bit_6,100)
   Reply(320)
   NAnswer(321,1,Node999)
end

procedure NodeRoad300 begin
   if (who_carry_amount(dude_obj) > 50) then begin
   Reply(332)
   NAnswerSkill(334,3,NodeRoad301,SKILL_CONVERSANT,50,334,NodeRoad302)
   NAnswer(335,1,NodeAnswer)
   NAnswer(333,1,Node999)
   end
   else begin
   call NodeRoadEnd;
   end
end

procedure NodeRoad301 begin
   Reply(336)
   NAnswer(337,1,NodeRoadEnd)
end

procedure NodeRoad302 begin
   Reply(331)
   NAnswer(333,1,Node999)
end

procedure NodeRoadEnd begin
   Reply(338)
   NAnswer(339,1,NodeRoadEnd2)
end

procedure NodeRoadEnd2 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end

//--- РАССПРОСЫ

procedure NodeAnswer begin
   Reply(220)
   NAnswerSkill(221,1,NodeAnswer100,SKILL_CONVERSANT,40,221,NodeAnswer100)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeAnswer100 begin
   if (dude_skill(SKILL_CONVERSANT,40) or (bitDialog(bit_4) != 0)) then begin
      bitDialogExp(bit_2,35)
      Reply(222)
      NAnswer(223,1,NodeAnswer101)
      NAnswer(225,1,NodeAnswer102)
   end
   else begin
      Reply(227)
      NAnswer(238,1,NodeAnswer104)
   end

   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeAnswer101 begin
   mark_on_map(AREA_SAN_BRAHMIN)
   Reply(224)

   NAnswer(225,1,NodeAnswer102)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeAnswer102 begin
   mark_on_map(AREA_PHOENIX)
   Reply(226)

   NAnswer(228,3,NodeAnswer103)
   NAnswer(223,1,NodeAnswer101)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeAnswer103 begin
   if (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) then begin
   Reply(243)
   end
   else begin
   Reply(229)
   end

   NAnswer(223,1,NodeAnswer101)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   call NodeRoadDialog;
   NAnswer(201,1,Node999)
end

procedure NodeAnswer104 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 30) then begin
   bitDialogExp(bit_4,20)
   item_remove(dude_obj,PID_BOOTLE_CAPS,30)
   item_add(self_obj,PID_BOOTLE_CAPS,30)
   Reply(239)
   NAnswer(240,1,NodeAnswer100)
   end
   else begin
   Reply(241)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(236,1,NodeAnswer300)
   NAnswer(242,1,Node999)
   end
end

procedure NodeAnswer200 begin
   Reply(231)

   NAnswer(232,5,NodeAnswer201)
   NAnswerSkill(221,1,NodeAnswer100,SKILL_CONVERSANT,40,221,NodeAnswer100)
   NAnswer(236,1,NodeAnswer300)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer201 begin
   bitDialogExp(bit_3,25)
   Reply(233)

   NAnswer(234,6,NodeAnswer202)
   NAnswerSkill(221,1,NodeAnswer100,SKILL_CONVERSANT,40,221,NodeAnswer100)
   NAnswer(236,1,NodeAnswer300)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer202 begin
   Reply(235)

   NAnswerSkill(221,1,NodeAnswer100,SKILL_CONVERSANT,40,221,NodeAnswer100)
   NAnswer(236,1,NodeAnswer300)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(237)

   NAnswerSkill(221,1,NodeAnswer100,SKILL_CONVERSANT,40,221,NodeAnswer100)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(201,1,Node999)
end
