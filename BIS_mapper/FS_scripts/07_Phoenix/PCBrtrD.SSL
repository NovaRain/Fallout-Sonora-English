#include "..\headers\define.h"
//--------------------- ЗАКУСОЧНАЯ

#define NAME                            SCRIPT_PCBrtrD
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        13                    // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_PHOENIX_CITIZEN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      100 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeBarter;
procedure NodeSndDialog;
procedure NodeQstCult;
procedure NodeQstCult2;
procedure NodeQstCult3;
procedure NodeQstCult4;
procedure NodeQstCult5;
procedure NodeQstCult6;
procedure NodeQstCult7;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer200;
procedure NodeAnswer201;

//---------------------

//#define LVAR_Flag_A                     (8) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
        //check_restock_item(PID_M_WATER_FLASK, 2, 4, 100)
        check_restock_item(PID_M_NUKA_COLA, 3, 6, 100)
        check_restock_item(PID_M_NOODLES, 1, 3, 30)
        check_restock_item(PID_M_FRUIT, 1, 3, 30)
        if ((getQuest(GVAR_BRAHMIN_QST_COMMANDER) >= qEnd) and (getQuest(GVAR_BRAHMIN_QST_GERONIMO) == 10)) then begin
        check_restock_item(PID_M_MEAT_JERKY, 3, 6, 100)
        end
        check_restock_item(PID_M_IGUANA, 4, 8, 100)
        check_restock_item(PID_M_SOUP_RAT, 5, 8, 100)

        //- крышки
        check_restock_many(180,220)
end

procedure setBarterB begin
        check_restock_item(PID_M_TV_DINNER, 2, 3, 100)

   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_PNX_BARTER_D,-1);
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_PHENIX_CULT,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-10) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) and (bitDialog(bit_20) == 0)) then begin
   incBarterMod(20);
   bitDialogExp(bit_20,0)
   end

   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeBarter)
end

procedure NodeBarter begin
   goBarterMod;
   call NodeStartDialog;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)

   NAnswer(220,1,NodeAnswer100)
   if (get_BarterDopusk == 0) then begin
      NAnswer(223,4,NodeAnswer101)
   end
   if (bitDialog(bit_3) == 0) then begin
      if ((getQuest(GVAR_BRAHMIN_QST_COMMANDER) >= qEnd) and (getQuest(GVAR_BRAHMIN_QST_GERONIMO) == 10)) then begin
      NAnswer(241,3,NodeAnswer105)
      end
   end

   //--- Нападение на Последователей
   if (getQuest(GVAR_PHENIX_QST_CULT_A) == qStart) then begin
   if ((global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 1) or (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 3)) then begin
      NAnswer(300,1,NodeQstCult)
      end
   end

   //--- Ллойд
   if (map_var(MVAR_PNX_LLOYD_STATUS) == -10) then begin
   NAnswer(250,1,NodeAnswer200)
   end

   NAnswer(211,1,Node999)
end

//--- НАПАДЕНИЕ НА ПОСЛЕДОВАТЕЛЕЙ

procedure NodeQstCult begin
   Reply(301)
   NAnswer(302,1,NodeQstCult2)
   NAnswer(305,1,NodeQstCult3)
   BAnswer(310,3,NodeQstCult5)
end

procedure NodeQstCult2 begin
   Reply(303)
   NAnswer(304,1,Node999)
end

procedure NodeQstCult3 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   call NodeQstCult4;
   end
   else begin
   Reply(306)
   BAnswer(310,3,NodeQstCult5)
   zNAnswer(307,1,Node999)
   end
end

procedure NodeQstCult4 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,10)
   Reply(308)
   NAnswer(309,1,NodeQstCult6)
end

procedure NodeQstCult5 begin
   set_REP(-1)
   set_SLAVA(-5)
   setBonusReaction(-20)
   Reply(311)
   NAnswer(312,1,NodeQstCult6)
end

procedure NodeQstCult6 begin
   Reply(313)
   BAnswer(314,1,NodeQstCult7)
   NAnswer(317,1,NodeQstCult7)
end

procedure NodeQstCult7 begin
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 1) then begin
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,2);
   display_mstr(315);
   end
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 3) then begin
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,5);
   display_mstr(316);
   end
   call Node999;
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(222,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(224)
   NAnswerSkill(225,1,NodeAnswer103,SKILL_BARTER,30,225,NodeAnswer102)
   if (global_var(GVAR_TITUL_PHENIX_CULT) >0) then begin
   NAnswer(230,1,NodeAnswer103)
   end
   NAnswer(231,1,NodeAnswer104)
   NAnswerRep(234,1,NodeAnswer103,15,234,NodeAnswer102)
   if (get_SLAVA >= 250) then begin
   NAnswer(235,1,NodeAnswer103)
   end
   else if (get_SLAVA <= -250) then begin
   BAnswer(236,1,NodeAnswer103)
   end
   BAnswer(226,1,NodeSndDialog)
   NAnswer(227,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   Reply(237)
   NAnswer(238,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   call setBarterB;
   Reply(228)
   NAnswer(229,1,NodeBarter)
end

procedure NodeAnswer104 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,10)
   zReply(232)
   NAnswer(233,1,NodeAnswer103)
   end
   else begin
   Reply(239)
   NAnswer(240,1,Node999)
   end
end

procedure NodeAnswer105 begin
   Reply(242)
   NAnswer(243,1,NodeAnswer106)
end

procedure NodeAnswer106 begin
   bitDialogExp(bit_3,0)
   Reply(244)
   zNAnswer(245,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   set_map_var(MVAR_PNX_LLOYD_STATUS,-11);
   Reply(251)
   NAnswer(252,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   zReply(253)
   NAnswer(254,1,Node999)
   BAnswer(255,1,Node999)
end
