#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_AFCaptan
#define TOWN_REP_VAR                    GVAR_TOWN_REP_OIL_PLATFORM // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_OIL_PLATFORM_CTZN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      35 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;
procedure NodeStopDialog2;
procedure NodeStopDialog3;
procedure NodeFinalDialog;
procedure NodeFinalDialog2;
procedure NodeFinalDialog3;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer102b;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;
procedure NodeAnswer306;
procedure NodeAnswer399;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeQst300;
procedure NodeQst301;
procedure NodeQst302;
procedure NodeQst303;
procedure NodeQst304;
procedure NodeQst400;
procedure NodeQst401;
procedure NodeQst402;
procedure NodeQst403;
procedure NodeQst404;
procedure NodeQst405;
procedure NodeQst406;
procedure NodeQst407;
procedure NodeQst408;
procedure NodeQst409;
procedure NodeQst410;
procedure NodeQst411;
procedure NodeQst412;
procedure NodeQst413;
procedure NodeQst414;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_using_stop
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_OIL_PLATFORM_QST_A, qStop);
   setQuest(GVAR_OIL_PLATFORM_QST_B, qStop);
   setQuest(GVAR_OIL_PLATFORM_QST_C, qStop);
   setQuest(GVAR_OIL_PLATFORM_QST_KILL, qStop);
   set_map_var(MVAR_OIL_PLATFORM_KILL_B, -1);
   set_map_var(MVAR_OIL_PLATFORM_KILL_C, -1);
   set_map_var(MVAR_OIL_PLATFORM_KILL_D, -1);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (map_var(MVAR_OIL_PLATFORM_GHOULSAMNT) > 0) then begin
   floater(self_obj, 102, COLOR_MSG_RED);
   end
   else if (dude_tile == tile_num_in_direction(self_tile,1,1)) then begin
   floater(self_obj, 107, COLOR_MSG_RED);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   //!!! реакция на гуля

   if ((getQuest(GVAR_OIL_PLATFORM_STATUS) >= qEnd) and (getQuest(GVAR_OIL_PLATFORM_QST_A) < qEnd)) then begin
   call NodeFinalDialog;
   end
   else if ((bitDialog(bit_4) == 0) and (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd)) then begin
   call NodeStopDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- СТОП-ДИАЛОГ

procedure NodeStopDialog begin
   bitDialogExp(bit_4,0)
   Reply(290)
   BAnswer(291,1,NodeStopDialog2)
   zNAnswer(295,1,NodeStopDialog3)
end

procedure NodeStopDialog2 begin
   Reply(292)
   NAnswer(293,1,Node999)
   zNAnswer(294,1,Node999)
end

procedure NodeStopDialog3 begin
   Reply(296)
   NAnswer(297,1,Node999)
   NAnswer(298,1,Node999)
end

//--- ЗАВЕРШЕНИЕ КВЕСТА

procedure NodeFinalDialog begin
   setQuest(GVAR_OIL_PLATFORM_QST_A, qEnd);
   if (getQuest(GVAR_OIL_PLATFORM_QST_B) == qZero) then begin
   setQuest(GVAR_OIL_PLATFORM_QST_B, qStart);
   end
   bitDialogExp(bit_1,0)
   set_REP(25)
   set_SLAVA(50)
   setBonusReaction(80)

   zReply(280)
   GAnswer(281,1,NodeFinalDialog2)
   NAnswer(284,1,NodeFinalDialog3)
end

procedure NodeFinalDialog2 begin
   set_REP(5)
   set_SLAVA(25)
   setBonusReaction(20)
   Reply(282)
   NAnswer(283,1,Node999)
end

procedure NodeFinalDialog3 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,1000)
   Reply(285)
   NAnswer(286,1,Node999)
end

//--- ЗНАКОМСТВО

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   if (getQuest(GVAR_PUERTO_QST_INFERNO) >= qStart) then begin
   NAnswer(206,1,NodeFstDialog3)
   end
   else if (getQuest(GVAR_PUERTO_QST_SANFELIPE_PIP) >= qStart) then begin
   NAnswer(206,1,NodeFstDialog3)
   end
   else if (getQuest(GVAR_PUERTO_QST_RANGERS) >= qStart) then begin
   NAnswer(206,1,NodeFstDialog3)
   end
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(220,1,NodeAnswer101)
   if (getQuest(GVAR_OIL_PLATFORM_QST_A) == qZero) then begin
   NAnswer(204,1,NodeQst100)
   end
   NAnswer(203,1,Node999)
end

procedure NodeFstDialog3 begin
   Reply(207)
   NAnswer(220,1,NodeAnswer101)
   if (getQuest(GVAR_OIL_PLATFORM_QST_A) == qZero) then begin
   NAnswer(205,1,NodeQst100)
   end
   NAnswer(208,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction>=50) then begin
   Reply(211)
   end
   else if (getReaction<=-50) then begin
   Reply(212)
   end
   else begin
   Reply(210)
   end

   //--- Основной квест локации

   if (getQuest(GVAR_OIL_PLATFORM_QST_A) == qZero) then begin
      NAnswer(209,1,NodeQst100)
   end
   if (getQuest(GVAR_OIL_PLATFORM_QST_A) == qStart) then begin
      NAnswer(225,1,NodeAnswer103)
   end

   if (getQuest(GVAR_OIL_PLATFORM_QST_B) == qStart) then begin
      if (map_var(MVAR_OIL_PLATFORM_POISON)>=3) then begin
      GAnswer(270,1,NodeQst200)
      end
   end

   //--- Квест на поиск расхитителя рыб

   if (getQuest(GVAR_OIL_PLATFORM_QST_C) == qStart) then begin
      if (global_var(GVAR_OIL_STATUS_GHOUL) != 0) then begin
      GAnswer(324,1,NodeQst301)
      end
   end
   if (getQuest(GVAR_OIL_PLATFORM_QST_C) == qZero) then begin
      if (getQuest(GVAR_OIL_PLATFORM_QST_A) > qZero) then begin
      NAnswer(320,1,NodeQst300)
      end
      else begin
      NAnswer(334,1,NodeQst300)
      end
   end

   //--- Побочные расспросы

   NAnswer(220,1,NodeAnswer101)
   NAnswer(340,1,NodeAnswer301)

   if (getQuest(GVAR_PUERTO_QST_INFERNO) == qStart) then begin
      if (map_var(MVAR_OIL_PLATFORM_INFIERNOINFO) == 0) then begin
      NAnswer(300,3,NodeAnswer201)
      end
   end

   if (getQuest(GVAR_PUERTO_QST_SANFELIPE_PIP) == qStart) then begin
      if (bitDialog(bit_3) == 0) then begin
      NAnswer(310,3,NodeAnswer203)
      end
   end

   if (getQuest(GVAR_OIL_PLATFORM_QST_KILL) == qStart) then begin
      if (gvar_bit(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_1) == 0) then begin
      NAnswer(360,1,NodeQst400)
      end
      else begin
      NAnswer(374,1,NodeQst407)
      end
   end

   NAnswer(213,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer101 begin
   Reply(221)
   NAnswer(222,4,NodeAnswer102)
   NAnswer(223,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,20)
   Reply(224)
   if (town_known(AREA_PUERTO_STEEL) == MARK_STATE_UNKNOWN) then begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(232,1,NodeAnswer102b)
   end
   end
   NAnswer(223,1,NodeSndDialog)
end

procedure NodeAnswer102b begin
   mark_on_map(AREA_PUERTO_STEEL)
   Reply(233)
   NAnswer(223,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(226)
   NAnswer(227,1,NodeAnswer104)
   NAnswer(230,1,NodeAnswer105)
   if (town_known(AREA_PUERTO_STEEL) == MARK_STATE_VISITED) then begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(263,1,NodeAnswer106)
   end
   end
   NAnswer(229,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(228)
   NAnswer(230,1,NodeAnswer105)
   if (town_known(AREA_PUERTO_STEEL) == MARK_STATE_VISITED) then begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(263,1,NodeAnswer106)
   end
   end
   NAnswer(229,1,NodeSndDialog)
end

procedure NodeAnswer105 begin
   Reply(231)
   NAnswer(227,1,NodeAnswer104)
   if (town_known(AREA_PUERTO_STEEL) == MARK_STATE_VISITED) then begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(263,1,NodeAnswer106)
   end
   end
   NAnswer(229,1,NodeSndDialog)
end

procedure NodeAnswer106 begin
   //Важно: Reply здесь одиннаков с NodeQst106, остальное другое
   Reply(264)
   NAnswer(227,1,NodeAnswer104)
   NAnswer(230,1,NodeAnswer105)
   NAnswer(229,1,NodeSndDialog)
end

//---

procedure NodeAnswer201 begin
   Reply(301)
   NAnswer(302,1,NodeAnswer202)
end

procedure NodeAnswer202 begin
   set_map_var(MVAR_OIL_PLATFORM_INFIERNOINFO, 1);
   Reply(303)
   NAnswer(304,1,NodeSndDialog)
   NAnswer(305,1,Node999)
end

procedure NodeAnswer203 begin
   bitDialogExp(bit_3,0)
   Reply(311)
   zNAnswer(312,1,NodeSndDialog)
end

//---

procedure NodeAnswer301 begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd) then begin
      Reply(341)
      NAnswer(342,1,NodeAnswer303)
   end
   else begin
      call NodeAnswer302;
   end
end

procedure NodeAnswer302 begin
   if (getQuest(GVAR_OIL_PLATFORM_QST_A) >= qEnd) then begin
   Reply(344)
   end
   else begin
   Reply(343)
   end
   NAnswer(342,1,NodeAnswer304)
end

procedure NodeAnswer303 begin
   if (getQuest(GVAR_OIL_PLATFORM_QST_A) >= qEnd) then begin
   Reply(mstr(345)+mstr(344))
   end
   else begin
   Reply(343)
   end
   NAnswer(342,1,NodeAnswer304)
end

procedure NodeAnswer304 begin
   if (global_var(GVAR_OIL_STATUS_GOLD) < 0) then begin
      Reply(347)
   end
   else if (getQuest(GVAR_OIL_PLATFORM_QST_GOLD) >= qEnd) then begin
      if (global_var(GVAR_OIL_STATUS_GOLD) >= 3) then begin
      Reply(348)
      end
      else begin
      Reply(356)
      end
   end
   else begin
      zReply(346)
   end
   NAnswer(342,1,NodeAnswer305)
end

procedure NodeAnswer305 begin
   if (getQuest(GVAR_PUERTO_QST_SANFELIPE_PIP) >= qEnd) then begin
   Reply(350)
   end
   else begin
   Reply(349)
   end
   NAnswer(342,1,NodeAnswer306)
end

procedure NodeAnswer306 begin
   if (getQuest(GVAR_OIL_PLATFORM_QST_C) >= qEnd) then begin
   Reply(352)
   end
   else begin
   Reply(351)
   end
   NAnswer(342,1,NodeAnswer399)
end

procedure NodeAnswer399 begin
   Reply(353)
   NAnswer(354,1,NodeSndDialog)
   NAnswer(355,1,Node999)
end

//--- КВЕСТЫ

procedure NodeQst100 begin
   setQuest(GVAR_OIL_PLATFORM_QST_A, qStart);
   setQuest(GVAR_OIL_PLATFORM_QST_B, qStart);
   Reply(250)
   NAnswer(251,1,NodeQst101)
end

procedure NodeQst101 begin
   Reply(252)
   NAnswer(253,1,NodeQst102)
end

procedure NodeQst102 begin
   Reply(254)
   NAnswer(255,1,NodeQst103)
end

procedure NodeQst103 begin
   Reply(256)
   NAnswer(257,1,NodeQst104)
end

procedure NodeQst104 begin
   Reply(258)
   if (town_known(AREA_PUERTO_STEEL) == MARK_STATE_VISITED) then begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(263,1,NodeQst106)
   end
   end
   GAnswer(259,1,NodeQst105)
   NAnswer(260,1,Node999)
end

procedure NodeQst105 begin
   Reply(261)
   NAnswer(262,1,Node999)
end

procedure NodeQst106 begin
   //Важно: Reply здесь одиннаков с NodeAnswer106, остальное другое
   Reply(264)
   GAnswer(259,1,NodeQst105)
   NAnswer(260,1,Node999)
end

procedure NodeQst200 begin
   setQuest(GVAR_OIL_PLATFORM_QST_B, qEnd);
   exp_add(300);
   set_REP(6)
   set_SLAVA(3)
   setBonusReaction(25)

   Reply(271)
   BAnswer(273,1,NodeQst201)
   NAnswer(272,1,Node999)
end

procedure NodeQst201 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,120)
   setBonusReaction(-20)
   set_REP(-3)
   set_SLAVA(-3)
   zReply(274)
   NAnswer(275,1,Node999)
end

procedure NodeQst300 begin
   setQuest(GVAR_OIL_PLATFORM_QST_C, qStart);
   Reply(321)
   NAnswer(322,1,Node999)
   NAnswer(323,1,NodeSndDialog)
end

procedure NodeQst301 begin
   Reply(325)
   if (global_var(GVAR_OIL_STATUS_GHOUL) > 0) then begin
   NAnswer(335,1,NodeQst302)
   end
   else begin
   NAnswer(326,1,NodeQst302)
   end
end

procedure NodeQst302 begin
   setQuest(GVAR_OIL_PLATFORM_QST_C, qEnd);
   setBonusReaction(20)
   exp_add(200);
   Reply(327)
   NAnswer(328,1,NodeQst303)
   if (town_known(AREA_INFIERNO) == MARK_STATE_VISITED) then begin
   NAnswer(333,1,NodeQst304)
   end
end

procedure NodeQst303 begin
   mark_on_map(AREA_INFIERNO)
   Reply(329)
   NAnswer(330,1,NodeQst304)
end

procedure NodeQst304 begin
   if (global_var(GVAR_OIL_STATUS_GHOUL) > 0) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,10)
   Reply(336)
   NAnswer(337,1,Node999)
   BAnswer(338,1,Node999)
   end
   else begin
   item_add(dude_obj,PID_BOOTLE_CAPS,50)
   Reply(331)
   NAnswer(332,1,Node999)
   end
end

procedure NodeQst400 begin
   if (gvar_bit(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_1) == 0) then begin
   set_gvar_bit_on(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_1);
   end
   Reply(361)
   NAnswer(362,1,NodeQst401)
   BAnswer(363,1,NodeQst401)
end

procedure NodeQst401 begin
   PLAY_FADE
   Reply(364)
   NAnswer(379,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
end

procedure NodeQst402 begin
   Reply(366)
   NAnswer(365,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)
   NAnswer(373,1,Node999)
end

procedure NodeQst403 begin
   if (map_var(MVAR_OIL_PLATFORM_KILL_B) == 0) then begin
   set_map_var(MVAR_OIL_PLATFORM_KILL_B, 1);
   end
   Reply(368)
   NAnswer(365,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)
   NAnswer(373,1,Node999)
end

procedure NodeQst404 begin
   Reply(370)
   NAnswer(379,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)
   NAnswer(373,1,Node999)
end

procedure NodeQst405 begin
   if (map_var(MVAR_OIL_PLATFORM_KILL_C) == 0) then begin
   set_map_var(MVAR_OIL_PLATFORM_KILL_C, 1);
   end
   Reply(372)
   NAnswer(365,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)
   NAnswer(373,1,Node999)
end

procedure NodeQst406 begin
   Reply(378)
   NAnswer(365,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)
   NAnswer(373,1,Node999)
end

procedure NodeQst407 begin
   Reply(375)
   NAnswer(379,1,NodeQst402)
   NAnswer(367,1,NodeQst403)
   NAnswer(369,1,NodeQst404)
   NAnswer(371,1,NodeQst405)
   NAnswer(377,1,NodeQst406)

   if ((map_var(MVAR_OIL_PLATFORM_KILL_B) == 2) and (map_var(MVAR_OIL_PLATFORM_KILL_C) == 2)) then begin
   NAnswer(386,1,NodeQst410)
   end
   else if (map_var(MVAR_OIL_PLATFORM_KILL_C) == 2) then begin
   NAnswer(383,1,NodeQst409)
   end
   else if (map_var(MVAR_OIL_PLATFORM_KILL_B) == 2) then begin
   NAnswer(380,1,NodeQst408)
   end

   if (gvar_bit(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_3) != 0) then begin
   NAnswer(389,1,NodeQst411)
   end

   NAnswer(376,1,Node999)
end

procedure NodeQst408 begin
   Reply(381)
   NAnswer(382,1,Node999)
end

procedure NodeQst409 begin
   Reply(384)
   NAnswer(385,1,Node999)
end

procedure NodeQst410 begin
   if (map_var(MVAR_OIL_PLATFORM_KILL_D) == 0) then begin
   set_map_var(MVAR_OIL_PLATFORM_KILL_D, 1);
   end
   Reply(387)
   NAnswer(388,1,Node999)
end

procedure NodeQst411 begin
   Reply(390)
   NAnswer(392,1,NodeQst412)
   NAnswer(391,1,Node999)
end

procedure NodeQst412 begin
   Reply(393)
   if (map_var(MVAR_OIL_PLATFORM_KILL_B) < 0) then begin
   NAnswer(394,1,NodeQst413)
   end
   else begin
   NAnswer(398,1,NodeQst414)
   end
end

procedure NodeQst413 begin
   setQuest(GVAR_OIL_PLATFORM_QST_KILL, qEnd);
   exp_add(750);
   set_REP(3)
   Reply(395)
   NAnswer(396,1,Node999)
   BAnswer(397,1,Node999)
end

procedure NodeQst414 begin
   setQuest(GVAR_OIL_PLATFORM_QST_KILL, qEnd);
   exp_add(750);
   set_REP(3)
   Reply(399)
   NAnswer(396,1,Node999)
   BAnswer(397,1,Node999)
end
