#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCBdBkr
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_BANDIT   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog200;
procedure NodeSndDialog201;
procedure NodeSndDialog202;
procedure NodeSndDialog300;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
   end
end

procedure map_update_p_proc begin
   if ((global_var(GVAR_CAR_MAP_INDEX) == cur_map_index) and (dude_has_car == 0)) then begin
   set_obj_visibility(self_obj, 0);
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   inc_map_var(MVAR_PNX_BAIK_KILLER);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if ((global_var(GVAR_CAR_MAP_INDEX) == cur_map_index) and (dude_has_car == 0)) then begin
      if (item_amnt(self_obj,PID_MOTO_KEY) > 0) then begin
      dialog_proc(1,102,NodeStartDialog,-1,-1)
      end
      else begin
      floater(self_obj,104,COLOR_MSG_RED);
      end
   end
   else begin
      floater(self_obj,103,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(202,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(203)
   NAnswer(204,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(205)
   BAnswer(206,1,NodeSndDialog100)
   NAnswer(207,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (bitDialog(bit_2) == 0) then begin
      zReply(210)
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 500) then begin
      NAnswer(230,1,NodeSndDialog200)
      end
   end
   else begin
      zReply(211)
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 700) then begin
      NAnswer(230,1,NodeSndDialog201)
      end
   end
   BAnswer(220,1,NodeSndDialog100)
   if (global_var(GVAR_TITUL_ARENA_MASTER) > 0) then begin
   BAnswer(240,1,NodeSndDialog300)
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   BAnswer(241,1,NodeSndDialog300)
   end
   else if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   BAnswer(242,1,NodeSndDialog300)
   end
   NAnswer(212,1,Node999)
end

procedure NodeSndDialog100 begin
   Reply(221)
   BAnswer(222,1,Node998)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(223,1,NodeSndDialog101)
   end else begin
   NAnswer(223,1,Node999)
   end
end

procedure NodeSndDialog101 begin
   bitDialogExp(bit_2,0)
   Reply(224)
   BAnswer(226,1,Node998)
   NAnswer(225,1,Node999)
end

procedure NodeSndDialog200 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,500)
   item_add(self_obj,PID_BOOTLE_CAPS,500)
   call NodeSndDialog202;
end

procedure NodeSndDialog201 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,700)
   item_add(self_obj,PID_BOOTLE_CAPS,700)
   call NodeSndDialog202;
end

procedure NodeSndDialog202 begin
   item_remove(self_obj,PID_MOTO_KEY,1)
   item_add(dude_obj,PID_MOTO_KEY,1)
   Reply(231)
   BAnswer(234,1,Node998)
   NAnswer(232,1,Node999)
   BAnswer(233,1,Node999)
end

procedure NodeSndDialog300 begin
   item_remove(self_obj,PID_MOTO_KEY,1)
   item_add(dude_obj,PID_MOTO_KEY,1)
   Reply(243)
   BAnswer(244,1,Node999)
   NAnswer(245,1,Node999)
end
