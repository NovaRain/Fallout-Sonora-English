#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCBdBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_CITIZEN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      (SLAVA_KILL_GOOD*2)   // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   (REP_KILL_GOOD*2)     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog100;
procedure NodeFstDialog100b;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog202;
procedure NodeFstDialog203;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;

procedure NodeSndDialog;
procedure NodeStopDialog100;
procedure NodeStopDialog101;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog200;
procedure NodeStopDialog201;
procedure NodeStopDialog202;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeAnswer109;
procedure NodeAnswer110;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst201;
procedure NodeQst202;
procedure NodeQst203;
procedure NodeQst204;
procedure NodeQst205;
procedure NodeQst206;
procedure NodeQst207;
procedure NodeQst208;
procedure NodeQst209;
procedure NodeQst210;
procedure NodeQst211;
procedure NodeQst212;
procedure NodeQst213;
procedure NodeQst214;
procedure NodeQst215;
procedure NodeQst216;
procedure NodeQstCult;
procedure NodeQstCult2;
procedure NodeQstCult101;
procedure NodeQstCult102;
procedure NodeQstCult103;
procedure NodeQstCult200;
procedure NodeQstCult201;
procedure NodeQstCult202;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_first_run) then begin
       item_add(self_obj,PID_BOOTLE_CAPS,10+dude_luck)
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_BNDCSBOSS,-1);
   setQuest(GVAR_PHENIX_QST_REKET,qStop);
   if (getQuest(GVAR_PHENIX_QST_BNDCS_PIP) <= qStart) then begin
   setQuest(GVAR_PHENIX_QST_BNDCS_PIP,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_A) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_BNDCS_A,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_B) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_C) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_BNDCS_C,qStop);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (getQuest(GVAR_PHENIX_QST_REKET) == qStart) then begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_PHENIX_CULT,-20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_ARENA_MASTER,30) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(1,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((getQuest(GVAR_PHENIX_QST_REKET) == qEnd) and (bitDialog(bit_5) == 0)) then begin
   call NodeStopDialog200;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((global_var(GVAR_TITUL_ARENA_MASTER) > 0) and (bitDialog(bit_3) == 0)) then begin
   call NodeFstDialog302;
   end
   else if ((global_var(GVAR_PHENIX_STATUS_DRUGDILLER) < 0) and (bitDialog(bit_2) == 0)) then begin
   call NodeStopDialog100;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if (global_var(GVAR_TITUL_ARENA_MASTER) > 0) then begin
   call NodeFstDialog300;
   end
   else if town_rep_is_liked then begin
   call NodeFstDialog200;
   end
   else if (game_time_hour < 0600) then begin
   call NodeFstDialog100b;
   end
   else begin
   call NodeFstDialog100;
   end
end

procedure NodeFstDialog100 begin
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(2200)
   end
   else begin
   Reply(200)
   end
   NAnswer(201,1,NodeFstDialog101)
   NAnswer(210,1,NodeFstDialog104)
end

procedure NodeFstDialog100b begin
   Reply(213)
   NAnswer(214,1,NodeFstDialog100)
   BAnswer(215,1,NodeFstDialog100)
end

procedure NodeFstDialog101 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(2206)
   end
   else begin
   Reply(206)
   end
   NAnswer(209,1,NodeSndDialog)
   NAnswer(207,1,Node999)
   NAnswer(208,1,Node999)
end

procedure NodeFstDialog104 begin
   Reply(211)
   NAnswer(212,1,NodeFstDialog103)
end

procedure NodeFstDialog200 begin
   Reply(220)
   NAnswer(221,1,NodeFstDialog201)
   NAnswer(228,1,NodeFstDialog203)
end

procedure NodeFstDialog201 begin
   Reply(222)
   NAnswer(223,1,NodeFstDialog202)
end

procedure NodeFstDialog202 begin
   Reply(224)
   NAnswer(227,1,NodeSndDialog)
   BAnswer(225,1,Node999)
   NAnswer(226,1,Node999)
end

procedure NodeFstDialog203 begin
   Reply(229)
   NAnswer(230,1,NodeFstDialog202)
end

procedure NodeFstDialog300 begin
   bitDialogExp(bit_3,0)
   Reply(240)
   NAnswer(241,1,NodeFstDialog301)
end

procedure NodeFstDialog301 begin
   Reply(242)
   NAnswer(243,1,NodeSndDialog)
   BAnswer(244,1,Node999)
   NAnswer(245,1,Node999)
end

procedure NodeFstDialog302 begin
   bitDialogExp(bit_3,0)
   Reply(246)
   NAnswer(247,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction >= 50) then begin
   Reply(301)
   end
   else if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(305)
   end
   else if (getReaction <= -50) then begin
   Reply(302)
   end
   else if (getReaction < 0) then begin
   Reply(304)
   end
   else begin
   Reply(300)
   end

   //--- Вопросы
   NAnswer(350,1,NodeAnswer)

   if (getQuest(GVAR_PHENIX_QST_LETTERS) == qEnd) then begin
      if (gvar_bit(GVAR_DIALOGS_FLAGS_BIT, bit_21) == 0) then begin
      NAnswer(361,1,NodeAnswer104)
      end
   end

   //--- Нападение на Последователей
   if (getQuest(GVAR_PHENIX_QST_CULT_A) == qStart) then begin
      if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 1) then begin
      BAnswer(310,1,NodeQstCult)
      end
      else if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 2) then begin
      BAnswer(310,1,NodeQstCult)
      end
      if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 3) then begin
      NAnswer(333,1,NodeQstCult2)
      end
      else if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 5) then begin
      NAnswer(333,1,NodeQstCult2)
      end
   end

   //--- Квесты
   if (getQuest(GVAR_PHENIX_QST_BNDCS_A) == qStart) then begin
      NAnswer(385,1,NodeQst101)
      if (global_var(GVAR_PHENIX_STATUS_NARK)<0) then begin
      BAnswer(391,1,NodeQst103)
      end
      if (global_var(GVAR_PHENIX_STATUS_NARK)>0) then begin
      GAnswer(398,1,NodeQst106)
      end
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_B) == qStart) then begin
      NAnswer(388,1,NodeQst102)
      if (global_var(GVAR_PHENIX_STATUS_LOH)<0) then begin
      BAnswer(410,1,NodeQst201)
      end
      else if ((getQuest(GVAR_PHENIX_QST_LOH) >= qEnd) or (getQuest(GVAR_PHENIX_QST_CASINO_DEBT) >= qEnd)) then begin
      GAnswer(415,1,NodeQst203)
      end
      else if (map_var(MVAR_PNX_LOH_HOME) == 1) then begin
      NAnswer(407,1,NodeQst215)
      end
      else if (map_var(MVAR_PNX_LOH_HOME) == 2) then begin
      GAnswer(404,1,NodeQst216)
      end
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_A) >= qEnd) then begin
   if (getQuest(GVAR_PHENIX_QST_BNDCS_B) >= qEnd) then begin
      if (getQuest(GVAR_PHENIX_QST_BNDCS_C) == qZero) then begin
         NAnswerReaction(420,1,NodeQst205,0,420,NodeQst214)
      end
      if (getQuest(GVAR_PHENIX_QST_BNDCS_C) == qStart) then begin
         NAnswer(432,1,NodeQst209)
         if (global_var(GVAR_PHENIX_STATUS_CARDINAL)<0) then begin
         GAnswer(434,1,NodeQst210)
         end
      end
   end
   end

   NAnswer(303,1,Node999)
end

//--- СТОП-ДИАЛОГ

procedure NodeStopDialog100 begin
   bitDialogExp(bit_2,0)
   Reply(250)
   NAnswer(251,1,NodeStopDialog101)
end

procedure NodeStopDialog101 begin
   Reply(252)
   if (global_var(GVAR_PHENIX_STATUS_DRUGDILLER) == -2) then begin
   NAnswer(254,1,NodeStopDialog102)
   end
   NAnswer(253,1,Node999)
end

procedure NodeStopDialog102 begin
   setBonusReaction(-40)
   Reply(255)
   NAnswer(256,1,NodeStopDialog103)
   NAnswer(260,1,NodeStopDialog104)
   NAnswer(263,1,NodeStopDialog105)
end

procedure NodeStopDialog103 begin
   Reply(257)
   BAnswer(258,1,Node999)
   NAnswer(259,1,Node999)
end

procedure NodeStopDialog104 begin
   Reply(261)
   BAnswer(258,1,Node999)
   NAnswer(259,1,Node999)
end

procedure NodeStopDialog105 begin
   setBonusReaction(-10)
   Reply(264)
   BAnswer(258,1,Node999)
   NAnswer(259,1,Node999)
end

procedure NodeStopDialog200 begin
   bitDialogExp(bit_5,250)
   set_REP(3)
   set_SLAVA(5)
   zReply(270)
   NAnswer(271,1,NodeStopDialog201)
end

procedure NodeStopDialog201 begin
   Reply(272)
   NAnswer(273,1,NodeStopDialog202)
end

procedure NodeStopDialog202 begin
   Reply(274)
   NAnswer(276,1,Node999)
   BAnswer(275,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer begin
   Reply(351)
   NAnswer(353,1,NodeAnswer100)
end

procedure NodeAnswer100 begin
   Reply(354)
   if (getQuest(GVAR_PHENIX_QST_BNDCS_C) == qZero) then begin
   NAnswer(355,4,NodeAnswer101)
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_A) == qZero) then begin
   NAnswer(370,3,NodeAnswer105)
   end
   NAnswer(352,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(356)
   NAnswer(357,1,NodeAnswer102)
   NAnswer(359,1,NodeAnswer103)
   NAnswer(352,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   Reply(358)
   NAnswer(359,1,NodeAnswer103)
   NAnswer(352,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(360)
   NAnswer(357,1,NodeAnswer102)
   NAnswer(352,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(362)
   NAnswer(363,1,Node999)
end

procedure NodeAnswer105 begin
   Reply(371)
   BAnswer(372,1,NodeAnswer106)
   NAnswer(374,1,NodeAnswer107)
end

procedure NodeAnswer106 begin
   Reply(373)
   NAnswer(377,1,NodeAnswer108)
   NAnswer(376,1,NodeSndDialog)
end

procedure NodeAnswer107 begin
   Reply(375)
   NAnswer(377,1,NodeAnswer108)
   NAnswer(376,1,NodeSndDialog)
end

procedure NodeAnswer108 begin
   Reply(378)
   GAnswer(379,1,NodeAnswer109)
   BAnswer(380,1,Node999)
end

procedure NodeAnswer109 begin
   Reply(381)
   NAnswer(382,1,NodeAnswer110)
end

procedure NodeAnswer110 begin
   Reply(383)
   NAnswer(390,1,NodeQst100)
end

//--- КВЕСТЫ

procedure NodeQst100 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_PIP,qStart);
   setQuest(GVAR_PHENIX_QST_BNDCS_A,qStart);
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qStart);
   Reply(384)
   NAnswer(403,1,Node999)
end

procedure NodeQst101 begin
   Reply(386)
   NAnswer(387,1,Node999)
end

procedure NodeQst102 begin
   Reply(389)
   NAnswer(387,1,Node999)
end

procedure NodeQst103 begin
   Reply(392)
   NAnswer(393,1,NodeQst104)
end

procedure NodeQst104 begin
   Reply(394)
   NAnswer(395,1,NodeQst105)
end

procedure NodeQst105 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_A,qEnd);
   setBonusReaction(-25)
   exp_add(200);
   Reply(396)
   NAnswer(397,1,Node999)
end

procedure NodeQst106 begin
   Reply(399)
   NAnswer(400,1,NodeQst107)
end

procedure NodeQst107 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_A,qEnd);
   setBonusReaction(25)
   exp_add(200);
   Reply(401)
   NAnswer(402,1,Node999)
end

procedure NodeQst201 begin
   Reply(411)
   NAnswer(412,1,NodeQst202)
end

procedure NodeQst202 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qEnd);
   setBonusReaction(-25)
   exp_add(200);
   Reply(413)
   NAnswer(414,1,Node999)
end

procedure NodeQst203 begin
   Reply(416)
   NAnswer(417,1,NodeQst204)
end

procedure NodeQst204 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qEnd);
   setBonusReaction(25)
   exp_add(200);
   Reply(418)
   NAnswer(419,1,Node999)
end

procedure NodeQst205 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_C,qStart);
   Reply(421)
   NAnswer(422,1,NodeQst206)
end

procedure NodeQst206 begin
   Reply(423)
   BAnswer(424,1,NodeQst207)
   NAnswer(428,1,NodeQst208)
end

procedure NodeQst207 begin
   Reply(425)
   NAnswer(426,1,Node999)
   BAnswer(427,1,Node999)
end

procedure NodeQst208 begin
   Reply(429)
   NAnswer(430,1,Node999)
   BAnswer(431,1,Node999)
end

// added alternate answers for this node - cambragol
procedure NodeQst209 begin
   Reply(433)
   NAnswer(449,1,Node999)
   BAnswer(450,1,Node999)
end

procedure NodeQst210 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_PIP,qEnd);
   setQuest(GVAR_PHENIX_QST_BNDCS_C,qEnd);
   setBonusReaction(50)
   exp_add(300);
   set_REP(3)
   set_SLAVA(10)

   zReply(435)
   GAnswer(443,1,NodeQst213)
   BAnswer(437,1,NodeQst211)
end

procedure NodeQst211 begin
   Reply(438)
   NAnswer(430,1,Node999)
   NAnswer(440,1,NodeQst212)
   zBAnswer(439,1,NodeQst212)
end

procedure NodeQst212 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,217)
   Reply(441)
   NAnswer(442,1,Node999)
end

procedure NodeQst213 begin
   set_SLAVA(40)
   set_REP(2)
   Reply(444)
   NAnswer(445,1,Node999)
end

procedure NodeQst214 begin
   Reply(446)
   NAnswer(447,1,Node999)
   BAnswer(448,1,Node999)
end

procedure NodeQst215 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qEnd);
   setBonusReaction(25)
   exp_add(200);
   set_REP(2)
   Reply(408)
   NAnswer(409,1,Node999)
end

procedure NodeQst216 begin
   setQuest(GVAR_PHENIX_QST_BNDCS_B,qEnd);
   setBonusReaction(25)
   exp_add(200);
   set_REP(2)
   Reply(405)
   NAnswer(406,1,Node999)
end

//--- НАПАДЕНИЕ НА ПОСЛЕДОВАТЕЛЕЙ

/*

Старая версия:

{310}{}{Я расследую нападение на Последователей. Что ты об этом знаешь?}
{311}{}{Ситуация немного прояснилась.}
{312}{}{Ситуация немного прояснилась. Пора обсудить это с Аароном.}
{313}{}{А-а, какая честь для нас принимать Последователя в этих трущобах!}
{314}{}{(нахмурившись воспроизводит нервный тик) Так ты еще одна ищейка Последователей? Я уже все рассказал монахам. Оставьте нас в покое.}
{315}{}{Мне кажется или ты надо мной глумишься?}
{316}{}{Какие-то проблемы с Последователями?}
{317}{}{Что вы! Мы обязаны Последователям до гроба этим... как его... электричеством? Да. Электричеством, которое мы не можем себе позволить. И валютой, которую жители трущоб не могут заработать в достаточном количестве. "Спасибо" вам от общины.}
{318}{}{Меня не интересует ваше бедное положение. Рассказывай о нападении.}
{319}{}{Мне жаль это слышать, но сейчас вопрос не об этом.}
{320}{}{Мы никого не убивали. Монахи обошли жителей в поисках подаяний. Разумеется, они ушли ни с чем. Уже на улице их нагнали люди в масках и вздернули на фонарных столбах. Это случилось очень быстро. Похоже, что ваши недруги хорошо подготовились к этой... силовой акции.}
{321}{}{Кто-то из жителей в этом замешан?}
{322}{}{Уверен, что нет. Никто из местных не посмеет идти против церкви. Оставь нас в покое.}
{323}{}{Пока твои показания не противоречат фактам. Всего доброго.}
{324}{}{Я тебе не верю.}
{325}{}{Я говорю правду. Не веришь - докажи обратное.}
{326}{}{Грм...}
{327}{}{Грр!}
{330}{}{Я уже все рассказал монахам. Если ты работаешь на них, то должен это знать. Оставь нас в покое.}
{331}{}{Я заплачу за информацию 100 крышек.}
{332}{}{Сегодня я буду добреньким и сломаю тебе только два пальца, пока не узнаю все, что хочу.}
{333}{}{Довольно лжи! Я убью тебя, атомарное ничтожество!}
{334}{}{Не спеши тыкать своей огненной палкой, сектант. В этих трущобах свои правила, а ты здесь не самая важная фигура.}
{335}{}{Теперь я понимаю, почему местные жители так плохо относятся к церкви. Вы как были лузерами, так и остались.}
{336}{}{Возможно. Но мы не навязываемся другим, как вы. И не забираем у других то, что нам не принадлежит.}
{337}{}{Да о чем ты?}
{338}{}{Так это ваши люди убили послушников?}
{339}{}{Конечно, нет. Никто из местных не посмеет идти против церкви. Это сделали другие. Но я ничего о них знаю.}

*/

procedure NodeQstCult begin
   if (getReaction >= 50) then begin
   Reply(314)
   end
   else begin
   Reply(313)
   end
   NAnswer(315,1,NodeQstCult2)
end

procedure NodeQstCult2 begin
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 1) then begin
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,3);
   display_mstr(311);
   end
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 2) then begin
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,5);
   display_mstr(312);
   end

   Reply(316)
   NAnswer(317,3,NodeQstCult101)
   NAnswer(319,3,NodeQstCult102)
   NAnswer(321,5,NodeQstCult103)
   BAnswer(324,3,NodeQstCult200)
   NAnswer(323,1,Node999)
end

procedure NodeQstCult101 begin
   Reply(318)
   NAnswer(319,3,NodeQstCult102)
   NAnswer(321,5,NodeQstCult103)
   BAnswer(324,3,NodeQstCult200)
   NAnswer(323,1,Node999)
end

procedure NodeQstCult102 begin
   Reply(320)
   NAnswer(317,3,NodeQstCult101)
   NAnswer(321,5,NodeQstCult103)
   BAnswer(324,3,NodeQstCult200)
   NAnswer(323,1,Node999)
end

procedure NodeQstCult103 begin
   Reply(322)
   NAnswer(317,3,NodeQstCult101)
   NAnswer(319,3,NodeQstCult102)
   BAnswer(324,3,NodeQstCult200)
   NAnswer(323,1,Node999)
end

procedure NodeQstCult200 begin
   Reply(325)
   if (bitDialog(bit_4) == 0) then begin
   zBAnswer(326,1,NodeQstCult201)
   end
   NAnswer(327,1,Node999)
end

procedure NodeQstCult201 begin
   bitDialogExp(bit_4,0)
   setBonusReaction(-20)
   set_REP(-2)
   Reply(328)
   BAnswer(330,1,NodeQstCult202)
   NAnswer(329,1,Node999)
end

procedure NodeQstCult202 begin
   setBonusReaction(-40)
   set_REP(-1)
   Reply(331)
   NAnswer(332,1,Node999)
end

