#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCDrgdlr
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        14                    // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_PHOENIX_PIMP     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_DRUG_DILLER        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      100 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeEnemy;
procedure NodeEnemy2;
procedure NodeEnemy3;
procedure NodeEnemy4;
procedure NodeStopDialog100;
procedure NodeStopDialog101;
procedure NodeStopDialog101b;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog200;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeBarter;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer400;
procedure NodeAnswer401;
procedure NodeAnswer402;
procedure NodeBarterOk;
procedure NodeBarterOk2;
procedure NodeBarterOk3;
procedure NodeBarterNon;
procedure NodeNark100;
procedure NodeNark101;
procedure NodeNark102;
procedure NodeNark103;
procedure NodeNark104;
procedure NodeNark105;

//---------------------

//#define LVAR_Flag_A                     (8) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
        check_restock_item(PID_SCORPION_TAIL, 1, 3, 100)
        check_restock_item(PID_WAT_WIPES, 3, 6, 100)
        check_restock_item(PID_HYPO, 3, 6, 100)
        check_restock_item(PID_M_STIMPAK, 4, 6, 100)
        check_restock_item(PID_TOOL_DOCTORS_BAG, 1, 2, 100)
        check_restock_item(PID_M_ANTIDOTE, 2, 5, 100)
        check_restock_item(PID_M_RADAWAY, 2, 3, 100)
        check_restock_item(PID_M_RAD_X, 1, 2, 100)

        //- ??????
        if (global_var(GVAR_PHENIX_STATUS_CARDINAL) < 0) then begin
        check_restock_many(200,250)
        end
        else begin
        check_restock_many(300,360)
        end
end

procedure setBarterB begin
        check_restock_item(PID_M_MENTATS, 1, 2, 100)
        check_restock_item(PID_M_BUFFOUT, 1, 2, 100)
        check_restock_item(PID_M_PSYCHO, 1, 2, 100)

   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_random_home(2)
   end
   if (fixed_param == 2) then begin
      // tuned on so drug-dealer hawks his goods - cambragol
       timer_float_reply(210,215)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_DRUGDILLER,-1);
   if (source_obj == dude_obj) then begin
   set_global_var(GVAR_PHENIX_STATUS_DRUGDILLER,-2);
   end
   set_map_var(MVAR_PNX_LARRY_STOP,0);
   if (get_BarterDopusk == 0) then begin
   call setBarterB;
   end
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-10) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,-25) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,35) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_PHENIX_STATUS_CARDINAL,50) // Поправка к отношению за принадлежность к фракциям

   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) and (bitDialog(bit_20) == 0)) then begin
   decBarterMod(20); // в отличии от рынка, драгдилер наоборот понижает цены, так как у него теперь нет преград в виде огнепоклонников для открытой торговли наркотой
   bitDialogExp(bit_20,0)
   end

   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((global_var(GVAR_PHENIX_STATUS_NARK) < 0) and (bitDialog(bit_2) == 0)) then begin
   call NodeStopDialog100;
   end
   else if ((global_var(GVAR_PHENIX_STATUS_NARK) > 0) and (bitDialog(bit_2) == 0)) then begin
   call NodeStopDialog101;
   end
   else if ((global_var(GVAR_CAR_MAP_INDEX) == cur_map_index) and (dude_has_car == 0) and (bitDialog(bit_6) == 0)) then begin
   call NodeStopDialog200;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ВЫХОД В БОЙ

procedure NodeEnemy begin
   setBonusReaction(-20)

   if (bitDialog(bit_3) == 0) then begin
   call NodeEnemy2;
   end
   else if (bitDialog(bit_4) == 0) then begin
   call NodeEnemy3;
   end
   else begin
   call NodeEnemy4;
   end
end

procedure NodeEnemy2 begin
   bitDialogExp(bit_3,0)
   Reply(220)
   BAnswer(221,1,NodeEnemy4)
   NAnswer(222,1,Node999)
end

procedure NodeEnemy3 begin
   bitDialogExp(bit_4,0)
   incBarterMod(20);
   zReply(223)
   BAnswer(224,1,NodeEnemy4)
   NAnswer(225,1,Node999)
end

procedure NodeEnemy4 begin
   zReply(226)
   BAnswer(227,1,Node998)
   BAnswer(228,1,Node998)
end

//--- НАРК ПОГИБ

procedure NodeStopDialog100 begin
   bitDialogExp(bit_2,0)
   incBarterMod(20);
   display_mstr(102);

   Reply(300)
   NAnswer(301,1,NodeStopDialog102)
   NAnswer(308,1,NodeStopDialog104)
   NAnswer(312,1,NodeStopDialog105)
end

procedure NodeStopDialog101 begin
   bitDialogExp(bit_2,0)
   setBonusReaction(-25)
   Reply(316)
   NAnswer(317,1,NodeStopDialog101b)
end

procedure NodeStopDialog101b begin
   Reply(318)
   NAnswer(319,1,Node999)
end

procedure NodeStopDialog102 begin
   Reply(302)
   NAnswer(303,1,NodeStopDialog103)
   NAnswer(304,1,NodeStopDialog103)
end

procedure NodeStopDialog103 begin
   Reply(305)
   NAnswer(306,1,Node999)
   NAnswer(307,1,Node999)
end

procedure NodeStopDialog104 begin
   setBonusReaction(-20)
   zReply(309)
   NAnswer(310,1,NodeStopDialog103)
   NAnswer(311,1,NodeStopDialog103)
end

procedure NodeStopDialog105 begin
   setBonusReaction(-10)
   Reply(313)
   NAnswer(314,1,NodeStopDialog103)
   NAnswer(315,1,NodeStopDialog103)
end

procedure NodeStopDialog200 begin
   bitDialogExp(bit_6,0)
   Reply(320)
   NAnswer(321,1,NodeStartDialog)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(204,1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog4)
end

procedure NodeFstDialog3 begin
   Reply(205)
   NAnswer(206,1,NodeFstDialog2)
   NAnswer(207,1,NodeFstDialog2)
end

procedure NodeFstDialog4 begin
   Reply(208)
   //NAnswer(253,1,NodeStartDialog)
   NAnswer(209,1,Node999)
   BAnswer(254,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(random(210,215))
   NAnswer(230,1,NodeAnswer100)
   NAnswer(270,1,NodeAnswer200)
   NAnswer(294,3,NodeAnswer300)
   if (getQuest(GVAR_RAIDER_QST_DRUGS) == qStart) then begin
   if (item_amnt(dude_obj,PID_Q_DRUGBOX_A) > 0) then begin
   NAnswer(322,3,NodeAnswer400)
   end
   end
   if (getQuest(GVAR_PHENIX_QST_BNDCS_A) == qStart) then begin
      if (global_var(GVAR_PHENIX_STATUS_NARK) == 0) then begin
      if (map_var(MVAR_PNX_LARRY_STOP) == 0) then begin
      NAnswer(330,1,NodeNark100)
      end
      end
   end
   NAnswer(256,1,NodeBarter)

   if (get_BarterDopusk == 0) then begin
      if (global_var(GVAR_PHENIX_STATUS_CARDINAL) > 0) then begin
      NAnswer(255,1,NodeBarterOk)
      end
      if (global_var(GVAR_PHENIX_PUSHER_MERFY) == 1) then begin
      NAnswer(284,1,NodeBarterOk2)
      end
   end

   NAnswer(random(216,219),1,Node999)
end

procedure NodeBarter begin
   goBarterMod;
   call NodeSndDialog;
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(231)
   NAnswer(234,3,NodeAnswer101)
   NAnswer(233,1,NodeAnswer200)
   NAnswer(256,1,NodeBarter)
   NAnswer(232,1,Node999)
end

procedure NodeAnswer101 begin
   if (get_BarterDopusk == 0) then begin
   Reply(235)
   NAnswer(236,1,NodeAnswer102)
   end
   else begin
   Reply(244)
   NAnswer(246,1,NodeAnswer200)
   NAnswer(256,1,NodeBarter)
   NAnswer(245,1,Node999)
   end
end

procedure NodeAnswer102 begin
   Reply(237)
   NAnswer(238,1,NodeAnswer103)
end

procedure NodeAnswer103 begin
   Reply(239)

   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 100) then begin
   NAnswer(243,1,NodeAnswer104)
   end
   if ((global_var(GVAR_ADDICT_NUKA_COLA) > 0) or (global_var(GVAR_ADDICT_BUFF_OUT) > 0) or (global_var(GVAR_ADDICT_MENTATS) > 0) or (global_var(GVAR_ADDICT_PSYCHO) > 0)) then begin
   GAnswer(250,1,NodeBarterOk)
   end

   if (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) then begin
   NAnswer(252,1,NodeBarterOk)
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   BAnswer(247,1,NodeAnswer105)
   end
   if (global_var(GVAR_PHENIX_STATUS_CARDINAL) > 0) then begin
   NAnswer(255,1,NodeBarterOk)
   end
   if (global_var(GVAR_PHENIX_ARENA_BODY) > 0) then begin
   GAnswer(251,1,NodeBarterOk)
   end
   NAnswer(242,1,NodeAnswer200)
   BAnswer(241,1,NodeEnemy)
   NAnswer(240,1,Node999)
end

procedure NodeAnswer104 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 100) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,100)
   item_add(self_obj,PID_BOOTLE_CAPS,100)
   call NodeBarterOk;
   end
   else begin
   call NodeBarterNon;
   end
end

procedure NodeAnswer105 begin
   setBonusReaction(-20)
   set_REP(-2)
   set_SLAVA(-5)
   Reply(248)
   NAnswer(249,1,NodeBarterOk)
end

procedure NodeAnswer200 begin
   Reply(271)
   NAnswer(272,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   Reply(273)
   if (bitDialog(bit_5) == 0) then begin
   NAnswerSkill(279,4,NodeAnswer203,SKILL_DOCTOR,50,275,NodeAnswer202)
   end
   NAnswer(274,1,NodeAnswer100)
   NAnswer(283,1,Node999)
end

procedure NodeAnswer202 begin
   Reply(276)
   BAnswer(278,1,NodeEnemy)
   NAnswer(277,1,Node999)
end

procedure NodeAnswer203 begin
   setBonusReaction(40)
   bitDialogExp(bit_5,100)
   decBarterMod(20);
   display_mstr(103);

   Reply(280)
   NAnswer(281,1,Node999)
   NAnswer(282,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(295)
   NAnswer(230,1,NodeAnswer100)
   NAnswer(296,1,NodeAnswer200)
   NAnswer(297,5,NodeAnswer301)
   NAnswer(random(216,219),1,Node999)
end

procedure NodeAnswer301 begin
   if (global_var(GVAR_PHENIX_STATUS_CARDINAL) < 0) then begin
   Reply(299)
   end
   else begin
   Reply(298)
   end
   NAnswer(230,1,NodeAnswer100)
   NAnswer(296,1,NodeAnswer200)
   NAnswer(random(216,219),1,Node999)
end

procedure NodeAnswer400 begin
   if (item_amnt(dude_obj,PID_Q_DRUGBOX_A) <= 0) then begin
   call NodeSndDialog;
   end
   else begin
   item_remove(dude_obj,PID_Q_DRUGBOX_A,1)
   item_add(dude_obj,PID_Q_DRUGBOX_B,1)
   Reply(323)
   NAnswer(324,1,NodeAnswer401)
   NAnswer(327,3,NodeAnswer402)
   end
end

procedure NodeAnswer401 begin
   Reply(325)
   NAnswer(326,1,Node999)
end

procedure NodeAnswer402 begin
   Reply(328)
   NAnswer(329,1,Node999)
end

procedure NodeBarterOk begin
   call setBarterB;
   goBarterMod;
   Reply(260)
   NAnswer(261,1,Node999)
   NAnswer(262,1,Node999)
end

procedure NodeBarterOk2 begin
   Reply(285)
   NAnswer(286,1,NodeBarterOk3)
end

procedure NodeBarterOk3 begin
   set_global_var(GVAR_PHENIX_PUSHER_MERFY,10);
   //call setBarterB;
   item_add(self_obj,PID_SCORPION_TAIL,5)
   item_add(self_obj,PID_M_PSYCHO,3)
   goBarterMod;
   Reply(287)
   NAnswer(288,1,Node999)
end

procedure NodeBarterNon begin
   Reply(263)
   BAnswer(266,1,NodeEnemy)
   NAnswer(264,1,Node999)
   BAnswer(265,1,Node999)
end

//--- НАРКОМАН ЛАРРИ

procedure NodeNark100 begin
   Reply(331)
   NAnswer(335,1,NodeNark102)
   NAnswer(332,1,NodeNark101)
end

procedure NodeNark101 begin
   Reply(333)
   NAnswer(334,1,Node999)
end

procedure NodeNark102 begin
   Reply(336)
   NAnswer(337,1,NodeNark103)
end

procedure NodeNark103 begin
   Reply(338)
   BAnswer(340,1,NodeNark104)
   NAnswer(339,1,NodeSndDialog)
end

procedure NodeNark104 begin
   zReply(341)
   if (global_var(GVAR_PHENIX_STATUS_CARDINAL)>0) then begin
   NAnswer(346,1,NodeNark105)
   end
   if (global_var(GVAR_PHENIX_STATUS_DIEGO)>0) then begin
   NAnswer(349,1,NodeNark105)
   end
   if (global_var(GVAR_TITUL_PHENIX_CULT)>0) then begin
   zNAnswer(350,1,NodeNark105)
   end

   if (dude_level>=12) then begin
   NAnswer(343,1,NodeNark105)
   end
   else begin
   BAnswer(343,1,Node998)
   end

   NAnswer(342,1,Node999)
end

procedure NodeNark105 begin
   inc_map_var(MVAR_PNX_LARRY_STOP);
   Reply(344)
   NAnswer(345,1,Node999)
end
