#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- Госпиталь - Мистер МедБрат

#define NAME                            SCRIPT_YCHsptlD
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_PLAYER           // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_ROBOT_REPAIR       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure push_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog;
procedure NodeDialog2;
procedure NodeDialog3;
procedure NodeDialog4;
procedure NodeDialog5;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       if (map_var(MVAR_DIEGOHSPTL_ROBOT) > 0) then begin
       set_obj_visibility(self_obj, 0);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
       //? после починки может двигаться вокруг
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure push_p_proc begin
   if (self_TEAM != TEAM_PLAYER) then begin
   script_overrides;
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
   skillUseScience(50)
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,3,3,3) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_DIEGOHSPTL_ROBOT, -1);
   kill_critter_opt
end

procedure talk_p_proc begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeDialog;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeDialog begin
   zReply(random(200,207))
   if dude_is_crippled then begin
   NAnswer(210,1,NodeDialog2)
   end
   if (partyPidMtn!=0) then begin
   if party_is_crippled(partyPidMtn) then begin
   NAnswer(219,1,NodeDialog5)
   end
   end
   NAnswer(215,1,NodeDialog4)
   zNAnswer(209,1,Node999)
end

procedure NodeDialog2 begin
   Reply(211)
   NAnswer(212,1,NodeDialog3)
   NAnswer(218,1,Node999)
end

procedure NodeDialog3 begin
   critter_uninjure(dude_obj, (DAM_BLIND bwor DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
   PLAY_FADE
   Reply(213)
   NAnswer(214,1,Node999)
end

procedure NodeDialog4 begin
   Reply(216)
   if dude_is_crippled then begin
   NAnswer(210,1,NodeDialog2)
   end
   NAnswer(217,1,Node999)
end

procedure NodeDialog5 begin
   critter_uninjure(partyPidMtn, (DAM_BLIND bwor DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
   PLAY_FADE
   Reply(220)
   NAnswer(221,1,Node999)
end
