#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_MCRio
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RAIDERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_WAR_ROADS        // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_WAR_ROAD           // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      (SLAVA_KILL_BAD*2)        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_WARROAD          // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      75 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

/*
procedure NodeA;
procedure NodeA1;
procedure NodeA2;
*/

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog101;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog106;
procedure NodeFstDialog;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog200;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeAnswer109;
procedure NodeAnswer110;
procedure NodeAnswer111;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer207;
procedure NodeAnswer208;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;
procedure NodeAnswer306;
procedure NodeAnswer307;
procedure NodeAnswer308;
procedure NodeAnswer309;
procedure NodeAnswer310;
procedure NodeAnswer311;
procedure NodeAnswer312;
procedure NodeAnswer313;
procedure NodeAnswer314;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeQst202;
procedure NodeQst203;

//---------------------

#define LVAR_SkillUp                     (6) // обучение навыку
#define LVAR_MotoKey                     (7) // выдача ключа от байка
#define LVAR_LocalEnemy                  (8) // статус персонального боя

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (local_var(LVAR_LocalEnemy)>0) then begin
       set_local_var(LVAR_Flags,0);
       set_local_var(LVAR_Self_Flags,0);
       set_local_var(LVAR_LocalEnemy,0);
       end
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if ((game_time_hour > 0700) and (dude_has_car == 0) and (global_var(GVAR_CAR_MAP_INDEX) == cur_map_index)) then begin
       timer_move_patrol(HomeTile,15699)
       end
       else begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_WARRIOR_ROAD) < 1) then begin
   set_using_stop
   end

   if ((armor_pid_dude_var == PID_ARMOR_ROAD) and (tile_distance(dude_tile, self_tile) > 3)) then begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   end
   else if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   end
   else begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
   setBonusReaction(5)
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,2) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
      if (local_var(LVAR_LocalEnemy) == 0) then begin
      set_map_var(MVAR_ROADWAR_DOPUSK,-1);
      end
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_RAIDER_QST_DRUGS) == qStart) then begin
   setQuest(GVAR_RAIDER_QST_DRUGS,qStop);
   end
   if (source_obj == dude_obj) then begin
      if (local_var(LVAR_LocalEnemy) == 0) then begin
      set_REP(REP_KILL_CRITICAL)
      set_map_var(MVAR_CAR_PRESENT,0);
      set_map_var(MVAR_ROADWAR_DOPUSK,-1);
      end
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (map_var(MVAR_ROADWAR_DOPUSK) > 0) then begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-50) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((bitDialog(bit_2) == 0) and (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0)) then begin
   call NodeStopDialog101;
   end
   else begin
   call NodeSndDialog;
   end
end


/*
procedure NodeA begin
   Reply(mstr(104)+getReaction+" ("+global_var(GVAR_PERSONAL_REACTION)+"/"+local_var(LVAR_Personal_Reaction_Bonus)+")")
   NAnswer(105,1,NodeA1)
   NAnswer(106,1,NodeA2)
   NAnswer(107,1,Node999)
end

procedure NodeA1 begin
   setBonusReaction(20)
   call NodeA;
end

procedure NodeA2 begin
   setBonusReaction(-20)
   call NodeA;
end
*/


//--- СТОП-ДИАЛОГ

procedure NodeStopDialog101 begin
   bitDialogExp(bit_2,0)
   if (getReaction>=25) then begin
   Reply(200)
   NAnswer(201,1,NodeStopDialog102)
   end
   else begin
   Reply(205)
   BAnswer(206,1,NodeStopDialog103)
   NAnswer(208,1,NodeStopDialog104)
   end
end

procedure NodeStopDialog102 begin
   Reply(202)
   NAnswer(203,1,Node999)
end

procedure NodeStopDialog103 begin
   setBonusReaction(-20)
   Reply(207)
   BAnswer(210,1,NodeStopDialog105)
   NAnswer(213,1,NodeStopDialog106)
end

procedure NodeStopDialog104 begin
   Reply(209)
   BAnswer(210,1,NodeStopDialog105)
   NAnswer(213,1,NodeStopDialog106)
end

procedure NodeStopDialog105 begin
   setBonusReaction(-10)
   Reply(211)
   NAnswer(212,1,Node999)
end

procedure NodeStopDialog106 begin
   Reply(214)
   NAnswer(215,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(220)
   BAnswer(222,1,NodeFstDialog102)
   NAnswer(221,1,NodeFstDialog200)
   GAnswer(230,1,NodeFstDialog105)
end

procedure NodeFstDialog102 begin
   setBonusReaction(-10)
   set_REP(-1)
   Reply(223)
   NAnswer(224,1,NodeFstDialog103)
   BAnswer(227,1,NodeFstDialog104)
end

procedure NodeFstDialog103 begin
   Reply(225)
   NAnswer(226,1,NodeAnswer100)
end

procedure NodeFstDialog104 begin
   setBonusReaction(-5)
   Reply(228)
   NAnswer(229,1,NodeFstDialog200)
end

procedure NodeFstDialog105 begin
   setBonusReaction(10)
   set_REP(1)
   Reply(231)
   NAnswer(232,1,NodeFstDialog200)
end

procedure NodeFstDialog200 begin
   Reply(233)
   NAnswer(234,1,NodeSndDialog)
   NAnswer(235,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B) or (armor_pid_dude_var == PID_ARMOR_POWER_C)) then begin
   Reply(103)
   end
   else if (getReaction>=50) then begin
   Reply(252)
   end
   else if (getReaction>=10) then begin
   Reply(250)
   end
   else begin
   Reply(251)
   end

   //чит - NAnswer(422,1,NodeQst201)

   if (bitDialog(bit_3) == 0) then begin
   NAnswer(260,3,NodeAnswer100)
   end

   if (local_var(LVAR_SkillUp) == 0) then begin
   NAnswer(290,3,NodeAnswer200)
   end

   if (bitDialog(bit_3) != 0) then begin
      if (getQuest(GVAR_RAIDER_QST_DRUGS) == qZero) then begin
      NAnswer(400,3,NodeQst100)
      end
      if (getQuest(GVAR_RAIDER_QST_DRUGS) == qStart) then begin
      if (global_var(GVAR_PHENIX_STATUS_DRUGDILLER) < 0) then begin
      NAnswer(425,1,NodeQst202)
      end
      else if (item_amnt(dude_obj,PID_Q_DRUGBOX_B) > 0) then begin
      NAnswer(420,1,NodeQst200)
      end
      end
   end

   if (local_var(LVAR_MotoKey) == 0) then begin
   if ((dude_has_car == 0) and (item_amnt(self_obj,PID_MOTO_KEY)>0) and (global_var(GVAR_CAR_MAP_INDEX) == cur_map_index)) then begin
   NAnswer(320,3,NodeAnswer300)
   end
   end

   NAnswer(253,1,Node999)
end

//--- О СЕБЕ

procedure NodeAnswer100 begin
   Reply(261)
   BAnswer(262,1,NodeAnswer101)
   NAnswer(266,1,NodeAnswer102)
   GAnswer(268,1,NodeAnswer103)
end

procedure NodeAnswer101 begin
   setBonusReaction(-5)
   Reply(263)
   BAnswer(264,1,NodeAnswer104)
   NAnswer(265,1,NodeAnswer105)
end

procedure NodeAnswer102 begin
   Reply(267)
   BAnswer(264,1,NodeAnswer104)
   NAnswer(265,1,NodeAnswer105)
end

procedure NodeAnswer103 begin
   setBonusReaction(5)
   Reply(269)
   BAnswer(270,1,NodeAnswer104)
   NAnswer(271,1,NodeAnswer105)
end

procedure NodeAnswer104 begin
   setBonusReaction(-5)
   call NodeAnswer105;
end

procedure NodeAnswer105 begin
   Reply(272)
   BAnswer(273,1,NodeAnswer106)
   NAnswer(274,1,NodeAnswer108)
   GAnswer(275,1,NodeAnswer107)
end

procedure NodeAnswer106 begin
   setBonusReaction(-5)
   call NodeAnswer108;
end

procedure NodeAnswer107 begin
   setBonusReaction(5)
   call NodeAnswer108;
end

procedure NodeAnswer108 begin
   Reply(276)
   BAnswer(277,1,NodeAnswer109)
   NAnswer(278,1,NodeAnswer111)
   GAnswer(279,1,NodeAnswer110)
end

procedure NodeAnswer109 begin
   setBonusReaction(-5)
   call NodeAnswer111;
end

procedure NodeAnswer110 begin
   setBonusReaction(5)
   call NodeAnswer111;
end

procedure NodeAnswer111 begin
   bitDialogExp(bit_3,35)
   Reply(280)
   NAnswer(281,1,NodeSndDialog)
   NAnswer(282,1,Node999)
end

//--- ОБУЧЕНИЕ

procedure NodeAnswer200 begin
   Reply(291)
   NAnswer(292,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   Reply(293)
   NAnswer(295,1,NodeAnswer202)
   NAnswer(296,1,NodeAnswer202)
   NAnswer(294,1,NodeSndDialog)
end

procedure NodeAnswer202 begin
   Reply(297)
   NAnswerReaction(298,1,NodeAnswer204,0,298,NodeAnswer203)
   NAnswer(299,1,NodeSndDialog)
end

procedure NodeAnswer203 begin
   Reply(300)
   NAnswer(301,1,NodeSndDialog)
   BAnswer(302,1,Node999)
end

procedure NodeAnswer204 begin
   Reply(303)
   NAnswerReaction(309,3,NodeAnswer206,80,306,NodeAnswer205)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 250) then begin
   NAnswer(313,1,NodeAnswer208)
   end
   NAnswer(304,1,NodeSndDialog)
   BAnswer(305,1,Node999)
end

procedure NodeAnswer205 begin
   Reply(307)
   NAnswer(308,1,Node999)
end

procedure NodeAnswer206 begin
   Reply(310)
   NAnswer(311,1,NodeAnswer207)
   NAnswer(312,1,Node999)
end

procedure NodeAnswer207 begin
   inc_local_var(LVAR_SkillUp);
   PLAY_FADE
   game_time_advance(ONE_GAME_HOUR*3);
   if (is_skill_tagged(SKILL_THROWING) == true) then begin
   skill_up(SKILL_THROWING,6);
   end
   else begin
   skill_up(SKILL_THROWING,5);
   end
   call Node999;
end

procedure NodeAnswer208 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,250)
   item_add(self_obj,PID_BOOTLE_CAPS,250)
   Reply(314)
   NAnswer(315,1,NodeAnswer207)
end

//--- О БАЙКЕ

procedure NodeAnswer300 begin
   Reply(321)
   NAnswer(323,1,NodeAnswer301)
   NAnswer(325,1,NodeAnswer302)
   if (map_var(MVAR_CAR_PRESENT)>0) then begin
   NAnswerReaction(340,1,NodeAnswer310,50,327,NodeAnswer303)
   end
   NAnswer(322,1,NodeSndDialog)
end

procedure NodeAnswer301 begin
   Reply(324)
   NAnswer(325,1,NodeAnswer302)
   if (map_var(MVAR_CAR_PRESENT)>0) then begin
   NAnswerReaction(340,1,NodeAnswer310,50,327,NodeAnswer303)
   end
   NAnswer(322,1,NodeSndDialog)
end

procedure NodeAnswer302 begin
   Reply(326)
   NAnswer(323,1,NodeAnswer301)
   if (map_var(MVAR_CAR_PRESENT)>0) then begin
   NAnswerReaction(340,1,NodeAnswer310,50,327,NodeAnswer303)
   end
   NAnswer(322,1,NodeSndDialog)
end

procedure NodeAnswer303 begin
   Reply(328)
   BAnswer(333,1,NodeAnswer304)
   NAnswer(329,1,Node999)
end

procedure NodeAnswer304 begin
   Reply(334)
   BAnswer(330,1,NodeAnswer305)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 250) then begin
   NAnswer(335,1,NodeAnswer306)
   end
   NAnswer(329,1,Node999)
end

procedure NodeAnswer305 begin
   setBonusReaction(-95)
   set_local_var(LVAR_LocalEnemy,1);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_DEATHCLAW);
   Reply(331)
   BAnswer(332,1,Node998)
end

procedure NodeAnswer306 begin
   setBonusReaction(-35)
   item_remove(dude_obj,PID_BOOTLE_CAPS,250)
   item_add(self_obj,PID_BOOTLE_CAPS,250)
   Reply(336)
   NAnswer(337,1,NodeAnswer307)
   BAnswer(338,1,NodeAnswer308)
   GAnswer(339,5,NodeAnswer309)
end

procedure NodeAnswer307 begin
   set_local_var(LVAR_MotoKey,1);
   item_remove(self_obj,PID_MOTO_KEY,1)
   item_add(dude_obj,PID_MOTO_KEY,1)
   Reply(355)
   NAnswer(356,1,Node999)
   BAnswer(357,1,Node999)
end

procedure NodeAnswer308 begin
   setBonusReaction(-10)
   call NodeAnswer307;
end

procedure NodeAnswer309 begin
   setBonusReaction(10)
   call NodeAnswer307;
end

procedure NodeAnswer310 begin
   Reply(341)
   NAnswer(342,1,NodeAnswer311)
   NAnswer(343,1,NodeAnswer311)
end

procedure NodeAnswer311 begin
   // fixed 343 to 344 - it was using the PCs 'why' answer instead of proper response - cambragol
   Reply(344)
   NAnswer(345,1,NodeAnswer312)
end

procedure NodeAnswer312 begin
   Reply(346)
   NAnswer(347,1,NodeAnswer313)
   BAnswer(351,1,NodeAnswer314)
end

procedure NodeAnswer313 begin
   Reply(348)
   NAnswer(349,1,NodeAnswer307)
   BAnswer(350,1,NodeAnswer308)
   GAnswer(339,5,NodeAnswer309)
end

procedure NodeAnswer314 begin
   Reply(352)
   NAnswer(353,1,NodeAnswer307)
   BAnswer(354,1,NodeAnswer308)
   GAnswer(339,5,NodeAnswer309)
end

//--- КВЕСТ

procedure NodeQst100 begin
   Reply(401)
   NAnswer(402,1,NodeQst101)
   GAnswer(404,1,NodeQst102)
   BAnswer(406,1,NodeQst103)
end

procedure NodeQst101 begin
   zReply(403)
   NAnswer(408,1,NodeQst104)
end

procedure NodeQst102 begin
   setBonusReaction(5)
   Reply(405)
   NAnswer(408,1,NodeQst104)
end

procedure NodeQst103 begin
   setBonusReaction(-5)
   Reply(407)
   NAnswer(408,1,NodeQst104)
end

procedure NodeQst104 begin
   Reply(409)
   NAnswer(410,1,NodeQst105)
end

procedure NodeQst105 begin
   Reply(411)
   NAnswer(412,1,NodeQst106)
end

procedure NodeQst106 begin
   Reply(413)
   NAnswer(414,1,NodeQst107)
   zBAnswer(417,1,Node999)
end

procedure NodeQst107 begin
   setQuest(GVAR_RAIDER_QST_DRUGS,qStart);
   item_add(dude_obj,PID_Q_DRUGBOX_A,1)
   Reply(415)
   NAnswer(416,1,Node999)
end

procedure NodeQst200 begin
   Reply(421)
   NAnswer(422,1,NodeQst201)
end

procedure NodeQst201 begin
   setQuest(GVAR_RAIDER_QST_DRUGS,qEnd);
   setBonusReaction(50)
   set_REP(5)
   set_SLAVA(-25)
   exp_add(350);
   item_remove(dude_obj,PID_Q_DRUGBOX_A,1)
   item_remove(dude_obj,PID_Q_DRUGBOX_B,1)
   item_add(dude_obj,PID_BOOTLE_CAPS,50)
   item_add(dude_obj,PID_M_PSYCHO,1)
   Reply(423)
   NAnswer(424,1,Node999)
end

procedure NodeQst202 begin
   setQuest(GVAR_RAIDER_QST_DRUGS,qStop);
   Reply(426)
   NAnswer(427,1,NodeQst203)
end

procedure NodeQst203 begin
   Reply(428)
   NAnswer(429,1,Node999)
end
