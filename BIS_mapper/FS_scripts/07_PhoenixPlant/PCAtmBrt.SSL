#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCAtmBrt
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX_PLANT   // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        10  // номер тайла с личным товарным ящиком (-1, если не надо; не использовать значения от 1 до 10; не может совпадать с чужими ящиками на одной локации)

#define NUM_TEAM                        TEAM_PHOENIX_PLANT    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
//#define NUM_AI                          AI_GUARD_ELECTR       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define NUM_AI                          AI_GHOUL_GENERIC      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      75 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeSetBarterMod;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodePresent;
procedure NodePresent2;
procedure NodePresent3;
procedure NodePresent4;
procedure NodePresent5;

//---------------------

//#define LVAR_Flag_A                     (8) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
   //! до получения допуска к товару не торгует
end

procedure setBarterB begin
        check_restock_item(PID_W_CROWBAR, 1, 1, 100)
        check_restock_item(PID_AMMO_MICRO_FUSION_CELL, 20, 40, 100)
        check_restock_item(PID_TOOL_CAR_GAZ, 2, 3, 100)
        check_restock_item(PID_W_LASER_PISTOL, 1, 1, 100)
   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeSetBarterMod;

   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeSetBarterMod begin
   variable bartermod;
   bartermod := 50;
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   bartermod -= 50;
   end
   gdialog_set_barter_mod(bartermod);
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(205)
   BAnswer(206,0,NodeFstDialog2)
   NAnswer(207,0,NodeFstDialog2)
   end
   else begin
   Reply(200)
   BAnswer(201,0,NodeFstDialog2)
   NAnswer(202,0,NodeFstDialog2)
   end
end

procedure NodeFstDialog2 begin
   Reply(203)
   NAnswer(204,0,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(215)
   end
   else begin
   Reply(210)
   end

   if (map_var(MVAR_PNX_PLANT_PRESENT)>0) then begin
   NAnswer(220,4,NodePresent)
   end
   if (get_BarterDopusk == 0) then begin
   NAnswer(212,4,NodeSndDialog2)
   end

   NAnswer(211,0,Node999)
end

procedure NodeSndDialog2 begin
   Reply(213)
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   NAnswer(216,1,NodeSndDialog3)
   end
   NAnswer(214,1,Node999)
end

procedure NodeSndDialog3 begin
   call setBarterB;
   Reply(217)
   NAnswer(218,0,NodeSndDialog)
end

procedure NodePresent begin
   Reply(221)
   NAnswer(225,0,NodePresent3)
   NAnswer(226,0,NodePresent4)
   NAnswer(227,0,NodePresent5)
   NAnswer(222,0,Node999)
end

procedure NodePresent2 begin
   set_map_var(MVAR_PNX_PLANT_PRESENT,0);
   call setBarterB;
   Reply(223)
   NAnswer(224,0,Node999)
end

procedure NodePresent3 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,250)
   call NodePresent2;
end

procedure NodePresent4 begin
   item_add(dude_obj,PID_W_LASER_PISTOL,1)
   call NodePresent2;
end

procedure NodePresent5 begin
   item_add(dude_obj,PID_M_RADAWAY,3)
   call NodePresent2;
end
