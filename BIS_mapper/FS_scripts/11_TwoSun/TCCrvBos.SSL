#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCCrvBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_DRIVER     // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      90 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeDialogMap100;
procedure NodeDialogMap101;
procedure NodeDialogMap102;
procedure NodeDialogMap103;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodePuerto;
procedure NodePuerto1;
procedure NodePuerto2;
procedure NodePuerto3;
procedure NodePuerto4;
procedure NodePuerto5;
procedure NodePuerto6;
procedure NodePuerto7;
procedure NodePuertoGo;

//---------------------

#define LVAR_Caravan_Timer              (6) // время до исчезновения с карты

//---------------------

/*
Памятка для перехода с караваном:
   + объявить LVAR_Caravan_Timer
   + перед set_start_home обновить LVAR_Home_Tile
   + блок появления на карте в map_enter_p_proc
   + два таймера перехода на локации
   + переопределения диалоговых веток в talk_p_proc в зависимости от текущей карты
   + диалог на карте 1
   + реплика на карте 2
*/


procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (local_var(LVAR_Caravan_Timer) != 0) then begin
       set_local_var(LVAR_Home_Tile,tile_num_in_direction(dude_tile,random(0,5),1));
       end
       set_start_home

       if (cur_map_index == MAP_TWO_SUN_CITY) then begin
          if (map_first_run) then begin
          item_add(self_obj,PID_BOOTLE_CAPS,random(150,200))
          end
          if (global_var(GVAR_TWOSUN_STATUS_ZAX) == 1) then begin
          rm_timer_event(self_obj);
          set_obj_visibility(self_obj, 1);
          end
       end
       else begin
          party_remove(self_obj);
          critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,NUM_TEAM);
          set_obj_visibility(self_obj, 1);
          if (local_var(LVAR_Caravan_Timer) == 0) then begin
          set_local_var(LVAR_Caravan_Timer, (ONE_GAME_HOUR*24) + game_time);
          end
          if (local_var(LVAR_Caravan_Timer) >= game_time) then begin
          set_obj_visibility(self_obj, 0);
          end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       set_local_var(LVAR_Caravan_Timer,0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_CASA_NUEVA_CITY,(3*24)+random(1,23));
   end
   if (fixed_param == 4) then begin
       set_local_var(LVAR_Caravan_Timer,0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_PUERTO_SIGN,(4*24)+random(1,23));
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-50) // Поправка к отношению за принадлежность к фракциям

   if (cur_map_index == MAP_PUERTO_SIGN) then begin
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else if (cur_map_index == MAP_TWO_SUN_CITY) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else if (cur_map_index == MAP_CASA_NUEVA_CITY) then begin
   dialog_proc(0,0,NodeDialogMap100,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ДРУГИЕ ЛОКАЦИИ

procedure NodeDialogMap100 begin
   Reply(400)
   NAnswer(401,1,NodeDialogMap101)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap101 begin
   Reply(402)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap102 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 4);
   call Node999;
end

procedure NodeDialogMap103 begin
   set_local_var(LVAR_Caravan_Timer,-1);
   set_obj_visibility(self_obj, 1);
   Reply(406)
   NAnswer(407,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(220,1,NodeAnswer100)
   NAnswer(240,4,NodeAnswer300)
   NAnswer(230,1,NodeAnswer200)
   if (getQuest(GVAR_MAIN_QUEST_TWOSUN) >= qEnd) then begin
      if (bitDialog(bit_6) == 0) then begin
      NAnswer(300,1,NodePuerto)
      end else begin
      NAnswer(300,1,NodePuerto3)
      end
   end
   NAnswer(211,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(221)
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd) then begin
   NAnswer(236,1,NodeAnswer104)
   end
   else begin
   NAnswer(222,3,NodeAnswer101)
   end
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,4,NodeAnswer102)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,25)
   Reply(225)
   if (town_known(AREA_PHOENIX) == MARK_STATE_UNKNOWN) then begin
   NAnswer(226,1,NodeAnswer103)
   end
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   mark_on_map(AREA_PHOENIX)
   zReply(227)
   NAnswer(228,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(237)
   NAnswer(238,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   Reply(231)
   NAnswer(232,3,NodeAnswer201)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer201 begin
   Reply(233)
   NAnswer(234,4,NodeAnswer202)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer202 begin
   bitDialogExp(bit_3,25)
   Reply(235)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer300 begin
   Reply(241)
   NAnswer(242,1,NodeAnswer301)
end

procedure NodeAnswer301 begin
   Reply(243)
   NAnswer(244,1,NodeAnswer302)
end

procedure NodeAnswer302 begin
   bitDialogExp(bit_4,10)
   Reply(245)
   NAnswer(246,1,NodeSndDialog)
   NAnswer(247,1,Node999)
end

procedure NodePuerto begin
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd) then begin
   Reply(306)
   NAnswer(307,1,NodeSndDialog)
   end
   else begin

   Reply(301)

   NAnswerSkill(302,3,NodePuerto2,SKILL_BARTER,100,302,NodePuerto1)
   NAnswer(322,1,NodePuerto7)

   if (global_var(GVAR_TITUL_BOS) >0) then begin
   NAnswer(303,3,NodePuerto2)
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) >0) then begin
   zNAnswer(304,3,NodePuerto2)
   end

   NAnswer(305,1,NodeSndDialog)

   end
end

procedure NodePuerto1 begin
   Reply(308)
   NAnswer(305,1,NodeSndDialog)
end

procedure NodePuerto2 begin
   bitDialogExp(bit_6,0)
   Reply(310)
   NAnswer(311,1,NodePuerto3)
end

procedure NodePuerto3 begin
   Reply(312)
   if ((game_time_hour >= 0600) and (game_time_hour < 1000)) then begin
   NAnswer(313,1,NodePuerto4)
   end
   NAnswer(314,1,Node999)
end

procedure NodePuerto4 begin
   if (who_carry_amount(dude_obj) > 150) then begin
      Reply(315)
      NAnswerSkill(316,1,NodePuerto5,SKILL_CONVERSANT,80,316,NodePuerto6)
      NAnswer(317,1,Node999)
   end
   else begin
      call NodePuerto5;
   end
end

procedure NodePuerto5 begin
   Reply(318)
   NAnswer(319,1,NodePuertoGo)
end

procedure NodePuerto6 begin
   Reply(320)
   NAnswer(321,1,Node999)
end

// fixed NodePuerto2 to NodePuerto3 to give correct response for paying for escort - cambragol
procedure NodePuerto7 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 1000) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,1000)
   call NodePuerto3;
   end
   else begin
   Reply(323)
   NAnswer(324,1,Node999)
   end
end

procedure NodePuertoGo begin
   bitDialogExp(bit_5,250)
   mark_on_map(AREA_CASA_NUEVA)
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   mark_on_map(AREA_PUERTO_STEEL)
   end
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end
