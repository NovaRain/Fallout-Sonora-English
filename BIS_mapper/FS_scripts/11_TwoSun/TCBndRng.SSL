#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCBndRng
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN_BAND // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TWOSUN_SLAVES    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;
procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeSndDialog;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog103;
procedure NodeSndDialog200;
procedure NodeSndDialog201;
procedure NodeSndDialog202;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_4) != 0) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure map_update_p_proc begin
   if (gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_5) != 0) then begin
      if (self_visible == true) then begin
      set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_2);
      rm_timer_event(self_obj);
      kill_critter(self_obj, ANIM_fall_back_sf);
      end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (bitDialog(bit_1) == 0) then begin
   dialogue_system_forcing(10)
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_2);
   kill_critter_opt
end

procedure talk_p_proc begin
   set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_2);
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(202,1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   zReply(203)
   NAnswer(205,1,NodeFstDialog4)
   BAnswer(209,1,NodeFstDialog5)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog4)
   BAnswer(209,1,NodeFstDialog5)
end

procedure NodeFstDialog4 begin
   Reply(206)
   NAnswer(207,1,Node999)
   zBAnswer(208,1,Node998)
end

procedure NodeFstDialog5 begin
   Reply(213)
   BAnswer(214,1,Node998)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(220,1,NodeSndDialog100)
   if (map_var(MVAR_TsnBank_TrapVsbl) == 0) then begin
   NAnswer(230,1,NodeSndDialog200)
   end
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog100 begin
   Reply(221)
   NAnswer(222,1,NodeSndDialog101)
   NAnswer(224,5,NodeSndDialog102)
   NAnswer(212,1,Node999)
end

procedure NodeSndDialog101 begin
   Reply(223)
   NAnswer(224,5,NodeSndDialog102)
   NAnswer(212,1,Node999)
end

procedure NodeSndDialog102 begin
   bitDialogExp(bit_2,50)
   Reply(225)
   NAnswer(226,1,NodeSndDialog103)
   NAnswer(222,1,NodeSndDialog101)
   NAnswer(212,1,Node999)
end

procedure NodeSndDialog103 begin
   Reply(227)
   NAnswer(222,1,NodeSndDialog101)
   NAnswer(212,1,Node999)
end

procedure NodeSndDialog200 begin
   Reply(231)
   NAnswerSkill(233,1,NodeSndDialog201,SKILL_CONVERSANT,50,233,NodeSndDialog202)
   NAnswer(220,1,NodeSndDialog100)
   NAnswer(232,1,Node999)
end

procedure NodeSndDialog201 begin
   set_map_var(MVAR_TsnBank_TrapVsbl,1);
   Reply(234)
   NAnswer(235,1,Node999)
end

procedure NodeSndDialog202 begin
   Reply(236)
   NAnswer(237,1,Node999)
end
