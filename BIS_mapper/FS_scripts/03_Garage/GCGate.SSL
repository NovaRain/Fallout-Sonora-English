#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_GCGate
#define TOWN_REP_VAR                    GVAR_TOWN_REP_GARAGE  // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_GARAGE_CITIZEN   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      30 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;
procedure NodeStopDialog2;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog10;
procedure NodeFstDialog11;
procedure NodeFstDialog12;
procedure NodeFstDialog20;
procedure NodeFstDialog30;
procedure NodeFstDialog31;
procedure NodeFstDialog40;
procedure NodeFstDialog41;
procedure NodeFstDialog42;
procedure NodeFstDialog43;
procedure NodeFstDialog44;
procedure NodeFstDialog45;
procedure NodeFstDialog46;
procedure NodeSndDialog;
procedure NodeVilla;
procedure NodeVilla2;
procedure NodeVilla3;
procedure NodeVilla4;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer201b;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer207;
procedure NodeAnswer208;
procedure NodeJackals100;
procedure NodeJackals101;
procedure NodeJackals102;
procedure NodeJackals103;
procedure NodeJackals104;
procedure NodeJackals200;
procedure NodeJackals201;
procedure NodeWeapon;
procedure NodeWeapon2;
procedure NodeWeapon2b;
procedure NodeWeapon3;
procedure NodeWeapon3b;
procedure NodeWeapon4;
procedure NodeWeapon4b;
procedure NodeWeapon5;
procedure NodeWeapon6;
procedure NodeWeapon7;
procedure NodeWeapon8;
procedure NodeWeapon9;
procedure NodeWeapon10;
procedure NodeWeapon11;
procedure NodeBrahmin100;
procedure NodeBrahmin101;
procedure NodeBrahmin102;
procedure NodeBrahmin200;
procedure NodeBrahmin201;
procedure NodeQuestDitch100;


//---------------------

#define LVAR_Weapon_Rpr                 (6) // миниквест на починку ружья

variable bodyNew;
variable bodyPid;
variable bodyScr;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if ((global_var(GVAR_CAR_MAP_INDEX) == cur_map_index) and (bitDialog(bit_12) == 0)) then begin
       add_timer_event(self_obj, 10, 3);
       end
       if (map_first_run == true) then begin
       add_timer_event(self_obj, 10, 5);
       end

       if (local_var(LVAR_Weapon_Rpr) == 1) then begin
       if (random(0,100) >= 90) then begin
       bodyPid := PID_COYOTE;
       bodyScr := -1;
                  if (random(0,1) == 1) then begin
                  bodyPid := PID_SCORPION_SMALL;
                  end
                  if (violence_filter_setting == VLNCLVL_MAX) then begin
                  //bodyPid := PID_MERC_A_MALE;
                  //bodyScr := SCRIPT_ZCBandit;
                  end

       bodyNew := create_object_sid(bodyPid, tile_num_in_direction(self_tile,2,3), 0, bodyScr);
                  anim(bodyNew, ANIMATE_ROTATION, 5);
                  kill_critter(bodyNew, ANIM_fall_back_blood_sf);
       bodyNew := create_object_sid(bodyPid, tile_num_in_direction(self_tile,1,3), 0, bodyScr);
                  anim(bodyNew, ANIMATE_ROTATION, 4);
                  kill_critter(bodyNew, ANIM_fall_back_blood_sf);
       bodyNew := create_object_sid(bodyPid, tile_num_in_direction(self_tile,3,4), 0, bodyScr);
                  anim(bodyNew, ANIMATE_ROTATION, 0);
                  kill_critter(bodyNew, ANIM_fall_back_blood_sf);
       inc_local_var(LVAR_Weapon_Rpr);
       end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       bitDialogExp(bit_12,0)
       floater(self_obj,102,COLOR_MSG_GREEN);
   end
   if (fixed_param == 4) then begin
       inc_map_var(MVAR_GARAGE_QSTBRAHMIN);
       setQuest(GVAR_GARAGE_QST_BRAHMINATTAK,qStart);
       dude_teleport_map(1,1,MAP_GARAGE_BRAHMIN,5);
   end
   if (fixed_param == 5) then begin
       floater(self_obj,104,COLOR_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (bitDialog(bit_1) == 0) then begin
      if town_rep_is_antipaty then begin
      dialogue_system_forcing(7)
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
       if (bitDialog(bit_5) == 0) then begin
           exp_add(100);
           set_REP(2)
           floater(self_obj,103,COLOR_MSG_GREEN);
           bitDialogExp(bit_5,0)
       end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-40) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((bitDialog(bit_13) == 0) and (global_var(GVAR_GARAGE_STATUS_BOSS) < 0)) then begin
   call NodeStopDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeStopDialog begin
   bitDialogExp(bit_13,0)
   bitDialogExp(bit_1,0)
   Reply(215)
   NAnswer(217,0,NodeStopDialog2)
   NAnswer(216,0,Node999)
end

procedure NodeStopDialog2 begin
   Reply(218)
   NAnswer(219,0,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,20)
   if (town_rep_is_liked or (getQuest(GVAR_GARAGE_QST_BOSS_TRADE) > 0)) then begin
      Reply(236)
      NAnswer(221,4,NodeFstDialog41)
      BAnswer(223,4,NodeFstDialog42)
      NAnswer(226,4,NodeFstDialog43)
   end
   else begin
      Reply(200)
      if (getQuest(GVAR_MAIN_QUEST_VILLA) == qStart) then begin
      BAnswer(201,4,NodeFstDialog10)
      end
      NAnswer(202,4,NodeFstDialog20)
      NAnswer(203,4,NodeFstDialog30)
      BAnswer(255,4,NodeFstDialog31)
   end
   BAnswer(345,-3,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(346)
   NAnswer(347,-3,Node999)
end

procedure NodeFstDialog10 begin
   Reply(204)
   NAnswerSkill(206,3,NodeFstDialog11,SKILL_CONVERSANT,20,206,NodeFstDialog12)
   NAnswer(205,0,NodeFstDialog40)
end

procedure NodeFstDialog11 begin
   bitDialogExp(bit_2,20)
   setBonusReaction(-10)
   Reply(207)
   NAnswer(208,0,NodeFstDialog40)
end

procedure NodeFstDialog12 begin
   Reply(209)
   NAnswer(210,0,NodeFstDialog40)
end

procedure NodeFstDialog20 begin
   Reply(211)
   NAnswer(212,0,NodeFstDialog40)
   if (getQuest(GVAR_MAIN_QUEST_VILLA) == qStart) then begin
   BAnswer(201,0,NodeFstDialog10)
   end
end

procedure NodeFstDialog30 begin
   Reply(213)
   NAnswer(214,0,NodeFstDialog40)
   if (getQuest(GVAR_MAIN_QUEST_VILLA) == qStart) then begin
   BAnswer(201,0,NodeFstDialog10)
   end
end

procedure NodeFstDialog31 begin
   setBonusReaction(-20)
   set_REP(-1)
   Reply(256)
   GAnswer(257,0,NodeFstDialog40)
   NAnswer(258,0,NodeFstDialog40)
   if (getQuest(GVAR_MAIN_QUEST_VILLA) == qStart) then begin
   BAnswer(201,0,NodeFstDialog10)
   end
end

procedure NodeFstDialog40 begin
   Reply(220)
   NAnswer(221,0,NodeFstDialog41)
   BAnswer(223,0,NodeFstDialog42)
   NAnswer(226,0,NodeFstDialog43)
end

procedure NodeFstDialog41 begin
   Reply(222)
   BAnswer(223,0,NodeFstDialog42)
   NAnswer(226,0,NodeFstDialog43)
end

procedure NodeFstDialog42 begin
   set_REP(-5)
   set_SLAVA(-5)
   setBonusReaction(-20)
   Reply(224)
   NAnswer(226,0,NodeFstDialog43)
   NAnswer(225,0,NodeFstDialog44)
end

procedure NodeFstDialog43 begin
   Reply(227)
   BAnswer(228,0,NodeFstDialog44)
   NAnswer(233,0,NodeFstDialog44)
end

procedure NodeFstDialog44 begin
   Reply(229)
   NAnswerSkill(230,0,NodeFstDialog45,SKILL_DOCTOR,30,237,NodeFstDialog46)
   BAnswer(232,0,Node999)
   NAnswer(234,0,Node999)
   NAnswer(235,0,Node999)
end

procedure NodeFstDialog45 begin
   bitDialogExp(bit_3,50)
   set_REP(1)
   setBonusReaction(10)
   Reply(231)
   NAnswer(232,0,Node999)
   NAnswer(234,0,Node999)
   NAnswer(235,0,Node999)
end

procedure NodeFstDialog46 begin
   Reply(238)
   NAnswer(232,0,Node999)
   NAnswer(234,0,Node999)
   NAnswer(235,0,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if ((armor_pid_dude_var == PID_ARMOR_POWER_A) and (random(0,100)<=25)) then begin
      Reply(278)
   end
   else if ((armor_pid_dude_var == PID_ARMOR_POWER_B) and (random(0,100)<=25)) then begin
      Reply(278)
   end
   else if town_rep_is_antipaty then begin
      Reply(random(244,249))
   end
   // added to give feedback and punishment if the quest is abandoned/failed - cambragol
   else if (global_var(GVAR_JACKALS_MERC_ATAK) == -2) then begin
         set_REP(-5)
         set_SLAVA(-5)
         setBonusReaction(-20)
         set_global_var(GVAR_JACKALS_MERC_ATAK,-1);
         Reply(390)
         NAnswer(391,0,NodeQuestDitch100)
   end
   else begin
      Reply(random(240,245))
   end

   // added to prevent asking this question if the player has been around a bit. - cambragol
   if (bitDialog(bit_5) == 0) and ((town_known(AREA_SAN_BRAHMIN) == MARK_STATE_UNKNOWN) and (town_known(AREA_FLAGSTAFF) == MARK_STATE_UNKNOWN) and (town_known(AREA_PHOENIX) == MARK_STATE_UNKNOWN))then begin
      NAnswer(300,4,NodeAnswer200)
   end
   else begin
      NAnswer(301,4,NodeAnswer201)
   end

   if (getQuest(GVAR_GARAGE_QST_BRAHMINATTAK) == qZero) then begin
      if (map_var(MVAR_GARAGE_QSTBRAHMIN) == 1) then begin
      NAnswer(290,4,NodeBrahmin100)
      end
      if (map_var(MVAR_GARAGE_QSTBRAHMIN) == 2) then begin
      NAnswer(287,4,NodeBrahmin200)
      end
   end

   if (getQuest(GVAR_RANGERS_QST_EUGENE_DUM) == qStart) then begin
      if (global_var(GVAR_GARAGE_EUGENE_STATUS) == 0) then begin
      NAnswer(250,4,NodeAnswer100)
      end
   end

   if (getQuest(GVAR_RANGERS_QST_IMMIGRANTS) == qStart) then begin
      if (gvar_bit(GVAR_RANGERS_BIT_FAMILY, bit_10) == 0) then begin
      if (gvar_bit(GVAR_RANGERS_BIT_FAMILY, bit_11) == 0) then begin
      NAnswer(280,4,NodeAnswer102)
      end
      end
   end

   if (bitDialog(bit_4) == 0) then begin
      if (global_var(GVAR_JACKALS_RANGER_CONTRAKT) >0) then begin
      NAnswer(272,4,NodeJackals201)
      end
      else if (getQuest(GVAR_JACKALS_MERC_ATAK) == qEnd) then begin
      NAnswer(272,4,NodeJackals200)
      end
      else if (getQuest(GVAR_JACKALS_MERC_ATAK) == qZero) then begin
      NAnswer(260,4,NodeJackals100)
      end
   end

   if (local_var(LVAR_Weapon_Rpr) == 0) then begin
      if (bitDialog(bit_11) == 0) then begin
      NAnswer(350,4,NodeWeapon)
      end
      else begin
      NAnswer(350,4,NodeWeapon6)
      end
   end

   if (getQuest(GVAR_MAIN_QUEST_VILLA) < qEnd) then begin
      NAnswer(330,4,NodeVilla)
   end

   NAnswer(259,4,Node999)
   NAnswer(348,-3,Node999)
end

//--- РАССПРОСЫ

procedure NodeVilla begin
   Reply(331)
   NAnswerSkill(332,0,NodeVilla2,SKILL_CONVERSANT,65,332,NodeVilla3)
   NAnswer(333,0,Node999)
end

procedure NodeVilla2 begin
   setQuest(GVAR_MAIN_QUEST_VILLA,qEnd);
   if (getQuest(GVAR_MAIN_QUEST_FLAGSTAFF) < qEnd) then begin
   setQuest(GVAR_MAIN_QUEST_FLAGSTAFF,qStart);
   end
   exp_add(250);
   mark_on_map(AREA_FLAGSTAFF)

   Reply(334)
   NAnswer(335,0,NodeVilla4)
   BAnswer(336,0,Node999)
end

procedure NodeVilla3 begin
   Reply(337)
   BAnswer(338,0,Node999)
   NAnswer(339,0,Node999)
end

procedure NodeVilla4 begin
   Reply(340)
   NAnswer(341,0,Node999)
   NAnswer(342,0,Node999)
end

procedure NodeAnswer100 begin
   Reply(251)
   NAnswer(252,0,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(253)
   NAnswer(254,0,Node999)
end

procedure NodeAnswer102 begin
   Reply(281)
   NAnswer(282,0,NodeAnswer103)
end

procedure NodeAnswer103 begin
   Reply(283)
   NAnswer(284,0,Node999)
   BAnswer(285,0,Node999)
end

procedure NodeAnswer200 begin
   display_mstr(302);
   Reply(303)
   NAnswer(304,0,Node999)
   NAnswer(305,0,Node999)
end

procedure NodeAnswer201 begin
   Reply(306)
   NAnswer(326,0,NodeAnswer201b)
   NAnswer(310,0,NodeAnswer202)
   NAnswer(312,0,NodeAnswer203)
   NAnswer(317,0,NodeAnswer205)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer201b begin
   Reply(327)
   NAnswer(310,0,NodeAnswer202)
   NAnswer(312,0,NodeAnswer203)
   NAnswer(317,0,NodeAnswer205)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer202 begin
   Reply(311)
   NAnswer(321,5,NodeAnswer207)
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer203 begin
   if (global_var(GVAR_GARAGE_STATUS_BOSS) == 0) then begin
   Reply(313)
   NAnswer(314,0,NodeAnswer204)
   end
   else begin
   Reply(316)
   end
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer204 begin
   bitDialogExp(bit_7,20)
   Reply(315)
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer205 begin
   Reply(318)
   NAnswer(319,0,NodeAnswer206)
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer206 begin
   bitDialogExp(bit_8,20)
   Reply(320)
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer207 begin
   bitDialogExp(bit_6,25)
   Reply(322)
   NAnswer(323,6,NodeAnswer208)
   NAnswer(307,0,NodeAnswer201)
   NAnswer(308,0,Node999)
end

procedure NodeAnswer208 begin
   bitDialogExp(bit_10,25)
   Reply(324)
   NAnswer(325,0,NodeAnswer201)
end

//--- ШАКАЛЫ

procedure NodeJackals100 begin
   Reply(261)
   NAnswer(263,0,NodeJackals101)
   NAnswer(262,0,NodeSndDialog)
end

procedure NodeJackals101 begin
   Reply(264)
   if (town_known(AREA_JACKALS) >= MARK_STATE_KNOWN) then begin
   NAnswer(268,0,NodeJackals103)
   end
   NAnswer(265,0,NodeJackals102)
end

procedure NodeJackals102 begin
   Reply(266)
   NAnswer(267,0,NodeSndDialog)
end

procedure NodeJackals103 begin
   Reply(269)
   NAnswer(270,0,NodeJackals104)
   NAnswer(271,0,Node999)
end

procedure NodeJackals104 begin
   setQuest(GVAR_JACKALS_MERC_ATAK,qStart);
   call Node999;
end

procedure NodeJackals200 begin
   bitDialogExp(bit_4,50)
   set_REP(7)
   display_mstr(275);
   zReply(273)
   NAnswer(274,0,Node999)
end

procedure NodeJackals201 begin
   bitDialogExp(bit_4,0)
   Reply(276)
   NAnswer(277,0,Node999)
end

//--- ОРУЖИЕ

procedure NodeWeapon begin
   Reply(351)
   NAnswerSkill(354,3,NodeWeapon2,SKILL_CONVERSANT,60,354,NodeWeapon2b)
   NAnswerStat(357,3,NodeWeapon3,STAT_pe,8,357,NodeWeapon3b)
   NAnswerSkill(360,3,NodeWeapon4,SKILL_BIG_GUNS,40,360,NodeWeapon4b)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon2 begin
   Reply(355)
   NAnswer(356,0,NodeWeapon5)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon2b begin
   Reply(355)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon3 begin
   Reply(358)
   NAnswer(359,0,NodeWeapon5)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon3b begin
   Reply(358)
   // line below commented out to give correct result for successful Perception check - cambragol
   //NAnswer(359,0,NodeWeapon5)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon4 begin
   Reply(361)
   NAnswer(362,0,NodeWeapon5)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon4b begin
   Reply(361)
   NAnswer(352,0,NodeSndDialog)
   NAnswer(353,0,Node999)
end

procedure NodeWeapon5 begin
   bitDialogExp(bit_11,50)
   zReply(363)

   NAnswer(364,0,NodeWeapon7)
   NAnswer(366,0,NodeWeapon8)
   NAnswer(368,0,NodeWeapon9)
   NAnswer(373,0,Node999)
end

procedure NodeWeapon6 begin
   Reply(371)

   NAnswer(364,0,NodeWeapon7)
   NAnswer(366,0,NodeWeapon8)
   NAnswer(368,0,NodeWeapon9)
   //372 - Я хочу выкупить это ружье.
   NAnswer(373,0,Node999)
end

procedure NodeWeapon7 begin
   Reply(365)

   NAnswer(366,0,NodeWeapon8)
   NAnswer(368,0,NodeWeapon9)
   NAnswer(374,0,Node999)
end

procedure NodeWeapon8 begin
   Reply(367)

   NAnswer(364,0,NodeWeapon7)
   NAnswer(368,0,NodeWeapon9)
   NAnswer(375,0,Node999)
end

procedure NodeWeapon9 begin
   Reply(369)
   NAnswerSkill(376,0,NodeWeapon10,SKILL_REPAIR,40,379,NodeWeapon11)
   NAnswer(370,0,Node999)
   BAnswer(383,0,Node999)
end

procedure NodeWeapon10 begin
   set_local_var(LVAR_Weapon_Rpr,1);
   PLAY_FADE
   exp_add(100);
   set_REP(2)
   set_SLAVA(2)
   setBonusReaction(20)
   item_add(dude_obj,PID_BOOTLE_CAPS,25)

   Reply(377)
   NAnswer(378,0,Node999)
end

procedure NodeWeapon11 begin
   Reply(380)
   NAnswer(381,0,Node999)
   BAnswer(382,0,Node999)
end

//--- БРАМИН

procedure NodeBrahmin100 begin
   Reply(291)
   NAnswer(292,0,NodeBrahmin101)
   NAnswer(295,0,NodeSndDialog)
   NAnswer(294,0,Node999)
end

procedure NodeBrahmin101 begin
   Reply(293)
   NAnswer(296,0,NodeBrahmin102)
   NAnswer(295,0,NodeSndDialog)
   NAnswer(294,0,Node999)
end

procedure NodeBrahmin102 begin
   inc_map_var(MVAR_GARAGE_QSTBRAHMIN);
   Reply(297)
   NAnswer(298,0,Node999)
end

procedure NodeBrahmin200 begin
   Reply(288)
   NAnswer(289,0,NodeBrahmin201)
   NAnswer(299,0,Node999)
end

procedure NodeBrahmin201 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 4);
   call Node999;
end

procedure NodeQuestDitch100 begin
   Reply(392)
   NAnswer(394,0,NodeAnswer201)
   NAnswer(393,0,Node999)
end