#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_RCAcvEmg
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RANGERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      25 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodeSndDialog4;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog200;
procedure NodeSndDialog201;
procedure NodeSndDialog202;
procedure NodeSndDialog203;
procedure NodeSndDialog204;
procedure NodeSndDialog205;
procedure NodeSndDialog206;
procedure NodeSndDialog207;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (getQuest(GVAR_RANGERS_QST_MISSING) >= qEnd) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       KillScorpTail(104) // фраза над жертвой (-1 если не нужна)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   UsedToCrit_Scorp(103,3) // фраза над жертвой (-1 если не нужна), номер таймера
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_RNGRS_StatAcv,-1);
   set_map_var(MVAR_RNGRS_GartAcv,0);
   kill_critter_opt
end

procedure talk_p_proc begin
   ScorpPoisonFlt
   else if (getQuest(GVAR_RANGERS_QST_MISSING) >= qEnd) then begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeSndDialog)
   NAnswer(206,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getQuest(GVAR_RANGERS_QST_MISSING) == qZero) then begin
      call NodeSndDialog2;
   end
   else if (getQuest(GVAR_RANGERS_QST_MISSING) == qStart) then begin
      call NodeSndDialog4;
   end
   else begin
      call NodeSndDialog3;
   end
end

procedure NodeSndDialog2 begin
   Reply(210)
   NAnswer(220,1,NodeSndDialog100)
   NAnswer(222,1,NodeSndDialog101)
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog3 begin
   Reply(214)
   NAnswer(215,1,Node999)
end

procedure NodeSndDialog4 begin
   Reply(212)
   if (global_var(GVAR_RANGERS_AQUEDUCT_BODIES) != 0) then begin
      if (bitDialog(bit_2) == 0) then begin
         NAnswer(230,1,NodeSndDialog200)
      end
      else begin
         if (global_var(GVAR_STATUS_RANGERS_GART) < 0) then begin
         NAnswer(250,1,NodeSndDialog206)
         end
      end
   end
   NAnswer(213,1,Node999)
end

procedure NodeSndDialog100 begin
   Reply(221)
   NAnswer(222,1,NodeSndDialog101)
   NAnswer(224,1,NodeSndDialog102)
   NAnswer(226,1,Node999)
end

procedure NodeSndDialog101 begin
   Reply(223)
   NAnswer(220,1,NodeSndDialog100)
   NAnswer(224,1,NodeSndDialog102)
   NAnswer(226,1,Node999)
end

procedure NodeSndDialog102 begin
   setQuest(GVAR_RANGERS_QST_MISSING,qStart);
   Reply(225)
   NAnswer(226,1,Node999)
end

procedure NodeSndDialog200 begin
   Reply(231)
   NAnswer(232,1,NodeSndDialog201)
end

procedure NodeSndDialog201 begin
   Reply(233)
   NAnswer(234,1,NodeSndDialog202)
end

procedure NodeSndDialog202 begin
   set_map_var(MVAR_RNGRS_GartAcv,1);
   bitDialogExp(bit_2,0)
   Reply(235)
   NAnswer(236,1,NodeSndDialog203)
   NAnswer(239,1,NodeSndDialog204)
   NAnswer(242,1,NodeSndDialog205)
end

procedure NodeSndDialog203 begin
   Reply(237)
   NAnswer(238,1,Node999)
end

procedure NodeSndDialog204 begin
   Reply(240)
   NAnswer(241,1,Node999)
end

procedure NodeSndDialog205 begin
   Reply(243)
   NAnswer(244,1,Node999)
end

procedure NodeSndDialog206 begin
   Reply(251)
   NAnswer(252,1,NodeSndDialog207)
   BAnswer(253,1,NodeSndDialog207)
end

procedure NodeSndDialog207 begin
   setQuest(GVAR_RANGERS_QST_MISSING,qEnd);
   set_map_var(MVAR_RNGRS_StatAcv,1);
   set_map_var(MVAR_RNGRS_GartAcv,0);
   exp_add(350);
   setBonusReaction(100)
   set_SLAVA(25)
   item_add(dude_obj,PID_AMMO_44_MAGNUM,20)

   Reply(254)
   NAnswer(255,1,Node999)
end
