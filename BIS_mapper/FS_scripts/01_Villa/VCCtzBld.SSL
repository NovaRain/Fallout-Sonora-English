#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCCtzBld
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure uninjure_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeSndDialog;
procedure NodeFstDialog11;
procedure NodeFstDialog12;
procedure NodeFstDialog13;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;

//---------------------

variable medicMetod;                       // метод лечения (передается в процедуру medic_proc)

//---------------------



procedure start begin
   set_injure_start(1,0,0,0,0) // травмировать (отметить нужное цифрой 1): a - левая рука, b - правая рука, c - левая нога, d - правая нога, e - слепота
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_injure_start(1,0,0,0,0) // травмировать (отметить нужное цифрой 1): a - левая рука, b - правая рука, c - левая нога, d - правая нога, e - слепота
       if (get_Medic_Quest == 0) then begin
          reg_anim_clear(self_obj);
          reg_anim_begin();
          reg_anim_animate(self_obj,ANIM_fall_back_sf,-1);
          reg_anim_end();
          critter_injure(self_obj, DAM_KNOCKED_DOWN);
          if (global_var(GVAR_GAME_END) != 0) then begin
          rm_timer_event(self_obj);
          call destroy_p_proc;
          kill_critter(self_obj, ANIM_fall_back_blood_sf);
          end
       end
   end
end

procedure map_update_p_proc begin
   if (getQuest(GVAR_VILLA_MEDIC_HELP) < qEnd) then begin
      if (map_var(MVAR_Plaza_MedicMetod) == 3) then begin
      critter_uninjure_full(self_obj);
      medicMetod := 3;
      end
      if dude_is_female then begin
         set_injure_update(100,(1105+medicMetod))
      end else begin
         set_injure_update(100,(105+medicMetod))
      end
   end
end

procedure description_p_proc begin
   script_overrides;
   if (getQuest(GVAR_VILLA_MEDIC_HELP) < qEnd) then begin
   display_mstr(101);
   end else begin
   display_mstr(102);
   end
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       //timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       reg_anim_clear(self_obj);
       reg_anim_begin();
       reg_anim_animate(self_obj,ANIM_back_to_standing,-1);
       reg_anim_end();
   end
end

procedure critter_p_proc begin
   set_critter_options(3,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   UsedToCrit_Stimpak_Doctor
   if (itemTypeUseDude == 1) then begin
   medicMetod := 2;
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
   if (action_being_used == SKILL_FIRST_AID) then begin
       if (getQuest(GVAR_VILLA_MEDIC_HELP) < qEnd) then begin
       script_overrides;
       display_mstr(104);
       end
   end
   if (action_being_used == SKILL_DOCTOR) then begin
       if (has_skill(dude_obj, SKILL_DOCTOR) < 20) then begin
       script_overrides;
       skill_display_mstr(103,SKILL_DOCTOR,20)
       end else begin
       medicMetod := 1;
       end
   end
end

procedure uninjure_proc begin
   setQuest(GVAR_VILLA_MEDIC_HELP,qEnd);
   set_map_var(MVAR_Plaza_MedicMetod,medicMetod);
   set_REP(3)
   add_timer_event(self_obj, 10, 3);
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_Plaza_MedicMetod,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (get_Medic_Quest == 0) then begin
      if (getQuest(GVAR_VILLA_MEDIC_HELP) < qStart) then begin
      setQuest(GVAR_VILLA_MEDIC_HELP,qStart);
      end
      floater(self_obj,110,COLOR_MSG_RED);
   end
   else begin
      setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
      fracReaction(GVAR_TITUL_VILLA_TRADITION,40) // Поправка к отношению за принадлежность к фракциям
      fracReaction(GVAR_TITUL_VILLA_DISTROY,-40) // Поправка к отношению за принадлежность к фракциям
      dialog_proc(0,111,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   if (map_var(MVAR_Plaza_MedicMetod) == 3) then begin
   NAnswer(202,1,NodeFstDialog13)
   end
   else if (map_var(MVAR_Plaza_MedicMetod) == 2) then begin
   NAnswer(202,1,NodeFstDialog12)
   end
   else begin
   NAnswer(207,1,NodeFstDialog11)
   end
end

procedure NodeFstDialog11 begin
   Reply(208)
   NAnswer(209,1,Node999)
   NAnswer(217,1,Node999)
end

procedure NodeFstDialog12 begin
   Reply(203)
   NAnswer(204,1,Node999)
end

procedure NodeFstDialog13 begin
   Reply(205)
   NAnswer(206,1,Node999)
end

procedure NodeSndDialog begin
   Reply(200)
   NAnswer(210,1,NodeAnswer101)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(211)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(212,4,NodeAnswer102)
   end
   NAnswer(215,7,NodeAnswer103)
   NAnswer(201,1,Node999)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,0)
   item_add(dude_obj,PID_AMMO_SHOTGUN_SHELLS,4)
   item_add(dude_obj,PID_AMMO_308,4)
   item_add(dude_obj,PID_AMMO_10_MM,6)
   Reply(213)
   NAnswer(215,7,NodeAnswer103)
   NAnswer(214,1,Node999)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_3,50)
   Reply(216)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(212,4,NodeAnswer102)
   end
   NAnswer(214,1,Node999)
end
