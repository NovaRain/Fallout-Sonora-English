#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCKidPwr
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CHILD              // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_CHILD      // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog;
procedure NodeDialog1;
procedure NodeDialog2;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       if (local_var(LVAR_Dialog_Status) == 0) then begin
          if (getQuest(GVAR_MAIN_QUEST_FLAGSTAFF) >= qEnd) then begin
             if ((item_amnt(dude_obj,PID_ARMOR_POWER_A) > 0) or (item_amnt(dude_obj,PID_ARMOR_POWER_B) > 0) or (item_amnt(dude_obj,PID_ARMOR_POWER_C) > 0)) then begin
             set_obj_visibility(self_obj, 0);
             end
          end
       end
   end
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_run_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(3,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (bitDialog(bit_1) == 0) then begin
      dialogue_system_forcing(12)
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if (local_var(LVAR_Dialog_Status) == 0) then begin
      if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B) or (armor_pid_dude_var == PID_ARMOR_POWER_C)) then begin
      dialog_proc_obj(NodeStartDialog)
      end
      else begin
      floater(self_obj,110,COLOR_MSG_NORMAL);
      end
   end
   else begin
      floater(self_obj,111,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
end

procedure Node999 begin
   exp_add(50);
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 5, 1);
end

procedure NodeStartDialog begin
   set_local_var(LVAR_Dialog_Status,1);
   set_local_var(LVAR_Home_Tile,18679);
   set_map_var(MVAR_Plaza_PwrArmr,1);
   call NodeDialog;
end

procedure NodeDialog begin
   Reply(200)
   NAnswer(201,1,NodeDialog1)
   BAnswer(210,1,NodeDialog2)
end

procedure NodeDialog1 begin
   display_mstr(112);
   set_REP(1)
   set_SLAVA(20)
   Reply(202)
   NAnswer(203,1,Node999)
   NAnswer(204,1,Node999)
   NAnswer(205,1,Node999)
end

procedure NodeDialog2 begin
   set_local_var(LVAR_Dialog_Status,2);
   display_mstr(112);
   set_REP(-1)
   set_SLAVA(-20)
   Reply(211)
   NAnswer(212,1,Node999)
   NAnswer(214,1,Node999)
end
