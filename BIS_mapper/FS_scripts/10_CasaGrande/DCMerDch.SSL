#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_DCMerDch
#define TOWN_REP_VAR                    GVAR_TOWN_REP_CASA_GRANDE // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CASAGRANDE_CITYHALL // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;
procedure NodeStopDialog100;
procedure NodeStopDialog101;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog103b;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog105b;
procedure NodeStopDialog106;
procedure NodeStopDialog107;
procedure NodeStopDialog200;
procedure NodeStopDialog201;
procedure NodeStopDialog202;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeGame;
procedure NodeGame2;
procedure NodeGame3;
procedure NodeGame4;
procedure NodeGame5;
procedure NodeGame6;
procedure NodeGame7;
procedure NodeGame8;
procedure NodeGame9;
procedure NodeGame10;

//---------------------

#define LVAR_Game_Stop                  (6) // фиксирует число выигрышей

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) != qZero) then begin
       set_local_var(LVAR_Home_Tile,13508);
       set_local_var(LVAR_Home_Rotat,2);
       move_to(self_obj,HomeTile,2);
       end
       set_start_home
       if (map_first_run == true) then begin
       set_local_var(LVAR_Game_Stop,100);
       end
       set_obj_visibility(self_obj, 0);
       if (global_var(GVAR_CGRANDE_STATUS_MERDCH) < 0) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
       if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) == qStart) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   //dsrptProcMsg
   script_overrides;
   if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) == qZero) then begin
   display_mstr(101);
   end
   else begin
   display_mstr(102);
   end
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (self_elevation == 0) then begin
       timer_move_random_home(1)
       end
       else begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       if (self_elevation > 0) then begin
          if (game_time_hour < 0700) then begin
          timer_float_reply(110,112)
          end
          else begin
          timer_float_reply(130,137)
          end
       end
       else if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) == qZero) then begin
          timer_float_reply(120,129)
       end
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   dec_global_var(GVAR_CGRANDE_STATUS_CTZN);
   set_global_var(GVAR_CGRANDE_STATUS_MERDCH,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   if ((self_elevation >0) and (game_time_hour < 0700)) then begin
   floater(self_obj,random(110,119),COLOR_MSG_GREY);
   end
   else if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) == qStart) then begin
   floater(self_obj,106,COLOR_MSG_RED);
   end
   else if (global_var(GVAR_CGRANDE_STATUS_MER) < 0) then begin
   floater(self_obj,104,COLOR_MSG_RED);
   end
   else if (armor_pid_dude_var == PID_ARMOR_ROAD) then begin
   floater(self_obj,105,COLOR_MSG_RED);
   end
   else begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-50) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_CGRANDE_ATTAK_TO_BAR) >= qEnd) then begin
   call NodeStopDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if town_rep_is_hated then begin
   call NodeSndDialog2;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПОСЛЕ СТЫЧКИ В БАРЕ

procedure NodeStopDialog begin
   if (bitDialog(bit_4) == 0) then begin
   call NodeStopDialog100;
   end
   else begin
   call NodeStopDialog200;
   end
end

procedure NodeStopDialog100 begin
   bitDialogExp(bit_4,0)
   setBonusReaction(50)
   set_REP(5)
   if (global_var(GVAR_CGRANDE_STATUS_MER) < 0) then begin
   Reply(330)
   zNAnswer(331,1,NodeStopDialog101)
   end
   else begin
   Reply(346)
   NAnswer(347,1,NodeStopDialog101)
   NAnswer(348,1,NodeStopDialog101)
   end
end

procedure NodeStopDialog101 begin
   Reply(332)
   BAnswer(333,1,NodeStopDialog103b)
   GAnswer(338,1,NodeStopDialog103)
end

procedure NodeStopDialog102 begin
   Reply(334)
   BAnswer(335,1,NodeStopDialog105b)
   if (global_var(GVAR_CGRANDE_STATUS_MER) < 0) then begin
   GAnswer(339,1,NodeStopDialog105)
   end
   else begin
   GAnswer(349,1,NodeStopDialog105)
   end
end

procedure NodeStopDialog103 begin
   setBonusReaction(10)
   set_SLAVA(3)
   call NodeStopDialog102;
end

procedure NodeStopDialog103b begin
   setBonusReaction(-10)
   set_SLAVA(-3)
   call NodeStopDialog102;
end

procedure NodeStopDialog104 begin
   Reply(336)
   if (local_var(LVAR_Game_Stop) > 0) then begin
   NAnswer(337,1,NodeStopDialog106)
   NAnswer(343,1,NodeStopDialog106)
   end
   else begin
   NAnswer(337,1,NodeStopDialog107)
   NAnswer(343,1,NodeStopDialog107)
   end
end

procedure NodeStopDialog105 begin
   setBonusReaction(10)
   set_SLAVA(3)
   call NodeStopDialog104;
end

procedure NodeStopDialog105b begin
   setBonusReaction(-10)
   set_SLAVA(-3)
   call NodeStopDialog104;
end

procedure NodeStopDialog106 begin
   if (local_var(LVAR_Game_Stop) > 10) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,local_var(LVAR_Game_Stop))
   end
   else begin
   item_add(dude_obj,PID_BOOTLE_CAPS,10) // Здесь специально число доведено до 10, чтобы слова о гонораре не обнадеживали зря при меньших суммах
   end

   if (local_var(LVAR_Game_Stop) > 100) then begin
   zReply(342)
   end
   else begin
   Reply(340)
   end
   NAnswer(341,1,Node999)
end

procedure NodeStopDialog107 begin
   Reply(344)
   NAnswer(345,1,Node999)
end

procedure NodeStopDialog200 begin
   Reply(320)
   NAnswer(322,1,NodeStopDialog201)
   NAnswer(325,1,NodeStopDialog202)
   NAnswer(321,1,Node999)
end

procedure NodeStopDialog201 begin
   Reply(323)
   NAnswer(325,1,NodeStopDialog202)
   NAnswer(324,1,Node999)
end

procedure NodeStopDialog202 begin
   Reply(326)
   NAnswer(322,1,NodeStopDialog201)
   NAnswer(327,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
   NAnswer(206,1,NodeFstDialog4)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,Node999)
end

procedure NodeFstDialog4 begin
   Reply(207)
   NAnswer(208,1,Node999)
   BAnswer(209,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin

   if (local_var(LVAR_Game_Stop) > 0) then begin
      if (bitDialog(bit_2) == 0) then begin
      Reply(222)
      NAnswerSkill(226,1,NodeGame,SKILL_GAMBLING,40,223,NodeGame2)
      end
      else begin
      Reply(220)
      NAnswer(221,1,NodeGame5)
      end
   end
   else if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B) or (armor_pid_dude_var == PID_ARMOR_POWER_C)) then begin
      Reply(103)
   end
   else begin
      Reply(210)
   end

   NAnswer(300,1,NodeAnswer100)
   NAnswer(306,1,NodeAnswer102)
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog2 begin
   Reply(210)
   NAnswer(212,1,NodeSndDialog3)
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog3 begin
   Reply(213)
   BAnswer(214,1,Node999)
   NAnswer(215,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(301)
   NAnswer(302,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(303)
   NAnswer(305,1,NodeAnswer102)
   NAnswer(304,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(307)
   if (map_is_known(MAP_CASA_GRANDE_GRAVE) == true) then begin
   NAnswer(310,4,NodeAnswer103)
   end
   NAnswer(308,1,NodeAnswer100)
   NAnswer(309,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(311)
   NAnswer(312,6,NodeAnswer104)
   NAnswer(314,1,Node999)
end

procedure NodeAnswer104 begin
   Reply(313)
   NAnswer(314,1,Node999)
end

//--- ИГРА

procedure NodeGame begin
   Reply(227)
   NAnswer(228,1,NodeGame3)
end

procedure NodeGame2 begin
   Reply(224)
   NAnswer(225,1,Node999)
end

procedure NodeGame3 begin
   Reply(229)
   GAnswer(234,1,NodeGame5)
   NAnswer(230,1,NodeGame4)
end

procedure NodeGame4 begin
   Reply(231)
   NAnswer(232,1,NodeGame5)
   NAnswer(233,1,Node999)
end

procedure NodeGame5 begin
   bitDialogExp(bit_2,0)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   call NodeGame6;
   end
   else begin
   Reply(235)
   NAnswer(238,1,Node999)
   end
end

procedure NodeGame6 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,10)
   Reply(235)
   NAnswer(239,1,NodeGame7)
end

procedure NodeGame7 begin
   if (has_skill(dude_obj, SKILL_GAMBLING) >= random(20,120)) then begin
      item_add(dude_obj,PID_BOOTLE_CAPS,20)
      dec_local_var_amt(LVAR_Game_Stop,10);
      Reply(245)
      if (local_var(LVAR_Game_Stop) > 0) then begin
      //NAnswer(246,1,NodeGame5)
      NAnswer(247,1,Node999)
      end
      else begin
      NAnswer(246,1,NodeGame9)
      end
   end
   else begin
      inc_local_var_amt(LVAR_Game_Stop,10);
      Reply(240)
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
      NAnswer(241,1,NodeGame5)
      end
      NAnswer(242,1,NodeGame8)
   end
end

procedure NodeGame8 begin
   Reply(243)
   NAnswer(244,1,Node999)
end

procedure NodeGame9 begin
   bitDialogExp(bit_3,250)
   Reply(248)
   BAnswer(236,1,NodeGame10)
   NAnswer(237,1,Node999)
end

procedure NodeGame10 begin
   Reply(249)
   NAnswer(244,1,Node999)
end
