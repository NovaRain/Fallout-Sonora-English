#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_DCMcCord
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_MERC     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      (SLAVA_KILL_BAD*3)    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      80 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

#define DUEL_TILE_A                     20501 // позиция 1 участника дуэли
#define DUEL_ROTAT_A                    0
#define DUEL_TILE_B                     20491 // позиция 2 участника дуэли
#define DUEL_ROTAT_B                    3
#define DUEL_TILE_CENTER                20496 // центрирование экрана перед дуэлью

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog;
procedure NodeDialog2;
procedure NodeDialog3;
procedure NodeDialog4;
procedure NodeDialog5;
procedure NodeDialog6;
procedure NodeDialog7;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);
       if (getQuest(GVAR_PHENIX_QST_MERC_B) == qStart) then begin
       set_obj_visibility(self_obj, 0);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,2,2,4) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (global_var(GVAR_PHENIX_STATUS_LOS_D) >= 0) then begin
   item_add(self_obj,PID_HEAD_D,1)
   set_global_var(GVAR_PHENIX_STATUS_LOS_D,-1);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (bitDialog(bit_1) == 0) then begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeDialog;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeDialog2)
end

procedure NodeDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeDialog3)
   NAnswer(204,1,Node998)
end

procedure NodeDialog3 begin
   Reply(205)
   NAnswer(207,1,NodeDialog4)
   GAnswer(210,1,NodeDialog5)
   NAnswer(206,1,Node998)
end

procedure NodeDialog4 begin
   Reply(208)
   NAnswer(213,4,NodeDialog6)
   GAnswer(210,1,NodeDialog5)
   NAnswer(209,1,Node998)
end

procedure NodeDialog5 begin
   if (random(0,1) == 0) then begin
   move_to(self_obj,DUEL_TILE_A,0);
   anim(self_obj, ANIMATE_ROTATION, DUEL_ROTAT_A);
   move_to(dude_obj,DUEL_TILE_B,0);
   anim(dude_obj, ANIMATE_ROTATION, DUEL_ROTAT_B);
   set_local_var(LVAR_Home_Tile,DUEL_TILE_A);
   set_local_var(LVAR_Home_Rotat,DUEL_ROTAT_A);
   end
   else begin
   move_to(dude_obj,DUEL_TILE_A,0);
   anim(dude_obj, ANIMATE_ROTATION, DUEL_ROTAT_A);
   move_to(self_obj,DUEL_TILE_B,0);
   anim(self_obj, ANIMATE_ROTATION, DUEL_ROTAT_B);
   set_local_var(LVAR_Home_Tile,DUEL_TILE_B);
   set_local_var(LVAR_Home_Rotat,DUEL_ROTAT_B);
   end
   tile_set_center(DUEL_TILE_CENTER);

   Reply(211)
   NAnswer(212,1,Node998)
end

procedure NodeDialog6 begin
   zReply(214)
   if has_rep_pelgrim then begin
   GAnswer(215,3,NodeDialog7)
   end
   else if ((player_kill_count(KILL_TYPE_men)+player_kill_count(KILL_TYPE_women)+player_kill_count(KILL_TYPE_children)) <= 5) then begin
   GAnswer(215,3,NodeDialog7)
   end
   GAnswer(210,1,NodeDialog5)
   NAnswer(209,1,Node998)
end

procedure NodeDialog7 begin
   zReply(216)
   BAnswer(217,1,Node998)
   NAnswer(218,1,Node999)
end
