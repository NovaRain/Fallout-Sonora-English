#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//---------------------

#define NAME                            SCRIPT_YCLiveB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GHOUL_GENERIC      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodeSndDialog4;
procedure NodeSndDialog5;
procedure NodeSndDialog6;
procedure NodeSndDialog7;
procedure NodeSndDialog8;
procedure NodeSndDialog9;
procedure NodeSndDialog10;
procedure NodeSndDialog11;
procedure NodeSndDialog12;
procedure NodeSndDialog200;
procedure NodeSndDialog201;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 0);
       if (cur_map_index == MAP_DAYGLOW_CAMP_SAN_ISIDRO) then begin
          if (global_var(GVAR_DAYGLOW_QST_LIVE) != 10) then begin
          set_obj_visibility(self_obj, 1);
          end
       end
       else begin
          if (global_var(GVAR_DAYGLOW_QST_LIVE) >= qEnd+1) then begin
          set_obj_visibility(self_obj, 1);
          end
       end
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (bitDialog(bit_2) != 0) then begin
   display_mstr(100);
   end else begin
   display_mstr(102);
   end
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       set_gvar_bit_on(GVAR_DAYGLOW_STATUS_CARAVAN, bit_23);
       floater(self_obj, 106, COLOR_MSG_RED);
       kill_critter(self_obj, ANIM_fall_back_sf);
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,2,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_gvar_bit_on(GVAR_DAYGLOW_STATUS_CARAVAN, bit_23);
   if (global_var(GVAR_DAYGLOW_QST_LIVE) == 10) then begin
      if (gvar_bit(GVAR_DAYGLOW_STATUS_CARAVAN, bit_25) == 0) then begin
      setQuest(GVAR_DAYGLOW_QST_LIVE, qStart);
      end else begin
      setQuest(GVAR_DAYGLOW_QST_LIVE, qStop);
      end
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,70) // поправка к отношению за принадлежность к фракции
   if (getQuest(GVAR_DAYGLOW_QST_LIVE) <= qZero) then begin
      if DudePerkHas(PERK_ghouling_fiziology) then begin
      floater(self_obj, 104, COLOR_MSG_NORMAL);
      end
      else begin
      floater(self_obj, 105, COLOR_MSG_NORMAL);
      end
   end
   else if (cur_map_index == MAP_DAYGLOW_CAMP_SAN_ISIDRO) then begin
      floater(self_obj, 103, COLOR_MSG_NORMAL);
   end
   else if (global_var(GVAR_DAYGLOW_QST_LIVE) == 10) then begin
      floater(self_obj, 107, COLOR_MSG_NORMAL);
   end
   else begin
      dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(200)
   end
   else begin
   Reply(200)
   end
   NAnswer(201,0,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,0,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,0,NodeFstDialog4)
   NAnswer(206,0,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   Reply(207)
   NAnswer(208,0,Node999)
   BAnswer(209,0,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(220)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(222,0,NodeSndDialog2)
   end
   else if (gvar_bit(GVAR_DAYGLOW_STATUS_CARAVAN, bit_25) != 0) then begin
   zNAnswer(250,0,NodeSndDialog200)
   end
   NAnswer(221,0,Node999)
end

procedure NodeSndDialog2 begin
   Reply(223)
   if (gvar_bit(GVAR_DAYGLOW_STATUS_CARAVAN, bit_24) != 0) then begin
   NAnswer(227,0,NodeSndDialog4)
   end
   NAnswer(224,0,NodeSndDialog3)
end

procedure NodeSndDialog3 begin
   Reply(225)
   if (gvar_bit(GVAR_DAYGLOW_STATUS_CARAVAN, bit_24) != 0) then begin
   NAnswer(227,0,NodeSndDialog4)
   end
   NAnswer(226,0,Node999)
end

procedure NodeSndDialog4 begin
   Reply(228)
   NAnswer(229,0,NodeSndDialog5)
   NAnswer(230,0,Node999)
end

procedure NodeSndDialog5 begin
   bitDialogExp(bit_2,0)
   Reply(231)
   NAnswer(232,0,NodeSndDialog6)
end

procedure NodeSndDialog6 begin
   zReply(233)
   BAnswer(234,0,NodeSndDialog7)
   NAnswer(235,0,NodeSndDialog7)
end

procedure NodeSndDialog7 begin
   zReply(236)
   NAnswer(237,0,NodeSndDialog8)
end

procedure NodeSndDialog8 begin
   Reply(238)
   //NAnswer(239,0,NodeSndDialog9)
   NAnswer(241,0,NodeSndDialog10)
end

procedure NodeSndDialog9 begin
   Reply(240)
   NAnswer(241,0,NodeSndDialog10)
end

procedure NodeSndDialog10 begin
   Reply(242)
   GAnswer(243,0,NodeSndDialog11)
   NAnswer(246,0,NodeSndDialog12)
end

procedure NodeSndDialog11 begin
   set_gvar_bit_on(GVAR_DAYGLOW_STATUS_CARAVAN, bit_23);
   Reply(244)
   NAnswer(245,0,Node999)
end

procedure NodeSndDialog12 begin
   set_gvar_bit_off(GVAR_DAYGLOW_STATUS_CARAVAN, bit_23);
   exp_add(1000);
   setQuest(GVAR_DAYGLOW_QST_LIVE, 10);
   Reply(247)
   NAnswer(248,0,Node999)
end

procedure NodeSndDialog200 begin
   Reply(251)
   NAnswer(252,0,NodeSndDialog201)
end

procedure NodeSndDialog201 begin
   add_timer_event(self_obj, 5, 3);
   setQuest(GVAR_DAYGLOW_QST_LIVE, qEnd+1);
   call Node999;
end
