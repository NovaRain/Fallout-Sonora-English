#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- техник на станции монорельса

#define NAME                            SCRIPT_YSMonoGh
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      20 // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeEndDialog;
procedure NodeEndDialog2;
procedure NodeEndDialog3;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialog7;
procedure NodeFstDialog8;
procedure NodeFstDialog9;
procedure NodeSndDialog;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (getQuest(GVAR_DAYGLOW_STATUS_MONORAIL) >= (qEnd+1)) then begin
       set_local_var(LVAR_Home_Rotat, random(0,5));
       timer_move_to_home
       end
       else begin
       timer_move_random_home(3)
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,75) // поправка к отношению за принадлежность к фракции
   if (getQuest(GVAR_DAYGLOW_STATUS_MONORAIL) > qEnd) then begin
   floater(self_obj, 102, COLOR_MSG_GREEN);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_DAYGLOW_STATUS_MONORAIL) == qEnd) then begin
   call NodeEndDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeEndDialog begin
   Reply(239)
   NAnswer(240,1,NodeEndDialog3)
   BAnswer(241,1,NodeEndDialog2)
end

procedure NodeEndDialog2 begin
   setBonusReaction(-10)
   call NodeEndDialog3;
end

procedure NodeEndDialog3 begin
   bitDialogExp(bit_1,0)
   bitDialogExp(bit_3,0)
   setBonusReaction(50)
   set_REP(5)
   setQuest(GVAR_DAYGLOW_STATUS_MONORAIL, qEnd+1);
   set_local_var(LVAR_Home_Tile, 13473);
   set_local_var(LVAR_Home_Rotat, 5);

   /*
   if ((getReaction>0) and town_rep_is_accepted) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,1000)
   zReply(242)
   NAnswer(243,1,Node999)
   end
   else if ((getReaction<0) or town_rep_is_antipaty) then begin
   item_add(dude_obj,PID_BOOTLE_CAPS,500)
   Reply(246)
   NAnswer(247,1,Node999)
   end
   else begin
   item_add(dude_obj,PID_BOOTLE_CAPS,1000)
   Reply(244)
   NAnswer(245,1,Node999)
   end
   */
   call Node999;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(202,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(203)
   BAnswer(204,1,NodeFstDialog3)
   zGAnswer(206,1,NodeFstDialog4)
end

procedure NodeFstDialog3 begin
   setBonusReaction(-10)
   Reply(205)
   NAnswer(208,1,NodeFstDialog5)
end

procedure NodeFstDialog4 begin
   setBonusReaction(10)
   Reply(207)
   NAnswer(208,1,NodeFstDialog5)
end

procedure NodeFstDialog5 begin
   Reply(209)
   NAnswer(210,1,NodeFstDialog6)
end

procedure NodeFstDialog6 begin
   Reply(211)
   NAnswer(212,1,NodeFstDialog7)
end

procedure NodeFstDialog7 begin
   Reply(213)
   NAnswer(214,1,NodeFstDialog9)
   GAnswer(215,1,NodeFstDialog8)
end

procedure NodeFstDialog8 begin
   setBonusReaction(10)
   call NodeFstDialog9;
end

procedure NodeFstDialog9 begin
   setQuest(GVAR_DAYGLOW_STATUS_MONORAIL, qStart);
   Reply(216)
   NAnswer(218,1,NodeSndDialog)
   NAnswer(217,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if ((getReaction<0) or town_rep_is_antipaty) then begin
   zReply(221)
   end
   else if ((getReaction>=50) or town_rep_is_liked) then begin
   zReply(222)
   end
   else begin
   Reply(220)
   end

   NAnswer(230,1,NodeAnswer101)
   if (getQuest(GVAR_DAYGLOW_STATUS_MONORAIL) < qEnd) then begin
   NAnswer(233,1,NodeAnswer102)
   end

   if (bitDialog(bit_2) == 0) then begin
   NAnswer(236,3,NodeAnswer103)
   end

   NAnswer(223,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(231)
   NAnswer(232,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   Reply(234)
   NAnswer(235,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_2,10)
   Reply(237)
   NAnswer(238,1,NodeSndDialog)
end
