#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- Отель: робот-администратор

#define NAME                            SCRIPT_YCSantRb
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeSndDialog;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   script_overrides;
   if (map_var(MVAR_DIEGOPIRS_DESANTI_ROBOT) >= 2) then begin
   display_mstr(102);
   end
   else begin
   display_mstr(100);
   end
   //lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
   skillUseScience(50)
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (objUsedPid == PID_Q_DAYGLOW_CODE_HANDY) then begin
      script_overrides;
      display_mstr(103);
      floater(self_obj, 111, COLOR_MSG_NORMAL);
      set_map_var(MVAR_DIEGOPIRS_DESANTI_ROBOT, 2);
      set_gvar_bit_off(GVAR_DAYGLOW_STATUS_CARAVAN, bit_26);
      set_local_var(LVAR_Home_Rotat, 4);
      set_local_var(LVAR_Home_Tile, 18673);
      rm_timer_event(self_obj);
      add_timer_event(self_obj, 20, 1);
      item_remove(dude_obj, objUsedPid, 1)
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,3,3,3) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_DIEGOPIRS_DESANTI_ROBOT, -1);
   set_gvar_bit_off(GVAR_DAYGLOW_STATUS_CARAVAN, bit_26);
   kill_critter_opt
end

procedure talk_p_proc begin
   //dialog_proc(0,0,NodeStartDialog,-1,-1)
   if (map_var(MVAR_DIEGOPIRS_DESANTI_ROBOT) >= 2) then begin
   floater(self_obj, 111, COLOR_MSG_NORMAL);
   end
   else begin
   z_floater(self_obj, 110, COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
       call NodeFstDialog;
   end
   else begin
       call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,0,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(211,0,Node999)
end
