#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- Гитара бэнда (лидер)

#define NAME                            SCRIPT_YCBandA
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      20 // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswerQst;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst108;
procedure NodeQst109;
procedure NodeQst110;
procedure NodeQst111;
procedure NodeQst112;
procedure NodeQst113;
procedure NodeQst113b;
procedure NodeQst114;
procedure NodeQst115;
procedure NodeQst116;
procedure NodeQst117;
procedure NodeQst118;
procedure NodeQstEnd;

//---------------------

#define LVAR_MariachiTime                     (8) // время до ближайшего выступления

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
      if (bitDialog(bit_2) == 0) then begin
      set_REP(1)
      bitDialogExp(bit_2,0)
      end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_DAYGLOW_QST_MARIACHI, qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,75) // поправка к отношению за принадлежность к фракции

   if ((local_var(LVAR_MariachiTime) > 0) and (local_var(LVAR_MariachiTime) > game_time)) then begin
      floater(self_obj, 105, COLOR_MSG_GREEN);
   end
   else if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) >= (qEnd+1)) then begin
      floater(self_obj, 104, COLOR_MSG_GREEN);
   end
   else if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) <= qStop) then begin
      floater(self_obj, 103, COLOR_MSG_RED);
   end
   else if DudePerkHas(PERK_ghouling_fiziology) then begin
      dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
      if ((get_REP<=5) and (bitDialog(bit_2) == 0)) then begin
      floater(self_obj, 102, COLOR_MSG_NORMAL);
      end
      else begin
      dialog_proc(0,0,NodeStartDialog,-1,-1)
      end
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qEnd) and (local_var(LVAR_MariachiTime) > 0) and (local_var(LVAR_MariachiTime) < game_time)) then begin
   call NodeQstEnd;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)

   if DudePerkHas(PERK_ghouling_fiziology) then begin
   zReply(215)
   end
   else begin
   Reply(200)
   end
   NAnswer(mstr(201)+dude_name+mstr(202),1,NodeFstDialog2)
   BAnswer(mstr(205)+dude_name+mstr(206),1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   setBonusReaction(5)
   Reply(mstr(203)+dude_name+mstr(204))
   NAnswer(209,1,NodeFstDialog4)
   GAnswer(211,1,NodeFstDialog5)
end

procedure NodeFstDialog3 begin
   setBonusReaction(-10)
   Reply(mstr(207)+dude_name+mstr(208))
   NAnswer(209,1,NodeFstDialog4)
   GAnswer(211,1,NodeFstDialog5)
end

procedure NodeFstDialog4 begin
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(215)
   end
   else begin
   setBonusReaction(-10)
   Reply(210)
   end
   NAnswer(214,1,NodeAnswer)
   NAnswer(213,1,Node999)
end

procedure NodeFstDialog5 begin
   setBonusReaction(5)
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(217)
   end
   else begin
   Reply(212)
   end
   NAnswer(214,1,NodeAnswer)
   NAnswer(213,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if DudePerkHas(PERK_ghouling_fiziology) then begin
      if (get_REP<0) then begin
      Reply(mstr(228)+dude_name+mstr(229))
      end
      else begin
      zReply(220)
      end
   end
   else begin
      if (get_REP>=15) then begin
      Reply(mstr(221)+dude_name+mstr(222))
      end
      else if (get_REP<0) then begin
      Reply(mstr(225)+dude_name+mstr(226))
      end
      else begin
      Reply(mstr(223)+dude_name+mstr(224))
      end
   end

   call NodeAnswerQst;
   NAnswer(214,1,NodeAnswer)

   if (DudePerkHas(PERK_ghouling_fiziology) or (get_REP>=10) or (getQuest(GVAR_DAYGLOW_QST_MARIACHI) >= qEnd)) then begin
   NAnswer(232,1,Node999)
   end
   else begin
   NAnswer(230,1,NodeSndDialog2)
   end
end

procedure NodeSndDialog2 begin
   Reply(231)
   NAnswer(232,1,Node999)
end

procedure NodeAnswer begin
   if (get_REP<0) then begin
   Reply(241)
   end
   else begin
   Reply(240)
   end

   NAnswer(242,1,NodeAnswer100)

   if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qZero) then begin
   NAnswer(250,1,NodeQst100)
   end

   call NodeAnswerQst;

   if (DudePerkHas(PERK_ghouling_fiziology) or (get_REP>=10) or (getQuest(GVAR_DAYGLOW_QST_MARIACHI) >= qEnd)) then begin
   NAnswer(232,1,Node999)
   end
   else begin
   NAnswer(230,1,NodeSndDialog2)
   end
end

procedure NodeAnswer100 begin
   Reply(243)
   NAnswer(244,1,NodeSndDialog)
end

procedure NodeAnswerQst begin

   if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qStart) then begin
      if (map_var(MVAR_DIEGO_C_GUITAR) == 1) then begin
      NAnswer(268,1,NodeQst106)
      end
      if (map_var(MVAR_DIEGO_C_GUITAR) == 0) then begin
      NAnswer(265,1,NodeQst105)
      end
   end

   if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qEnd) then begin

      if (global_var(GVAR_DAYGLOW_MARIACHI_A) == 0) then begin
         NAnswer(279,1,NodeQst111)
      end
      if (global_var(GVAR_DAYGLOW_MARIACHI_B) == 0) then begin
         NAnswer(281,1,NodeQst112)
      end

      if ((global_var(GVAR_DAYGLOW_MARIACHI_A) >= 2) and (global_var(GVAR_DAYGLOW_MARIACHI_B) >= 2)) then begin
         NAnswer(285,1,NodeQst113)
      end
      if ((global_var(GVAR_DAYGLOW_MARIACHI_A) >= 2) and (global_var(GVAR_DAYGLOW_MARIACHI_B) < 0)) then begin
         NAnswer(288,1,NodeQst114)
      end
      if ((global_var(GVAR_DAYGLOW_MARIACHI_A) < 0) and (global_var(GVAR_DAYGLOW_MARIACHI_B) >= 2)) then begin
         NAnswer(290,1,NodeQst114)
      end
      if ((global_var(GVAR_DAYGLOW_MARIACHI_A) < 0) and (global_var(GVAR_DAYGLOW_MARIACHI_B) < 0)) then begin
         if (get_REP>0) then begin
         NAnswer(296,1,NodeQst114)
         end
         else begin
         NAnswer(295,1,NodeQst114)
         end
      end

   end
end

//--- КВЕСТ МАРИАЧИ

procedure NodeQst100 begin
   Reply(251)
   NAnswer(252,1,NodeQst101)
   NAnswer(253,1,NodeQst101)
end

procedure NodeQst101 begin
   Reply(254)
   NAnswer(255,1,NodeQst102)
end

procedure NodeQst102 begin
   Reply(256)
   NAnswer(260,1,NodeQst104)
   NAnswer(257,1,NodeQst103)
   NAnswer(264,1,Node999)
end

procedure NodeQst103 begin
   setQuest(GVAR_DAYGLOW_QST_MARIACHI, qStart);
   zReply(258)
   NAnswer(259,1,Node999)
end

procedure NodeQst104 begin
   bitDialogExp(bit_3,0)
   Reply(261)
   NAnswer(262,1,NodeQst103)
   NAnswer(263,1,Node999)
end

procedure NodeQst105 begin
   Reply(266)
   NAnswer(267,1,Node999)
end

procedure NodeQst106 begin
   set_map_var(MVAR_DIEGO_C_GUITAR,2);
   setBonusReaction(25)
   set_REP(1)
   Reply(269)
   NAnswer(270,1,NodeQst107)
end

procedure NodeQst107 begin
   Reply(271)
   NAnswer(272,1,NodeQst108)
end

procedure NodeQst108 begin
   Reply(273)
   if (bitDialog(bit_3) == 0) then begin
   NAnswer(275,1,NodeQst110)
   end
   NAnswer(274,1,NodeQst109)
end

procedure NodeQst109 begin
   setQuest(GVAR_DAYGLOW_QST_MARIACHI, qEnd);
   Reply(277)
   NAnswer(278,1,Node999)
end

procedure NodeQst110 begin
   bitDialogExp(bit_3,0)
   Reply(261)
   NAnswer(276,1,NodeQst109)
   NAnswer(263,1,Node999)
end

procedure NodeQst111 begin
   Reply(280)
   NAnswer(283,1,NodeAnswer)
   NAnswer(284,1,Node999)
end

procedure NodeQst112 begin
   Reply(282)
   NAnswer(283,1,NodeAnswer)
   NAnswer(284,1,Node999)
end

procedure NodeQst113 begin
   call NodeQst113b;
   Reply(286)
   NAnswer(287,1,Node999)
end

procedure NodeQst113b begin
   if (tile_contains_obj_pid(12484, 0, 33556712) == true) then begin
   //set_obj_visibility(tile_contains_pid_obj(12484,0,33556712), 1);
   destroy_object(tile_contains_pid_obj(12484,0,33556712));
   create_object_sid(33556713, 12484, 0, -1); // исчезновение гитары со стола
   end
   set_local_var(LVAR_Home_Tile, 10696);
   set_local_var(LVAR_Home_Rotat, 2);
   set_local_var(LVAR_MariachiTime, (ONE_GAME_HOUR*12) + game_time);
end

procedure NodeQst114 begin
   Reply(292)
   if (item_amnt(dude_obj,PID_Q_DAYGLOW_HOLOMODUL) > 0) then begin
   NAnswer(294,1,NodeQst115)
   end
   NAnswer(293,1,Node999)
end

procedure NodeQst115 begin
   if (item_amnt(dude_obj,PID_Q_DAYGLOW_HOLOMODUL) > 0) then begin
      call NodeQst116;
   end
   else begin
      call NodeQst114;
   end
end

procedure NodeQst116 begin
   item_remove(dude_obj,PID_Q_DAYGLOW_HOLOMODUL,1)
   if (global_var(GVAR_DAYGLOW_MARIACHI_A) < 0) then begin
   create_object_sid(33556684, 10698, 0, -1);
   end
   if (global_var(GVAR_DAYGLOW_MARIACHI_B) < 0) then begin
   create_object_sid(33556684, 10694, 0, -1);
   end
   call NodeQst113b;
   Reply(297)
   if (bitDialog(bit_4) == 0) then begin
   NAnswer(303,1,NodeQst117)
   end
   NAnswer(298,1,Node999)
end

procedure NodeQst117 begin
   bitDialogExp(bit_4,0)
   Reply(304)
   NAnswer(305,1,NodeQst118)
end

procedure NodeQst118 begin
   Reply(306)
   if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qEnd) then begin
   NAnswer(298,1,Node999)
   end
   else if (getQuest(GVAR_DAYGLOW_QST_MARIACHI) == qEnd+1) then begin
   NAnswer(301,1,Node999)
   end
   else begin
   NAnswer(307,1,Node999)
   end
end

procedure NodeQstEnd begin
   setQuest(GVAR_DAYGLOW_QST_MARIACHI, qEnd+1);
   set_local_var(LVAR_MariachiTime, 0);
   set_REP(3)
   setBonusReaction(75)
   item_add(dude_obj, PID_BOOTLE_CAPS, 1000)
   exp_add(3000);

   if ((get_REP>=10) or (getReaction>=100)) then begin
      item_add(dude_obj, PID_M_VISKI, 1)
      if (dude_is_female) then begin
      Reply(mstr(1299)+dude_name+mstr(1302))
      end else begin
      Reply(mstr(299)+dude_name+mstr(302))
      end
   end
   else begin
      if (dude_is_female) then begin
      Reply(mstr(1299)+dude_name+mstr(1300))
      end else begin
      Reply(mstr(299)+dude_name+mstr(300))
      end
   end

   if (bitDialog(bit_4) == 0) then begin
   NAnswer(308,1,NodeQst117)
   end
   NAnswer(301,1,Node999)
end
