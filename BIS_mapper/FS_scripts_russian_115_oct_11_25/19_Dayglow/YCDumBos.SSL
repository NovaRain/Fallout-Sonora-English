#include "..\headers\define.h"
#include "..\headers\dayglow.h"
//--------------------- Лидер восточного лагеря (Электростанция)

#define NAME                            SCRIPT_YCDumBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_DAYGLOW

#define NUM_TEAM                        TEAM_DAYGLOW_GHOUL    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог для навыка кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - отказывается
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - отказывается

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure push_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog103b;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeSndDialog;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog200;

//---------------------

#define LVAR_Flag_Run                     (7) // следует за ГГ

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_local_var(LVAR_Flag_Run, 0);
       set_start_home
       //??? смена дислокации по завершению квеста
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (local_var(LVAR_Flag_Run) == 0) then begin
       timer_move_to_home
       end
       else begin
       timer_move_to_tile(0,self_tile,0)
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   set_critter_options(1,0) // условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (local_var(LVAR_Flag_Run) > 0) then begin
   partyRunToDude
   end

   if (bitDialog(bit_4) == 0) then begin
      if (self_elevation == 1) then begin
      floater(self_obj, 104, COLOR_MSG_NORMAL);
      bitDialogExp(bit_4,0)
      end
   end
   if (bitDialog(bit_5) == 0) then begin
      if (self_elevation == 2) then begin
      floater(self_obj, 105, COLOR_MSG_NORMAL);
      bitDialogExp(bit_5,0)
      end
   end
end

procedure push_p_proc begin
   if (local_var(LVAR_Flag_Run) == 0) then begin
   script_overrides;
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (global_var(GVAR_DAYGLOW_TURBINA) < 5) then begin
   z_floater(dude_obj, 102, COLOR_MSG_RED);
   end
   /*if (map_var(MVAR_DIEGODUM_CONSOLCENTER) == 0) then begin
   item_add(self_obj,PID_Q_DAYGLOW_DUM_PLAN,1)
   end*/
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // отношение к ГГ (персонаж: 1 положительный, 0 нейтральный, -1 отрицательный)
   fracReaction(GVAR_TITUL_REBIRTH,50) // поправка к отношению за принадлежность к фракции

   if (global_var(GVAR_DAYGLOW_TURBINA) >= 6) then begin
   floater(self_obj, 103, COLOR_MSG_NORMAL);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_DAYGLOW_TURBINA) == 5) then begin
      call NodeSndDialog200;
   end
   else if (bitDialog(bit_1) == 0) then begin
      if (self_elevation > 0) then begin
      call NodeFstDialog103b;
      end
      else if (bitDialog(bit_2) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeFstDialog103;
      end
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_2,0)
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   zReply(201)
   end
   else begin
   Reply(200)
   end

   if (getQuest(GVAR_DAYGLOW_MAIN_A) == qStart) then begin
   NAnswer(202,1,NodeFstDialog102)
   end
   else begin
   NAnswer(203,1,NodeFstDialog102)
   end
end

procedure NodeFstDialog102 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   Reply(206)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(208,1,NodeFstDialog104)
   NAnswer(209,1,NodeFstDialog106)
end

procedure NodeFstDialog103b begin
   if (self_elevation == 1) then begin
      Reply(216)
      NAnswer(217,1,NodeFstDialog105)
      NAnswer(218,1,NodeFstDialog104)
   end
   else if ((self_elevation == 2) and (tile_distance(self_tile,13901) <= 10)) then begin
      call NodeFstDialog107;
   end
   else if ((self_elevation == 2) and (map_var(MVAR_DIEGODUM_POWERPOLE)>0)) then begin
      call NodeFstDialog107;
   end
   else begin
      Reply(211)
      NAnswer(217,1,NodeFstDialog105)
      NAnswer(218,1,NodeFstDialog104)
   end
end

procedure NodeFstDialog104 begin
   set_local_var(LVAR_Flag_Run, 1);
   call Node999;
end

procedure NodeFstDialog105 begin
   set_local_var(LVAR_Flag_Run, 0);
   set_local_var(LVAR_Home_Tile, self_tile);
   call Node999;
end

procedure NodeFstDialog106 begin
   Reply(210)
   //NAnswer(234,5,NodeFstDialog106b)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(208,1,NodeFstDialog104)
end

/*
procedure NodeFstDialog106b begin
   bitDialogExp(bit_3,25)
   Reply(235)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(208,1,NodeFstDialog104)
end
*/

procedure NodeFstDialog107 begin
   bitDialogExp(bit_1,0)
   setBonusReaction(35)
   set_local_var(LVAR_Flag_Run, 0);
   set_local_var(LVAR_Home_Tile, 14100);
   set_local_var(LVAR_Home_Rotat, 5);
   set_map_var(MVAR_DIEGODUM_CONSOLCENTER, 1);

   move_to(self_obj, HomeTile, self_elevation);
   anim(self_obj, ANIMATE_ROTATION, 5);
   move_to(dude_obj, 14500, self_elevation);
   anim(dude_obj, ANIMATE_ROTATION, 5);

   Reply(212)
   NAnswer(213,1,NodeSndDialog100)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(220)
   end
   else begin
   zReply(221)
   end

   if (global_var(GVAR_DAYGLOW_TURBINA) == 0) then begin
   NAnswer(223,1,NodeSndDialog100)
   end

   if (global_var(GVAR_DAYGLOW_TURBINA) == 1) then begin
   NAnswer(224,1,NodeSndDialog101)
   end
   if (global_var(GVAR_DAYGLOW_TURBINA) == 2) then begin
   NAnswer(224,1,NodeSndDialog101)
   end

   if (global_var(GVAR_DAYGLOW_TURBINA) == 3) then begin
   NAnswer(228,1,NodeSndDialog102)
   end
   if (global_var(GVAR_DAYGLOW_TURBINA) == 4) then begin
   NAnswer(228,1,NodeSndDialog102)
   end

   NAnswer(222,1,Node999)
end

procedure NodeSndDialog100 begin
   Reply(214)
   NAnswer(215,1,Node999)
end

procedure NodeSndDialog101 begin
   Reply(225)
   NAnswer(226,1,Node999)
   NAnswer(227,1,Node999)
end

procedure NodeSndDialog102 begin
   set_global_var(GVAR_DAYGLOW_TURBINA, 4);
   Reply(229)
   NAnswer(230,1,Node999)
   NAnswer(231,1,Node999)
end

procedure NodeSndDialog200 begin
   inc_global_var(GVAR_DAYGLOW_TURBINA);
   setBonusReaction(100)
   item_add(dude_obj,PID_TOOL_GEIGER_COUNTER,1)

   set_local_var(LVAR_Flag_Run, 0);
   set_local_var(LVAR_Home_Tile, 14100);
   set_local_var(LVAR_Home_Rotat, 5);
   move_to(self_obj, HomeTile, 2);

   Reply(232)
   NAnswer(233,1,Node999)
end
