#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_AFBarter
#define TOWN_REP_VAR                    GVAR_TOWN_REP_OIL_PLATFORM // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        10  // номер тайла с личным товарным ящиком (-1, если не надо; не использовать значения <10; не может совпадать с чужими ящиками на одной локации)

#define NUM_TEAM                        TEAM_OIL_PLATFORM_CTZN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      75 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeBarter;
procedure NodeBarter100;
procedure NodeBarter101;
procedure NodeBarter102;
procedure NodeBarter103;
procedure NodeBarter104;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer207;
procedure NodeAnswer208;
procedure NodeAnswer209;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

#define BoxObjCarta                       tile_contains_pid_obj(10893,0,261) \

//! ВАЖНО: положение BoxObjCarta фиксировано на карте, проследить за его соответствием в макросе.

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
        //check_restock_item(PID_M_MEAT_JERKY, 3, 6, 100)
        check_restock_item(PID_M_BEER, 2, 4, 100)

        //- крышки
        check_restock_many(300,400)
end

procedure setBarterB begin
   //! пока пусто
   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_using_stop
   set_critter_options(1,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_OIL_PLATFORM_QST_GEIGER, qStop);
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   floatOilGhoulsAttak
   if (map_var(MVAR_OIL_PLATFORM_GHOULSAMNT) > 0) then begin
   floater(self_obj, 102, COLOR_MSG_RED);
   end
   else begin
   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeFstDialog;
end

procedure NodeFstDialog begin
   if ((getQuest(GVAR_OIL_PLATFORM_STATUS) >= qEnd) and (random(0,100)>=50)) then begin
   Reply(206)
   end
   else if ((getQuest(GVAR_OIL_PLATFORM_QST_GEIGER) >= qEnd) and (random(0,100)>=50)) then begin
   Reply(205)
   end
   else begin
   zReply(200)
   end

   if (getQuest(GVAR_OIL_PLATFORM_QST_GEIGER) == qZero) then begin
      if (getQuest(GVAR_OIL_PLATFORM_QST_A) != qZero) then begin
      NAnswer(210,1,NodeAnswer100)
      end
      else if (map_var(MVAR_OIL_PLATFORM_BOAT_REPAIR)>0) then begin
      NAnswer(210,1,NodeAnswer100)
      end
      else if (global_var(GVAR_CAR_MAP_INDEX) == cur_map_index) then begin
      NAnswer(219,1,NodeAnswer100)
      end
   end
   else if (getQuest(GVAR_OIL_PLATFORM_QST_GEIGER) == qStart) then begin
      if (item_amnt(dude_obj,PID_TOOL_GEIGER_COUNTER)>0) then begin
      NAnswer(218,1,NodeAnswer103)
      end
   end

   if (getQuest(GVAR_PUERTO_QST_INFERNO) == qStart) then begin
      if (map_var(MVAR_OIL_PLATFORM_INFIERNOINFO) == 1) then begin
      if (bitDialog(bit_2) == 0) then begin
      NAnswer(240,1,NodeAnswer201)
      end
      end
   end

   if (getQuest(GVAR_OIL_PLATFORM_QST_GOLD) == qStart) then begin
      if (item_amnt(BoxObjCarta,PID_Q_GOLD_MAP)>0) then begin
      if (global_var(GVAR_OIL_STATUS_SOIL_GOLD) == 0) then begin
      NAnswer(260,1,NodeBarter100)
      end
      end
   end

   if (map_var(MVAR_OIL_PLATFORM_KILL_D) == 1) then begin
   if (gvar_bit(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_2) == 0) then begin
   NAnswer(280,1,NodeAnswer300)
   end
   end

   NAnswer(202,1,NodeBarter)
   NAnswer(201,1,Node999)
end

procedure NodeBarter begin
   goBarterMod;
   Reply(203)
   NAnswer(204,1,Node999)
end


//--- КУСОК КАРТЫ

procedure NodeBarter100 begin
   Reply(261)
   NAnswer(262,1,NodeBarter101)
end

procedure NodeBarter101 begin
   Reply(263)
   NAnswer(264,1,NodeBarter102)
end

procedure NodeBarter102 begin
   Reply(mstr(265)+800+mstr(266))
   NAnswer(267,1,NodeBarter103)
   NAnswer(268,1,Node999)
end

procedure NodeBarter103 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 800) then begin
   call NodeBarter104;
   end
   else begin
   Reply(269)
   NAnswer(270,1,Node999)
   end
end

procedure NodeBarter104 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,800)
   item_add(self_obj,PID_BOOTLE_CAPS,800)
   item_remove(BoxObjCarta,PID_Q_GOLD_MAP,1)
   item_add(dude_obj,PID_Q_GOLD_MAP,1)

   Reply(271)
   NAnswer(272,1,Node999)
end

//--- СЧЕТЧИК ГЕЙГЕРА

procedure NodeAnswer100 begin
   setQuest(GVAR_OIL_PLATFORM_QST_GEIGER, qStart);
   Reply(211)
   NAnswer(212,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(213)
   NAnswer(214,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(215)
   if (item_amnt(dude_obj,PID_TOOL_GEIGER_COUNTER)>0) then begin
   NAnswer(217,1,NodeAnswer103)
   end
   NAnswer(216,1,Node999)
end

procedure NodeAnswer103 begin
   if (item_amnt(dude_obj,PID_TOOL_GEIGER_COUNTER)>0) then begin
   call NodeAnswer104;
   end
   else begin
   call Node999;
   end
end

procedure NodeAnswer104 begin
   setQuest(GVAR_OIL_PLATFORM_QST_GEIGER, qEnd);
   exp_add(100);
   set_REP(1)
   item_remove(dude_obj,PID_TOOL_GEIGER_COUNTER,1)

   Reply(220)
   NAnswer(221,1,NodeAnswer105)
   NAnswer(222,1,NodeAnswer106)
   GAnswer(223,1,NodeAnswer107)
end

procedure NodeAnswer105 begin
   item_add(dude_obj,PID_TOOL_CAR_GAZ,1)
   Reply(224)
   NAnswer(225,1,Node999)
end

procedure NodeAnswer106 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,proto_data(PID_TOOL_GEIGER_COUNTER, it_cost))
   Reply(mstr(226)+proto_data(PID_TOOL_GEIGER_COUNTER, it_cost)+mstr(227))
   NAnswer(228,1,Node999)
end

procedure NodeAnswer107 begin
   set_REP(2)
   set_SLAVA(5)
   Reply(229)
   NAnswer(230,1,Node999)
end

//--- ИНФЕРНО

procedure NodeAnswer201 begin
   if DudePerkHas(PERK_ghouling_fiziology) then begin
   Reply(258)
   NAnswer(259,1,NodeFstDialog)
   end
   else begin
   Reply(241)
   NAnswerReaction(242,1,NodeAnswer205,30,242,NodeAnswer202)
   NAnswer(243,1,NodeFstDialog)
   end
end

procedure NodeAnswer202 begin
   Reply(246)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 20) then begin
   NAnswer(247,1,NodeAnswer203)
   end
   NAnswer(248,1,NodeFstDialog)
end

procedure NodeAnswer203 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 20) then begin
   call NodeAnswer204;
   end
   else begin
   call NodeAnswer202;
   end
end

procedure NodeAnswer204 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,20)
   call NodeAnswer206;
end

procedure NodeAnswer205 begin
   Reply(244)
   NAnswer(245,1,NodeAnswer206)
end

procedure NodeAnswer206 begin
   Reply(249)
   NAnswer(250,1,NodeAnswer207)
end

procedure NodeAnswer207 begin
   Reply(251)
   NAnswer(252,1,NodeAnswer208)
end

procedure NodeAnswer208 begin
   Reply(253)
   NAnswer(254,1,NodeAnswer209)
end

procedure NodeAnswer209 begin
   bitDialogExp(bit_2,100)
   Reply(255)
   NAnswer(256,1,Node999)
   NAnswer(257,1,Node999)
end

//--- Джонни

procedure NodeAnswer300 begin
   Reply(281)
   NAnswer(282,1,NodeAnswer301)
end

procedure NodeAnswer301 begin
   Reply(283)
   NAnswer(284,1,NodeAnswer302)
end

procedure NodeAnswer302 begin
   set_map_var(MVAR_OIL_PLATFORM_KILL_D, 2);
   set_gvar_bit_on(GVAR_OIL_PLATFORM_QST_KILL_BIT, bit_2);
   Reply(285)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=5) then begin
   NAnswer(286,1,NodeAnswer303)
   end
   else begin
   NAnswer(286,1,Node999)
   end
end

procedure NodeAnswer303 begin
   zReply(287)
   BAnswer(288,1,NodeAnswer304)
   NAnswer(289,1,NodeAnswer305)
end

procedure NodeAnswer304 begin
   set_REP(-1)
   setBonusReaction(-10)
   call Node999;
end

procedure NodeAnswer305 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,5)
   set_REP(1)
   setBonusReaction(10)
   call Node999;
end
