#include "..\headers\define.h"
#define NAME                            SCRIPT_AFGirl
#define TOWN_REP_VAR                    GVAR_TOWN_REP_OIL_PLATFORM // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_OIL_PLATFORM_CTZN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      35 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialog7;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog202;
procedure NodeFstDialog203;
procedure NodeFstDialog204;
procedure NodeFstDialog205;
procedure NodeFstDialog206;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
      if (bitDialog(bit_3) == 0) then begin
      set_REP(1)
      bitDialogExp(bit_3,0)
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_OIL_PLATFORM_QST_TAG, qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (map_var(MVAR_OIL_PLATFORM_GHOULSAMNT) > 0) then begin
   floater(self_obj, 103, COLOR_MSG_RED);
   end
   else if (getQuest(GVAR_OIL_PLATFORM_QST_TAG) >= qEnd) then begin
   floater(self_obj, 102, COLOR_MSG_NORMAL);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
      if (getQuest(GVAR_OIL_PLATFORM_STATUS) >= qEnd) then begin
      call NodeFstDialog200;
      end
      else if (bitDialog(bit_2) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeFstDialog7;
      end
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_2,0)
   zReply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   zReply(202)
   NAnswer(205,1,NodeFstDialog4)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   if (bitDialog(bit_3) != 0) then begin
      zReply(212)
      NAnswer(211,1,NodeAnswer100)
   end
   else begin
      Reply(206)
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=5) then begin
      NAnswer(209,1,NodeFstDialog5)
      end
      NAnswer(207,1,Node999)
      BAnswer(208,1,Node999)
   end
end

procedure NodeFstDialog5 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=5) then begin
   call NodeFstDialog6;
   end
   else begin
   call NodeFstDialog4;
   end
end

procedure NodeFstDialog6 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,5)
   Reply(210)
   NAnswer(211,1,NodeAnswer100)
end

procedure NodeFstDialog7 begin
   Reply(213)
   NAnswer(214,1,NodeFstDialog4)
end

//--- ДИАЛОГ ПОСЛЕ ВЗРЫВА ПЛАТФОРМЫ

procedure NodeFstDialog200 begin
   bitDialogExp(bit_2,0)
   bitDialogExp(bit_1,0)
   zReply(230)
   NAnswer(231,1,NodeFstDialog201)
end

procedure NodeFstDialog201 begin
   Reply(232)
   NAnswer(233,1,NodeFstDialog202)
   if (item_amnt(dude_obj,PID_Q_ARMYTAG_PESCADOR)>0) then begin
   GAnswer(236,1,NodeFstDialog203)
   end
end

procedure NodeFstDialog202 begin
   setQuest(GVAR_OIL_PLATFORM_QST_TAG, qStop);
   Reply(234)
   NAnswer(235,1,Node999)
end

procedure NodeFstDialog203 begin
   if (item_amnt(dude_obj,PID_Q_ARMYTAG_PESCADOR)>0) then begin
   call NodeFstDialog204;
   end
   else begin
   call Node999;
   end
end

procedure NodeFstDialog204 begin
   item_remove(dude_obj,PID_Q_ARMYTAG_PESCADOR,1)
   setQuest(GVAR_OIL_PLATFORM_QST_TAG, qEnd);
   exp_add(250);
   Reply(237)
   BAnswer(239,1,NodeFstDialog206)
   NAnswer(238,1,NodeFstDialog205)
end

procedure NodeFstDialog205 begin
   set_REP(5)
   set_SLAVA(5)
   setBonusReaction(50)
   call Node999;
end

procedure NodeFstDialog206 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,100)
   set_REP(-3)
   set_SLAVA(-5)
   setBonusReaction(-50)
   zReply(240)
   NAnswer(241,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction>=20) then begin
   Reply(252)
   end
   else begin
   Reply(250)
   end
   if (bitDialog(bit_1) == 0) then begin
      NAnswer(215,1,NodeAnswer100)
   end
   if ((getQuest(GVAR_OIL_PLATFORM_QST_TAG) == qStart) or (getQuest(GVAR_OIL_PLATFORM_QST_TAG) == qStop)) then begin
      if (item_amnt(dude_obj,PID_Q_ARMYTAG_PESCADOR)>0) then begin
      GAnswer(242,1,NodeFstDialog203)
      end
   end
   NAnswer(251,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(220)
   NAnswer(221,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(222)
   NAnswer(223,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(224)
   NAnswer(225,1,NodeAnswer103)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_1,100)
   setQuest(GVAR_OIL_PLATFORM_QST_TAG, qStart);
   Reply(226)
   if (item_amnt(dude_obj,PID_Q_ARMYTAG_PESCADOR)>0) then begin
   GAnswer(243,1,NodeFstDialog203)
   end
   NAnswer(227,1,Node999)
   NAnswer(228,1,Node999)
end
