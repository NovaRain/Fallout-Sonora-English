#include "..\headers\define.h"
//--------------------- жрец Хенаро в Загонах

#define NAME                            SCRIPT_BCHeadB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SAN_BRAHMIN // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANBRAHMIN_PEASAN // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_BRAHMIN       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;
procedure NodeStopDialog2;
procedure NodeStopDialog3;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer207;
procedure NodeAnswer208;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_BRAHMIN_STATUS_HEAD_HENARO,-1);
   if (getQuest(GVAR_BRAHMIN_QST_GOO) == qStart) then begin
   setQuest(GVAR_BRAHMIN_QST_GOO,qStop);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((global_var(GVAR_BRAHMIN_STATUS_EL_MONSTRO)<0) and (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO) == qStart)) then begin
   call NodeAnswer206;
   end
   else if ((bitDialog(bit_2) == 0) and (global_var(GVAR_CAR_MAP_INDEX) == cur_map_index)) then begin
   call NodeStopDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- СТОП-ДИАЛОГ

procedure NodeStopDialog begin
   bitDialogExp(bit_2,0)
   setBonusReaction(-35)
   set_REP(-3)
   zReply(210)
   zGAnswer(211,1,NodeStopDialog2)
   BAnswer(212,1,NodeStopDialog3)
end

procedure NodeStopDialog2 begin
   setBonusReaction(15)
   set_REP(1)
   call NodeStartDialog;
end

procedure NodeStopDialog3 begin
   setBonusReaction(-15)
   set_REP(-1)
   call NodeStartDialog;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   BAnswer(201,1,NodeFstDialog2)
   NAnswer(202,1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   setBonusReaction(-5)
   call NodeFstDialog3;
end

procedure NodeFstDialog3 begin
   Reply(203)
   NAnswer(204,1,NodeSndDialog)
   BAnswer(205,1,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   setBonusReaction(-5)
   call NodeSndDialog;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction>50) then begin
   Reply(222)
   end
   else if (getReaction<0) then begin
   Reply(221)
   end
   else begin
   Reply(220)
   end

   NAnswer(250,3,NodeAnswer100)
   if (getQuest(GVAR_BRAHMIN_QST_GOO) == qStart) then begin
   if (map_var(MVAR_BRAHMIN_GOO_BRAM)<=0) then begin
   NAnswer(264,1,NodeAnswer104)
   end
   end
   NAnswer(280,3,NodeAnswer200)
   NAnswer(300,3,NodeAnswer300)
   if (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO) == qStart) then begin
   if (bitDialog(bit_4) == 0) then begin
   NAnswer(310,3,NodeAnswer204)
   end
   end

   if ((getQuest(GVAR_BRAHMIN_QST_GERONIMO) == qStart) and (global_var(GVAR_BRAHMIN_STATUS_HEAD_HENARO)<=0)) then begin
   NAnswer(230,1,NodeQst100)
   end

   NAnswer(223,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(251)
   NAnswer(255,1,NodeAnswer101)
   NAnswer(252,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(256)
   if (getQuest(GVAR_BRAHMIN_QST_GOO) == qZero) then begin
   NAnswer(258,3,NodeAnswer102)
   end
   NAnswer(257,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   setQuest(GVAR_BRAHMIN_QST_GOO,qStart);
   Reply(259)
   NAnswer(261,1,NodeAnswer103)
   NAnswer(260,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(262)
   NAnswer(260,1,Node999)
   BAnswer(263,1,Node999)
end

procedure NodeAnswer104 begin
   zReply(265)
   NAnswer(267,1,NodeAnswer105)
   BAnswer(266,1,NodeAnswer105)
end

procedure NodeAnswer105 begin
   setQuest(GVAR_BRAHMIN_QST_GOO,qEnd);
   item_add(dude_obj,PID_M_MEAT_JERKY,7)
   exp_add(250);
   setBonusReaction(15)
   set_REP(2)

   Reply(268)
   NAnswer(269,1,Node999)
   BAnswer(270,1,Node999)
end

procedure NodeAnswer200 begin
   Reply(281)
   NAnswer(282,1,NodeAnswer201)
   NAnswer(283,1,NodeSndDialog)
end

procedure NodeAnswer201 begin
   Reply(284)
   NAnswer(285,3,NodeAnswer202)
   NAnswer(283,1,NodeSndDialog)
end

procedure NodeAnswer202 begin
   Reply(286)
   NAnswer(288,7,NodeAnswer203)
   NAnswer(287,1,NodeSndDialog)
end

procedure NodeAnswer203 begin
   bitDialogExp(bit_3,50)
   Reply(289)
   NAnswer(290,7,NodeSndDialog)
   BAnswer(291,1,NodeSndDialog)
end

procedure NodeAnswer204 begin
   bitDialogExp(bit_4,0)
   Reply(311)
   NAnswer(312,1,NodeAnswer205)
end

procedure NodeAnswer205 begin
   Reply(313)
   NAnswer(314,1,NodeSndDialog)
end

procedure NodeAnswer206 begin
   zReply(315)
   NAnswer(316,1,NodeAnswer207)
end

procedure NodeAnswer207 begin
   Reply(317)
   NAnswer(318,1,NodeAnswer208)
end

procedure NodeAnswer208 begin
   setQuest(GVAR_BRAHMIN_QST_ELMONSTRO,qEnd);
   setBonusReaction(75)
   set_SLAVA(35)
   set_REP(5)
   exp_add(350);

   Reply(319)
   NAnswer(320,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(301)
   NAnswer(302,1,NodeSndDialog)
   /*
   if (getQuest(GVAR_BRAHMIN_QST_GERONIMO)<10) then begin
   Reply(301)
   NAnswer(302,1,NodeSndDialog)
   end
   else begin
   Reply(303)
   NAnswer(304,1,NodeSndDialog)
   end
   */
end

procedure NodeAnswer301 begin
   //в инвентаре кладётся что-то для привлечения брамов
   //переменная?
   Reply(305)
   NAnswer(306,1,Node999)
end

//--- КВЕСТ

procedure NodeQst100 begin
   if (getQuest(GVAR_BRAHMIN_QST_ELMONSTRO)>=qEnd) then begin
   zReply(242)
   NAnswer(243,1,NodeQst103)
   NAnswer(246,1,Node999)
   end
   else if (global_var(GVAR_BRAHMIN_STATUS_SANBRAH)<0) then begin
   Reply(244)
   NAnswer(245,1,NodeQst103)
   NAnswer(247,1,Node999)
   end
   else begin
   Reply(231)
   NAnswerSkill(236,5,NodeQst102,SKILL_CONVERSANT,55,232,NodeQst101)
   NAnswer(241,1,NodeSndDialog)
   end
end

procedure NodeQst101 begin
   Reply(233)
   BAnswer(235,1,Node999)
   zNAnswer(234,1,Node999)
end

procedure NodeQst102 begin
   Reply(237)
   NAnswer(238,1,NodeQst103)
end

procedure NodeQst103 begin
   set_global_var(GVAR_BRAHMIN_STATUS_HEAD_HENARO,1);
   exp_add(200);
   setBonusReaction(50)

   Reply(239)
   NAnswer(240,1,Node999)
end
