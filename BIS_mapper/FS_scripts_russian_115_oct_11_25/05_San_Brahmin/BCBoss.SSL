#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_BCBoss
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SAN_BRAHMIN // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANBRAHMIN_PEASAN // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_BRAHMIN       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeFstDialog108;
procedure NodeFstDialog109;
procedure NodeFstDialog110;
procedure NodeFstDialog111;
procedure NodeSndDialog;
procedure NodeQst100;
procedure NodeQst100b;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeQst202;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeAnswer109;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 0);
       if (global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO) <0) then begin
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure map_update_p_proc begin
   if (global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO) <0) then begin
      rm_timer_event(self_obj);
      set_local_var(LVAR_Home_Tile,17481);
      set_local_var(LVAR_Home_Rotat,3);
      move_to(self_obj,HomeTile,self_elevation);
      anim(self_obj, ANIMATE_ROTATION, HomeRotat);
      kill_critter(self_obj, ANIM_fall_back_sf);
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       KillScorpTail(104) // фраза над жертвой (-1 если не нужна)
   end
end

procedure critter_p_proc begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   UsedToCrit_Poison(PID_M_PSYCHO,103,3)
   UsedToCrit_Poison(PID_M_BUFFOUT,103,3)
   UsedToCrit_Poison(PID_M_SUPER_STIMPAK,103,3)
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) == qStart) then begin
   setQuest(GVAR_BRAHMIN_QST_GERONIMO,qStop);
   end
   set_global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-10) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,10) // Поправка к отношению за принадлежность к фракциям

   dialog_proc(0,0,NodeStartDialog,HEAD_SANBRAHMIN_HEAD,BACKGROUND_WASTELND)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) != qZero) then begin
   bitDialogExp(bit_1,0) // чит для удобства теста в маппере
   end

   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(198)
   NAnswer(199,0,NodeFstDialog102)
   end
   else begin
   call NodeFstDialog101;
   end
end

procedure NodeFstDialog101 begin
   bitDialogExp(bit_1,0)
   setQuest(GVAR_BRAHMIN_QST_GERONIMO,qStart);
   zReply(200)
   NAnswer(201,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog103)
   BAnswer(205,1,NodeFstDialog104)
end

procedure NodeFstDialog103 begin
   zReply(204)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(208,1,NodeFstDialog105)
end

procedure NodeFstDialog104 begin
   setBonusReaction(-10)
   zReply(206)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(208,1,NodeFstDialog105)
end

procedure NodeFstDialog105 begin
   Reply(209)
   NAnswer(210,1,NodeFstDialog106)
end

procedure NodeFstDialog106 begin
   Reply(211)
   if (getQuest(GVAR_RANGERS_QST_SBRAHMIN) == qStart) then begin
   GAnswer(221,3,NodeFstDialog110)
   end
   GAnswer(212,1,NodeFstDialog107)
   BAnswer(215,1,NodeFstDialog108)
end

procedure NodeFstDialog107 begin
   setBonusReaction(20)
   Reply(213)
   NAnswer(214,1,NodeFstDialog109)
end

procedure NodeFstDialog108 begin
   setBonusReaction(-20)
   Reply(216)
   NAnswer(217,1,NodeFstDialog109)
end

procedure NodeFstDialog109 begin
   Reply(218)
   NAnswer(219,1,Node999)
   NAnswer(220,1,Node999)
end

procedure NodeFstDialog110 begin
   bitDialogExp(bit_2,0)
   Reply(222)
   NAnswer(223,1,NodeFstDialog111)
end

procedure NodeFstDialog111 begin
   Reply(224)
   NAnswer(225,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin

   if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) == 20) then begin
      if town_rep_is_anti(-5) then begin
      Reply(238)
      end
      else begin
      Reply(236)
      end
   end
   else if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) == 10) then begin
      if town_rep_is_anti(-5) then begin
      Reply(238)
      end
      else begin
      Reply(237)
      end
   end
   else if town_rep_is_hated then begin
      Reply(230)
   end
   else if town_rep_is_anti(-5) then begin
      Reply(231)
   end
   else if town_rep_is_like(5) then begin
      Reply(232)
   end
   else begin
      if (getReaction>0) then begin
      zReply(234)
      end
      else begin
      Reply(233)
      end
   end

   //--- Главквест
   if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) < qEnd) then begin
      if (getQuest(GVAR_RANGERS_QST_SBRAHMIN) == qStart) then begin
         if (bitDialog(bit_2) == 0) then begin
         GAnswer(221,3,NodeFstDialog110)
         end
      end

      if ((getQuest(GVAR_BRAHMIN_QST_COMMANDER) <= qStop) or (global_var(GVAR_BRAHMIN_STATUS_COMMANDER)<0)) then begin
         if (global_var(GVAR_BRAHMIN_STATUS_RANGER)>0) then begin
         GAnswer(260,1,NodeQst200)
         end
         else begin
         GAnswer(261,1,NodeQst200)
         end
      end
      else if (getQuest(GVAR_BRAHMIN_QST_COMMANDER) == qStart) then begin
         NAnswer(240,1,NodeQst100)
      end
   end

   //--- Расспросы
   if (bitDialog(bit_3) == 0) then begin
      NAnswer(300,1,NodeAnswer100)
   end
   else begin
      NAnswer(302,1,NodeAnswer101)
      NAnswer(310,1,NodeAnswer200)
      if (bitDialog(bit_5) == 0) then begin
      NAnswer(330,1,NodeAnswer300)
      end
   end

   if (getQuest(GVAR_GARAGE_QST_BARMEN_SB) == qStart) then begin
      if (map_var(MVAR_BRAHMIN_Garage) < 2) then begin
      NAnswer(270,1,NodeAnswer103)
      end
   end
   if (getQuest(GVAR_PHENIX_QST_BIBLBOOK) == qStart) then begin
      if (bitDialog(bit_6) == 0) then begin
      if (item_amnt(dude_obj,PID_RELICT_BIBLE) <= 0) then begin
      NAnswer(340,1,NodeAnswer105)
      end
      end
   end

   NAnswer(235,1,Node999)
end

//--- ГЛАВКВЕСТ

procedure NodeQst100 begin
   if ((global_var(GVAR_BRAHMIN_STATUS_HEAD_NANA)>0) and (global_var(GVAR_BRAHMIN_STATUS_HEAD_MANGAS)>0) and (global_var(GVAR_BRAHMIN_STATUS_HEAD_HENARO)>0)) then begin
   Reply(257)
   NAnswer(258,1,NodeQst105)
   end
   else if ((global_var(GVAR_BRAHMIN_STATUS_HEAD_NANA)!=0) and (global_var(GVAR_BRAHMIN_STATUS_HEAD_MANGAS)!=0) and (global_var(GVAR_BRAHMIN_STATUS_HEAD_HENARO)!=0)) then begin
   Reply(259)
   NAnswer(258,1,NodeQst105)
   end
   else begin
   call NodeQst100b;
   end
end

procedure NodeQst100b begin
   if (getQuest(GVAR_RANGERS_DUMB_DESTROY) >= qEnd) then begin
   Reply(242)
   end
   else begin
   zReply(241)
   end
   NAnswer(243,1,NodeQst101)
   NAnswerSkill(252,3,NodeQst104,SKILL_CONVERSANT,110,248,NodeQst103)
end

procedure NodeQst101 begin
   zReply(244)
   NAnswer(245,1,NodeQst102)
end

procedure NodeQst102 begin
   Reply(246)
   NAnswer(247,1,Node999)
end

procedure NodeQst103 begin
   Reply(249)
   BAnswer(250,1,NodeQst102)
   NAnswer(251,1,NodeQst102)
end

procedure NodeQst104 begin
   Reply(253)
   NAnswer(254,1,NodeQst105)
end

procedure NodeQst105 begin
   setQuest(GVAR_BRAHMIN_QST_GERONIMO,10);
   set_global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO,1);
   exp_add(750);
   set_REP(15)
   set_SLAVA(50)
   setBonusReaction(50)

   Reply(255)
   NAnswer(256,1,Node999)
end

procedure NodeQst200 begin
   Reply(262)
   NAnswer(263,1,NodeQst201)
end

procedure NodeQst201 begin
   Reply(264)
   NAnswer(265,1,NodeQst202)
end

procedure NodeQst202 begin
   setQuest(GVAR_BRAHMIN_QST_GERONIMO,20);
   setQuest(GVAR_BRAHMIN_QST_COMMANDER,qStop);
   exp_add(1000);
   set_REP(25)
   set_SLAVA(75)
   setBonusReaction(90)
   mark_on_map(AREA_FLAGSTAFF)

   Reply(266)
   NAnswer(267,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   bitDialogExp(bit_3,0)
   Reply(301)
   NAnswer(304,1,NodeAnswer102)
end

procedure NodeAnswer101 begin
   Reply(303)
   NAnswer(304,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(305)
   NAnswer(306,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   if (getQuest(GVAR_BRAHMIN_QST_COMMANDER)>=qEnd) then begin
      Reply(273)
      NAnswer(274,1,NodeAnswer104)
   end
   else begin
      if (global_var(GVAR_BRAHMIN_QST_GERONIMO) == 10) then begin
      Reply(278)
      end
      else begin
      Reply(271)
      end

      if (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) then begin
      GAnswer(275,1,NodeAnswer104)
      end
      else if (getQuest(GVAR_PHENIX_PARTY_QST_B) >= qEnd) then begin
      GAnswer(279,1,NodeAnswer104)
      end
      NAnswer(272,1,NodeSndDialog)
   end
end

procedure NodeAnswer104 begin
   set_map_var(MVAR_BRAHMIN_Garage,2);
   Reply(276)
   NAnswer(277,1,Node999)
end

procedure NodeAnswer105 begin
   bitDialogExp(bit_6,0)
   Reply(341)
   BAnswer(342,1,NodeAnswer106)
   NAnswer(343,1,NodeAnswer107)
end

procedure NodeAnswer106 begin
   setBonusReaction(-10)
   call NodeAnswer107;
end

procedure NodeAnswer107 begin
   Reply(344)
   NAnswer(345,1,NodeAnswer108)
end

procedure NodeAnswer108 begin
   Reply(346)
   NAnswer(347,1,NodeAnswer109)
end

procedure NodeAnswer109 begin
   Reply(348)
   NAnswer(349,1,Node999)
end

procedure NodeAnswer200 begin
   Reply(311)
   NAnswer(312,1,NodeAnswer201)
   NAnswer(315,1,NodeAnswer202)
end

procedure NodeAnswer201 begin
   Reply(313)
   NAnswer(326,1,NodeSndDialog)
   NAnswer(314,1,Node999)
end

procedure NodeAnswer202 begin
   Reply(316)
   NAnswer(317,1,NodeAnswer203)
   GAnswer(318,1,NodeAnswer203)
end

procedure NodeAnswer203 begin
   Reply(319)
   NAnswer(320,1,NodeAnswer204)
end

procedure NodeAnswer204 begin
   Reply(321)
   NAnswer(322,1,NodeAnswer205)
end

procedure NodeAnswer205 begin
   bitDialogExp(bit_4,50)
   Reply(323)
   NAnswer(325,1,NodeSndDialog)
   NAnswer(324,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(331)
   NAnswer(332,1,NodeAnswer301)
   BAnswer(333,1,NodeAnswer301)
end

procedure NodeAnswer301 begin
   Reply(334)
   NAnswer(335,1,NodeAnswer302)
end

procedure NodeAnswer302 begin
   bitDialogExp(bit_5,25)
   Reply(336)
   NAnswer(337,1,NodeSndDialog)
   NAnswer(338,1,Node999)
end
