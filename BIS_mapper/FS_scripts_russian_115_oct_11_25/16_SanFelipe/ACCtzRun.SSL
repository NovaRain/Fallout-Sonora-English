#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_ACCtzRun
#define TOWN_REP_VAR                    GVAR_TOWN_REP_SAN_FELIPE // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_SANFELIPE_CTZN   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_HERMO_SOLDIER      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      35 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeSndDialog;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;

//---------------------

//#define LVAR_Flag_A                     (5) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if DudeTraitHas(TRAIT_espanol) then begin
       critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_AI_PACKET,AI_HERMO_SOLDIER_TRAIT);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //!!! поправка на статус личного квеста
       timer_float_reply(110,113)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   //!!! личный квест
   Reply(200)
   NAnswer(201,1,NodeFstDialog101)
end

procedure NodeFstDialog101 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   Reply(206)
   GAnswer(207,1,NodeFstDialog104)
   BAnswer(208,1,NodeFstDialog105)
end

procedure NodeFstDialog104 begin
   setReaction(20)
   Reply(209)
   NAnswer(210,1,NodeFstDialog106)
end

procedure NodeFstDialog105 begin
   setReaction(-20)
   Reply(209)
   NAnswer(210,1,NodeFstDialog106)
end

procedure NodeFstDialog106 begin
   Reply(211)
   NAnswer(212,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(220)

   NAnswer(230,3,NodeAnswer101)
   NAnswer(236,3,NodeAnswer103)
   NAnswer(242,3,NodeAnswer105)

   /*
   if (global_var(GVAR_SANFELIPE_STATUS_MONSTRCOAST) >= SANFELIPE_DEAD_MONSTRCOAST) then begin
   end
   */

   NAnswer(221,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(231)
   NAnswer(232,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(233)
   NAnswer(234,1,NodeSndDialog)
   NAnswer(235,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(237)
   NAnswer(238,1,NodeAnswer104)
end

procedure NodeAnswer104 begin
   Reply(239)
   NAnswer(240,1,NodeSndDialog)
   NAnswer(241,1,Node999)
end

procedure NodeAnswer105 begin
   Reply(243)
   NAnswer(244,1,NodeSndDialog)
   NAnswer(245,1,Node999)
end
