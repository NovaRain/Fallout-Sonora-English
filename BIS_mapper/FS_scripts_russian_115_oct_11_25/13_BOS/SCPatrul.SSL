#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_SCPatrul
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PUERTO // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_BROTHERS_STEEL   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BOS_PALADIN         // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_BOS              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      100 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst108;
procedure NodeQst109;
procedure NodeQst110;
procedure NodeQst111;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeQst202;
procedure NodeQst203;
procedure NodeQst204;
procedure NodeQst205;
procedure NodeQst300;
procedure NodeQst301;
procedure NodeQst302;
procedure NodeQst303;
procedure NodeQst304;
procedure NodeQst305;
procedure NodeQst400;
procedure NodeQst401;
procedure NodeQst402;
procedure NodeQst403;
procedure NodeQst404;
procedure NodeQst405;
procedure NodeQst406;
procedure NodeQst407;
procedure NodeQst408;
procedure NodeQst500;
procedure NodeQst501;
procedure NodeQst502;
procedure NodeQst503;
procedure NodeQst504;
procedure NodeQst505;
procedure NodeQst506;
procedure NodeQst507;
procedure NodeQst508;
procedure NodeQst509;
procedure NodeQst510;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if self_enemy_dude then begin
   BarklyAttakDude
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,3,3,3) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
   BarklyAttakDude
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   //mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_INVISIBLE);
   set_map_var(MVAR_PUERTO_PATRLBOSS_DEAD, -1);
   set_map_var(MVAR_PUERTO_JECK_DIALOG_FLAG, -1);
   if (getQuest(GVAR_PUERTO_QST_BANDITS_PIP) == qStart) then begin
   setQuest(GVAR_PUERTO_QST_BANDITS_PIP,qStop);
   end
   if (getQuest(GVAR_PUERTO_QST_INFERNO) <= qStart) then begin
   setQuest(GVAR_PUERTO_QST_INFERNO,qStop);
   end
   if (getQuest(GVAR_PUERTO_QST_HERMOSILLO) <= qStart) then begin
   setQuest(GVAR_PUERTO_QST_HERMOSILLO,qStop);
   end
   kill_critter_opt
   kill_critter_BoS_item
end

procedure talk_p_proc begin
   if (global_var(GVAR_PUERTO_BOS_DESTROY_TIMER) != 0) then begin
   floater(dude_obj,102,COLOR_MSG_GREY);
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,25) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,-90) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_PUERTO_QST_INFERNO) != qZero) then begin
   bitDialogExp(bit_1,0)
   bitDialogExp(bit_2,0)
   end

   if ((getQuest(GVAR_PUERTO_QST_INFERNO) <= qStart) and (armor_pid_dude_var == PID_ARMOR_POWER_A)) then begin
   call NodeQst204;
   end
   else if ((global_var(GVAR_TITUL_REBIRTH) > 0) and (bitDialog(bit_3) == 0)) then begin
   call NodeFstDialog2;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if (bitDialog(bit_2) == 0) then begin
   call NodeQst107;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeQst101)
end

procedure NodeFstDialog2 begin
   bitDialogExp(bit_3,0)
   Reply(225)
   NAnswer(226,1,NodeStartDialog)
   BAnswer(227,1,NodeStartDialog)
end

procedure NodeQst101 begin
   Reply(202)
   NAnswer(203,1,NodeQst103)
   GAnswer(204,1,NodeQst102)
   NAnswer(210,5,NodeQst106)
end

/*
{228}{}{Разве эта территория принадлежала США?}
{229}{}{В 2051 территория Мексики вошла во владение Штатов. С тех пор Мексике запрещено иметь собственную регулярную армию, а ее территория может быть свободно использована для размещения американских войск. Но, как я уже говорил, это просто история.}

procedure NodeQst101b begin
   bitDialogExp(bit_4,50)
   Reply(229)
   NAnswer(203,1,NodeQst103)
   GAnswer(204,1,NodeQst102)
   NAnswer(210,5,NodeQst106)
end
*/

procedure NodeQst102 begin
   setBonusReaction(10)
   call NodeQst103;
end

procedure NodeQst103 begin
   Reply(205)
   NAnswer(206,1,NodeQst105)
   BAnswer(207,1,NodeQst104)
end

procedure NodeQst104 begin
   setBonusReaction(-10)
   call NodeQst105;
end

procedure NodeQst105 begin
   zReply(208)
   NAnswer(209,1,NodeQst106)
end

procedure NodeQst106 begin
   Reply(211)
   NAnswer(213,1,NodeQst108)
   BAnswer(212,1,Node998)
   NAnswer(214,1,Node999)
end

procedure NodeQst107 begin
   Reply(215)
   NAnswer(213,1,NodeQst108)
   BAnswer(212,1,Node998)
   NAnswer(214,1,Node999)
end

procedure NodeQst108 begin
   Reply(216)
   NAnswer(217,1,NodeQst109)
end

procedure NodeQst109 begin
   zReply(218)
   NAnswer(219,1,NodeQst110)
end

procedure NodeQst110 begin
   Reply(220)
   NAnswer(221,1,NodeQst111)
end

procedure NodeQst111 begin
   bitDialogExp(bit_2,0)
   mark_on_map(AREA_INFIERNO)
   setQuest(GVAR_PUERTO_QST_INFERNO,qStart);
   Reply(222)
   NAnswer(223,1,Node999)
   BAnswer(224,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_BOS) != 0) then begin
   Reply(232)
   end
   else begin
   Reply(230)
   end

   //--- Поиск пропавшего отряда
   if (getQuest(GVAR_PUERTO_QST_INFERNO) == qStart) then begin
      NAnswer(240,1,NodeQst200)
      if ((getQuest(GVAR_INF_QST_PALADIN_A) >= qEnd) or (global_var(GVAR_INF_STATUS_PALADIN)>0)) then begin
      GAnswer(247,1,NodeQst202)
      end
      else if ((getQuest(GVAR_INF_QST_PALADIN_A) <= qStop) or (global_var(GVAR_INF_STATUS_PALADIN)<0)) then begin
      GAnswer(247,1,NodeQst202)
      end
   end

   //--- Разведка в Эрмосильо
   if (getQuest(GVAR_PUERTO_QST_HERMOSILLO) == qZero) then begin
      if (gvar_bit(GVAR_DIALOGS_FLAGS_BIT, bit_20) != 0) then begin
      NAnswer(277,1,NodeQst300)
      end
      else begin
      NAnswer(261,1,NodeQst300)
      end
   end

   if (getQuest(GVAR_PUERTO_QST_HERMOSILLO) == qStart) then begin
      if (town_known(AREA_HERMOSILLO) >= MARK_STATE_VISITED) then begin
      NAnswer(270,1,NodeQst303)
      end
   end

   //--- Рейды на бандитские лагеря
   if (getQuest(GVAR_PUERTO_QST_BANDITS_PIP) == qZero) then begin
      if (global_var(GVAR_TITUL_BOS) != 0) then begin
         GAnswer(314,1,NodeQst404)
      end
      if (getQuest(GVAR_PUERTO_QST_INFERNO) >= qEnd) then begin
         GAnswer(317,1,NodeQst405)
      end
      else if (getQuest(GVAR_PUERTO_QST_HERMOSILLO) >= qEnd) then begin
         GAnswer(318,1,NodeQst405)
      end
      else begin
         if (bitDialog(bit_5) != 0) then begin
         GAnswer(329,1,NodeQst402)
         end
         NAnswer(300,1,NodeQst400)
      end
   end

   if (getQuest(GVAR_PUERTO_QST_BANDITS_PIP) == qStart) then begin
      if (getQuest(GVAR_PUERTO_QST_BANDITS_CMP) <= -10) then begin
         BAnswer(350,1,NodeQst507)
      end
      else if (getQuest(GVAR_PUERTO_QST_BANDITS_CMP) <= qStop) then begin
         BAnswer(354,1,NodeQst508)
      end
      else if (getQuest(GVAR_PUERTO_QST_BANDITS_CMP) == qEnd) then begin
         NAnswer(330,1,NodeQst500)
      end
      if (global_var(GVAR_PUERTO_SKLAD_DOPUSK) == 0) then begin
         NAnswer(360,1,NodeQst510)
      end
   end

   //--- Увольнительный на берег
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qStart) then begin
      NAnswer(280,1,NodeAnswer100)
   end

   NAnswer(231,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(281)
   NAnswerReaction(282,1,NodeAnswer102,75,282,NodeAnswer101)
   /*
   if (getQuest(GVAR_PUERTO_QST_BANDITS_PIP) >= qEnd) then begin
   NAnswer(282,1,NodeAnswer102)
   end
   else begin
   NAnswerReaction(282,1,NodeAnswer102,75,282,NodeAnswer101)
   end
   */
end

procedure NodeAnswer101 begin
   if (global_var(GVAR_TITUL_BOS)>0) then begin
   Reply(285)
   NAnswer(286,1,Node999)
   end
   else begin
   zReply(283)
   zNAnswer(284,1,Node999)
   end
end

procedure NodeAnswer102 begin
   setQuest(GVAR_PUERTO_QST_FAREWELL,qEnd);
   Reply(287)
   NAnswer(288,1,Node999)
end

procedure NodeQst200 begin
   Reply(241)
   NAnswer(242,1,NodeQst201)
end

procedure NodeQst201 begin
   Reply(243)
   NAnswer(246,1,NodeSndDialog)
   NAnswer(244,1,Node999)
   BAnswer(245,1,Node999)
end

procedure NodeQst202 begin
   PLAY_FADE
   setQuest(GVAR_PUERTO_QST_INFERNO,qEnd);
   exp_add(500);
   setBonusReaction(25)
   set_REP(5)

   Reply(248)
   NAnswer(249,1,NodeQst203)
end

procedure NodeQst203 begin
   Reply(250)
   NAnswer(251,1,Node999)
   BAnswer(252,1,Node999)
end

procedure NodeQst204 begin
   Reply(253)
   GAnswer(254,1,NodeQst205)
end

procedure NodeQst205 begin
   Reply(255)
   NAnswer(256,1,NodeQst202)
   BAnswer(257,1,Node999)
end

procedure NodeQst300 begin
   if (gvar_bit(GVAR_DIALOGS_FLAGS_BIT, bit_20) != 0) then begin
      Reply(276)
      NAnswer(270,1,NodeQst303)
   end
   else begin
      Reply(262)
      NAnswer(263,1,NodeQst301)
      GAnswer(266,1,NodeQst302)
      if (town_known(AREA_HERMOSILLO) >= MARK_STATE_VISITED) then begin
      NAnswer(270,1,NodeQst303)
      end
      NAnswer(265,1,Node999)
   end
end

procedure NodeQst301 begin
   Reply(264)
   GAnswer(267,1,NodeQst302)
   NAnswer(265,1,Node999)
end

procedure NodeQst302 begin
   setQuest(GVAR_PUERTO_QST_HERMOSILLO,qStart);
   Reply(268)
   NAnswer(263,1,NodeQst301)
   NAnswer(269,1,Node999)
end

procedure NodeQst303 begin
   set_map_var(MVAR_PUERTO_JECK_DIALOG_FLAG, 1);
   zReply(278)

   if (item_amnt(dude_obj,PID_Q_HERMO_INFO_DISK) > 0) then begin
   NAnswer(289,1,NodeQst304)
   end
   if (gvar_bit(GVAR_DIALOGS_FLAGS_BIT, bit_20) != 0) then begin
   //NAnswer(290,1,NodeQst304) - инфа от разведчика
   end

   NAnswer(279,1,Node999)
end

procedure NodeQst304 begin
   PLAY_FADE
   item_remove(dude_obj,PID_Q_HERMO_INFO_DISK,1)
   Reply(271)
   NAnswer(272,1,NodeQst305)
   BAnswer(273,1,NodeQst305)
end

procedure NodeQst305 begin
   setQuest(GVAR_PUERTO_QST_HERMOSILLO,qEnd);
   exp_add(1000);
   setBonusReaction(25)
   set_REP(5)
   item_add(dude_obj,PID_BOOTLE_CAPS,1000)
   Reply(274)
   NAnswer(275,1,Node999)
end

//--- ПАТРУЛЬ (РЕЙДЫ НА ЛАГЕРЯ)

procedure NodeQst400 begin
   Reply(301)
   NAnswer(304,1,NodeQst401)
   NAnswer(303,1,NodeSndDialog)
   NAnswer(302,1,Node999)
end

procedure NodeQst401 begin
   Reply(305)
   GAnswer(307,1,NodeQst402)
   NAnswer(306,1,Node999)
end

procedure NodeQst402 begin
   bitDialogExp(bit_5,0)
   Reply(308)
   GAnswer(310,1,NodeQst403)
   NAnswer(309,1,Node999)
end

procedure NodeQst403 begin
   if (dude_level>=10) then begin
   Reply(312)
   NAnswer(313,1,NodeQst406)
   end
   else begin
   Reply(311)
   NAnswer(309,1,Node999)
   end
end

procedure NodeQst404 begin
   Reply(315)
   NAnswer(316,1,NodeQst406)
end

procedure NodeQst405 begin
   Reply(319)
   NAnswer(320,1,NodeQst406)
end

procedure NodeQst406 begin
   setQuest(GVAR_PUERTO_QST_BANDITS_PIP,qStart);
   mark_on_map(AREA_BOS_CAMPS)
   Reply(321)
   NAnswer(322,1,NodeQst407)
   BAnswer(323,1,NodeQst407)
end

procedure NodeQst407 begin
   Reply(324)
   NAnswer(325,1,NodeQst408)
end

procedure NodeQst408 begin
   Reply(326)
   zNAnswer(327,1,Node999)
   BAnswer(328,1,Node999)
end

procedure NodeQst500 begin
   PLAY_FADE
   if (global_var(GVAR_PUERTO_STATUS_BANDITS) == 0) then begin
   Reply(331)
   NAnswer(332,1,NodeQst501)
   end
   else if (global_var(GVAR_PUERTO_STATUS_BANDITS) == 1) then begin
   Reply(340)
   NAnswer(341,1,NodeQst504)
   end
   else begin
   Reply(346)
   NAnswer(347,1,NodeQst506)
   end
end

procedure NodeQst501 begin
   Reply(333)
   NAnswer(334,1,NodeQst502)
   BAnswer(337,1,NodeQst503)
end

procedure NodeQst502 begin
   inc_global_var(GVAR_PUERTO_STATUS_BANDITS);
   setQuest(GVAR_PUERTO_QST_BANDITS_CMP,qZero);
   setBonusReaction(25)
   set_REP(3)
   exp_add(750);
   wm_area_set_pos(AREA_BOS_CAMPS, 834, 1384); //! уточнить координаты
   mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_KNOWN);

   Reply(335)
   NAnswer(336,1,Node999)
end

procedure NodeQst503 begin
   setBonusReaction(-5)
   Reply(338)
   NAnswer(339,1,NodeQst502)
end

procedure NodeQst504 begin
   Reply(342)
   NAnswer(343,1,NodeQst505)
end

procedure NodeQst505 begin
   inc_global_var(GVAR_PUERTO_STATUS_BANDITS);
   setQuest(GVAR_PUERTO_QST_BANDITS_CMP,qZero);
   setBonusReaction(35)
   set_REP(5)
   exp_add(1000);
   wm_area_set_pos(AREA_BOS_CAMPS, 984, 1284); //! уточнить координаты
   mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_KNOWN);

   Reply(344)
   NAnswer(345,1,Node999)
end

procedure NodeQst506 begin
   inc_global_var(GVAR_PUERTO_STATUS_BANDITS);
   setQuest(GVAR_PUERTO_QST_BANDITS_PIP,qEnd);
   setQuest(GVAR_PUERTO_QST_BANDITS_CMP,qZero);
   setBonusReaction(50)
   set_REP(7)
   exp_add(1500);
   //mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_INVISIBLE);

   Reply(348)
   NAnswer(349,1,Node999)
end

procedure NodeQst507 begin
   setQuest(GVAR_PUERTO_QST_BANDITS_PIP,qStop);
   setQuest(GVAR_PUERTO_QST_BANDITS_CMP,qStop);
   setBonusReaction(-75)
   //mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_INVISIBLE);

   Reply(351)
   NAnswer(352,1,Node999)
   BAnswer(353,1,Node999)
end

procedure NodeQst508 begin
   Reply(355)
   NAnswer(356,1,NodeQst509)
end

procedure NodeQst509 begin
   setQuest(GVAR_PUERTO_QST_BANDITS_PIP,qStop);
   setQuest(GVAR_PUERTO_QST_BANDITS_CMP,qStop);
   setBonusReaction(-25)
   exp_add(500);
   //mark_area_known(MARK_TYPE_TOWN, AREA_BOS_CAMPS, MARK_STATE_INVISIBLE);

   zReply(357)
   NAnswer(358,1,Node999)
end

procedure NodeQst510 begin
   set_global_var(GVAR_PUERTO_SKLAD_DOPUSK,2);
   Reply(361)
   NAnswer(362,1,Node999)
end
