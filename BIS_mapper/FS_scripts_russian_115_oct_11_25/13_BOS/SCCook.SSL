#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_SCCook
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PUERTO // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        11  // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_BROTHERS_STEEL   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BOS_CAVALER        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_BOS              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      80 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeFstDialog108;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeAnswer109;
procedure NodeAnswer110;
procedure NodeAnswer111;
procedure NodeAnswer112;
procedure NodeAnswer113;
procedure NodeAnswer114;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer207;
procedure NodeAnswer208;
procedure NodeBarter100;
procedure NodeBarter101;
procedure NodeBarter102;
procedure NodeBarter103;
procedure NodeBarter200;

//---------------------

//#define LVAR_Flag_A                     (8) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_BarterBoxProc(ONE_GAME_WEEK)
   end
end

procedure setBarterA begin
   //не торгует до получения допуска
end

procedure setBarterB begin
   //Синий уровень товара - для приближенных и торговцев
        check_restock_item(PID_M_IRP, 3, 5, 100)
        check_restock_item(PID_M_NOODLES, 4, 6, 100)
        check_restock_item(PID_M_WATER_FLASK, 5, 7, 100)

   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_patrol(HomeTile,20912)
   end
   if (fixed_param == 2) then begin
       timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_BOS) <= 0) then begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if self_enemy_dude then begin
   BarklyAttakDude
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
   BarklyAttakDude
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qStart) then begin
   setQuest(GVAR_PUERTO_QST_FAREWELL,qZero);
   end
   kill_critter_opt
   kill_critter_box
   kill_critter_BoS_item
end

procedure talk_p_proc begin
   if (global_var(GVAR_PUERTO_BOS_DESTROY_TIMER) != 0) then begin
   floater(dude_obj,102,COLOR_MSG_GREY);
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,-90) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   Reply(200)
   NAnswer(201,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   bitDialogExp(bit_1,0)
   Reply(202)
   NAnswer(203,1,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog104)
end

procedure NodeFstDialog104 begin
   Reply(206)
   NAnswer(207,1,NodeFstDialog105)
   NAnswer(210,1,NodeFstDialog106)
end

procedure NodeFstDialog105 begin
   set_REP(-1)
   setBonusReaction(-20)
   Reply(208)
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   NAnswer(212,1,NodeFstDialog107)
   end
   NAnswer(215,1,NodeFstDialog108)
   NAnswer(209,1,Node999)
end

procedure NodeFstDialog106 begin
   Reply(211)
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   NAnswer(212,1,NodeFstDialog107)
   end
   NAnswer(215,1,NodeFstDialog108)
   NAnswer(209,1,Node999)
end

procedure NodeFstDialog107 begin
   Reply(213)
   NAnswer(214,1,Node999)
end

procedure NodeFstDialog108 begin
   Reply(216)
   NAnswer(217,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   zReply(229)
   end
   else begin
   Reply(random(220,226))
   end

   if (bitDialog(bit_3) == 0) then begin
   NAnswer(250,3,NodeAnswer100)
   end
   else begin
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qStart) then begin
   NAnswer(272,3,NodeAnswer109)
   end
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qEnd) then begin
   GAnswer(282,1,NodeAnswer112)
   end
   end

   NAnswer(300,3,NodeAnswer200)
   if (bitDialog(bit_4) != 0) then begin
   if (item_amnt(dude_obj,PID_COFFEE)>0) then begin
   NAnswer(311,1,NodeAnswer204)
   end
   end

   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(230,1,NodeBarter200)
   end
   end

   if (get_BarterDopusk == 0) then begin
   NAnswer(234,1,NodeBarter100)
   end

   NAnswer(219,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(251)
   NAnswer(254,1,NodeAnswer102)
   BAnswer(252,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   set_REP(-1)
   setBonusReaction(-20)
   Reply(253)
   NAnswer(256,1,NodeAnswer103)
end

procedure NodeAnswer102 begin
   Reply(255)
   NAnswer(256,1,NodeAnswer103)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_3,50)
   Reply(257)
   GAnswer(262,1,NodeAnswer106)
   NAnswer(260,1,NodeAnswer105)
   BAnswer(258,1,NodeAnswer104)
end

procedure NodeAnswer104 begin
   set_REP(-1)
   setBonusReaction(-10)
   Reply(259)
   NAnswer(260,1,NodeAnswer106)
end

procedure NodeAnswer105 begin
   Reply(261)
   NAnswer(260,1,NodeAnswer106)
end

procedure NodeAnswer106 begin
   set_REP(1)
   setBonusReaction(10)
   Reply(263)
   NAnswer(264,1,NodeAnswer107)
   NAnswer(268,1,NodeAnswer108)
end

procedure NodeAnswer107 begin
   setQuest(GVAR_PUERTO_QST_FAREWELL,qStart);
   Reply(265)
   NAnswer(266,1,Node999)
   NAnswer(267,1,Node999)
end

procedure NodeAnswer108 begin
   setQuest(GVAR_PUERTO_QST_FAREWELL,qStart);
   Reply(269)
   NAnswer(266,1,Node999)
   NAnswer(267,1,Node999)
end

procedure NodeAnswer109 begin
   Reply(273)
   NAnswer(275,3,NodeAnswer110)
   NAnswer(278,3,NodeAnswer111)
   NAnswer(274,1,Node999)
end

procedure NodeAnswer110 begin
   Reply(276)
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qEnd) then begin
   GAnswer(282,1,NodeAnswer112)
   end
   NAnswer(279,3,NodeAnswer111)
   NAnswer(277,1,Node999)
end

procedure NodeAnswer111 begin
   Reply(281)
   if (getQuest(GVAR_PUERTO_QST_FAREWELL) == qEnd) then begin
   GAnswer(282,1,NodeAnswer112)
   end
   NAnswer(280,3,NodeAnswer110)
   NAnswer(277,1,Node999)
end

procedure NodeAnswer112 begin
   setQuest(GVAR_PUERTO_QST_FAREWELL,qEnd+1);
   exp_add(350);
   Reply(283)
   NAnswer(285,1,NodeAnswer113)
   NAnswer(284,1,NodeAnswer114)
end

procedure NodeAnswer113 begin
   item_add(dude_obj,PID_AMMO_10_MM_NSP,48)
   Reply(286)
   NAnswer(287,1,Node999)
end

procedure NodeAnswer114 begin
   set_REP(3)
   set_SLAVA(15)
   setBonusReaction(50)
   call Node999;
end

procedure NodeAnswer200 begin
   if (random(0,1) == 0) then begin
   zReply(301)
   NAnswer(302,1,NodeAnswer201)
   end
   else begin
   zReply(321)
   NAnswer(322,1,NodeAnswer201)
   end
end

procedure NodeAnswer201 begin
   Reply(303)
   NAnswer(304,1,NodeAnswer202)
end

procedure NodeAnswer202 begin
   Reply(305)
   if (bitDialog(bit_4) == 0) then begin
   NAnswer(306,1,NodeAnswer203)
   end
   NAnswer(310,1,Node999)
end

procedure NodeAnswer203 begin
   bitDialogExp(bit_4,0)
   Reply(307)
   NAnswer(308,1,Node999)
   NAnswer(309,1,Node999)
end

procedure NodeAnswer204 begin
   Reply(mstr(312)+(proto_data(PID_COFFEE,it_cost)*3)+mstr(313))
   NAnswer(315,1,NodeAnswer205)
   GAnswer(318,1,NodeAnswer207)
   NAnswer(314,1,Node999)
end

procedure NodeAnswer205 begin
   if (item_amnt(dude_obj,PID_COFFEE)>0) then begin
   item_remove(dude_obj,PID_COFFEE,1)
   item_add(dude_obj,PID_BOOTLE_CAPS,proto_data(PID_COFFEE,it_cost)*3)
   exp_add(50);
   call NodeAnswer206;
   end
   else begin
   call NodeAnswer204;
   end
end

procedure NodeAnswer206 begin
   Reply(316)
   NAnswer(317,1,Node999)
end

procedure NodeAnswer207 begin
   if (item_amnt(dude_obj,PID_COFFEE)>0) then begin
   item_remove(dude_obj,PID_COFFEE,1)
   set_REP(1)
   set_SLAVA(5)
   setBonusReaction(10)
   exp_add(75);
   call NodeAnswer208;
   end
   else begin
   call NodeAnswer204;
   end
end

procedure NodeAnswer208 begin
   Reply(319)
   NAnswer(320,1,Node999)
end

//--- ТОВАРООБОРОТ

procedure NodeBarter100 begin
   Reply(235)
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   NAnswer(245,1,NodeBarter103)
   end
   else if (global_var(GVAR_PUERTO_SKLAD_DOPUSK)>0) then begin
   NAnswer(245,1,NodeBarter103)
   end
   NAnswerSkill(242,3,NodeBarter102,SKILL_BARTER,90,238,NodeBarter101)
   NAnswer(236,1,Node999)
   BAnswer(237,1,Node999)
end

procedure NodeBarter101 begin
   Reply(239)
   NAnswer(236,1,Node999)
   BAnswer(237,1,Node999)
end

procedure NodeBarter102 begin
   call setBarterB;
   Reply(243)
   NAnswer(244,1,Node999)
end

procedure NodeBarter103 begin
   call setBarterB;
   Reply(246)
   NAnswer(247,1,Node999)
end

procedure NodeBarter200 begin
   bitDialogExp(bit_2,0)
   if (get_BarterDopusk == 0) then begin
   call setBarterB;
   end
   item_add(dude_obj,PID_M_IRP,3)
   item_add(dude_obj,PID_M_NOODLES,3)
   item_add(dude_obj,PID_M_WATER_FLASK,3)
   Reply(231)
   NAnswer(232,1,Node999)
   BAnswer(233,1,Node999)
end
