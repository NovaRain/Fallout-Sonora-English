#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_ICDry
#define TOWN_REP_VAR                    -1 // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      15 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog10;
procedure NodeFstDialog11;
procedure NodeFstDialog12;
procedure NodeFstDialog13;
procedure NodeFstDialog14;
procedure NodeFstDialog15;
procedure NodeFstDialog16;
procedure NodeFstDialog17;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeAnswer206;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer400;
procedure NodeAnswer401;
procedure NodeAnswer402;
procedure NodeAnswer500;
procedure NodeAnswer501;
procedure NodeAnswer502;
procedure NodeAnswer503;
procedure NodeAnswer504;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       if (getReaction<0) then begin
       floater(self_obj,102,COLOR_MSG_RED);
       display_mstr(103);
       attack(dude_obj);
       end
       else begin
       floater(self_obj,104,COLOR_MSG_RED);
       end
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 3) then begin
   setBonusReaction(10)
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   /*
   Замечание: персонаж тем лучше относится к ГГ, чем тот сильнее его запугивает.
   Поэтому функция setBonusReaction(x) может использоваться с противными знаками.
   */
   if (getQuest(GVAR_INF_QST_APOSTOL_B) >= (qEnd+2)) then begin
   floater(self_obj, 111, COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
   add_timer_event(self_obj,10,3);
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

/*
{200}{}{(человекоподобное существо завидев вас сначала жмется в угол, а затем скалит беззубый рот и делает устрашающий выпад) Ш-ша-а! Не подходи, чуж-жак!}
{201}{}{Сиди смирно, урод. Еще раз вякнешь - располовиню к чертовой матери.}
{202}{}{Арх-х... (задвигается обратно в угол, наклоняя голову словно в ожидании удара)}
{203}{}{Да. Вот так. Знай свое место, отброс.}
{204}{}{Не волнуйся, я не хочу тебя обидеть.}
{205}{}{Ладно, ладно, все в порядке. Я тебя не обижу. Я друг.}
{206}{}{(его взгляд меняется, а поза становится менее напряженной) Чуж-жак! Пос-мотрите на него. Такой... гладкий, свеж-жий, как я раньше.}
{207}{}{Эй, постой-ка...}
{208}{}{(обходит вас вокруг и пытается дотронуться) Одеж-жда... Я помню... Да-да, я помню! Ее носили жители убежищ. Я не был в убижеще, поэтому я здесь.}
{209}{}{Я это вижу. Мне очень жаль, дружище.}
{210}{}{(трогает вас за все места, наконец вы делаете жест, и потрошитель с оскалом пятится назад) Ш-ш!}
{211}{}{Тебе стоит быть дружелюбнее. Я лишь хочу с тобой поговорить.}
{212}{}{Меня не интересуют твои воспоминания о прошлом.}
{213}{}{Ш-ш! (подняв ладони над согнутой головой пятится назад) Вс-се понятно. Вс-се понятно.}
{214}{}{Я отпущу тебя, когда узнаю все, что мне нужно.}
{215}{}{А-а! Сдохни, монстр! Умри!}

{220}{}{Ш-ш! Что ты хочешь? Город разруш-шен. Здесь никого нет. Иди, иди, не мешай мне ловить крыс-с...}
{221}{}{Ладно, я ухожу. Не вздумай идти за мной.}
*/


//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   Reply(200)
   GAnswer(202,3,NodeFstDialog11)
   BAnswer(203,3,NodeFstDialog10)
   BAnswer(201,1,Node998)
end

procedure NodeFstDialog10 begin
   setBonusReaction(-10)
   call NodeFstDialog12;
end

procedure NodeFstDialog11 begin
   setBonusReaction(10)
   call NodeFstDialog12;
end

procedure NodeFstDialog12 begin
   bitDialogExp(bit_1,50)
   Reply(204)
   BAnswer(206,1,NodeFstDialog14)
   GAnswer(205,1,NodeFstDialog13)
end

procedure NodeFstDialog13 begin
   setBonusReaction(-10)
   call NodeFstDialog15;
end

procedure NodeFstDialog14 begin
   setBonusReaction(10)
   call NodeFstDialog15;
end

procedure NodeFstDialog15 begin
   if ((armor_pid_dude == PID_ARMOR_VAULT) or (armor_pid_dude_var <= 0)) then begin
   Reply(207)
   end
   else begin
   Reply(222)
   end
   GAnswer(208,1,NodeFstDialog16)
   BAnswer(209,1,NodeFstDialog17)
end

procedure NodeFstDialog16 begin
   setBonusReaction(-10)
   call NodeSndDialog;
end

procedure NodeFstDialog17 begin
   setBonusReaction(10)
   call NodeSndDialog;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(220)

   NAnswer(230,3,NodeAnswer100)
   if (bitDialog(bit_2) != 0) then begin
      NAnswer(265,3,NodeAnswer200)
      NAnswer(266,3,NodeAnswer300)
      if (getQuest(GVAR_PUERTO_QST_INFERNO) == qStart) then begin
      if (bitDialog(bit_7) == 0) then begin
      NAnswer(300,3,NodeAnswer500)
      end
      end
   end

   NAnswer(221,1,Node999)
end

//--- О СЕБЕ

procedure NodeAnswer100 begin
   bitDialogExp(bit_2,0)
   call NodeAnswer101;
end

procedure NodeAnswer101 begin
   Reply(231)
   NAnswer(234,1,NodeAnswer102)
   NAnswer(232,1,NodeAnswer200)
   NAnswer(233,1,NodeAnswer300)
end

procedure NodeAnswer102 begin
   Reply(235)
   NAnswer(238,1,NodeAnswer103)
   NAnswer(236,1,NodeAnswer200)
   NAnswer(237,1,NodeAnswer300)
   NAnswer(247,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   Reply(239)
   NAnswer(242,1,NodeAnswer104)
   NAnswer(240,1,NodeAnswer200)
   NAnswer(241,1,NodeAnswer300)
   NAnswer(247,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   bitDialogExp(bit_3,25)
   Reply(243)
   NAnswer(245,1,NodeAnswer200)
   NAnswer(246,1,NodeAnswer300)
   GAnswer(244,5,NodeAnswer400)
   NAnswer(247,1,NodeSndDialog)
end

//--- О СТАЕ

procedure NodeAnswer200 begin
   Reply(250)
   NAnswer(251,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   Reply(252)
   NAnswer(253,1,NodeAnswer202)
end

procedure NodeAnswer202 begin
   Reply(254)
   NAnswer(257,1,NodeAnswer203)
   NAnswer(255,1,NodeAnswer100)
   NAnswer(256,1,NodeAnswer300)
end

procedure NodeAnswer203 begin
   Reply(258)
   NAnswer(260,5,NodeAnswer204)
   NAnswer(255,1,NodeAnswer100)
   NAnswer(256,1,NodeAnswer300)
   NAnswer(259,1,NodeSndDialog)
end

procedure NodeAnswer204 begin
   bitDialogExp(bit_4,25)
   call NodeAnswer205;
end

procedure NodeAnswer205 begin
   Reply(261)
   NAnswer(262,1,NodeAnswer206)
end

procedure NodeAnswer206 begin
   Reply(263)
   NAnswer(264,1,NodeSndDialog)
end

//--- О ГОРОДЕ

procedure NodeAnswer300 begin
   bitDialogExp(bit_5,25)
   Reply(270)
   NAnswer(271,1,NodeAnswer301)
end

procedure NodeAnswer301 begin
   Reply(272)
   NAnswer(273,1,NodeAnswer302)
end

procedure NodeAnswer302 begin
   Reply(274)
   NAnswer(275,1,NodeAnswer102)
   NAnswer(276,1,NodeAnswer200)
   NAnswer(277,5,NodeAnswer400)
end

//--- О ВОЙНЕ

procedure NodeAnswer400 begin
   bitDialogExp(bit_6,100)
   set_REP(10)
   Reply(280)
   NAnswer(281,1,NodeAnswer401)
end

procedure NodeAnswer401 begin
   Reply(282)
   NAnswer(283,1,NodeAnswer402)
end

procedure NodeAnswer402 begin
   Reply(284)
   NAnswer(288,1,NodeAnswer100)
   NAnswer(285,1,NodeAnswer200)
   NAnswer(286,1,NodeAnswer300)
   NAnswer(287,1,NodeSndDialog)
end

//--- О ПРОПАВШЕМ ОТРЯДЕ БС

procedure NodeAnswer500 begin
   bitDialogExp(bit_7,0)
   Reply(301)
   zBAnswer(302,1,NodeAnswer502)
   NAnswer(303,1,NodeAnswer503)
end

procedure NodeAnswer501 begin
   Reply(304)
   NAnswer(305,1,NodeAnswer504)
end

procedure NodeAnswer502 begin
   setBonusReaction(10)
   call NodeAnswer501;
end

procedure NodeAnswer503 begin
   setBonusReaction(-10)
   call NodeAnswer501;
end

procedure NodeAnswer504 begin
   Reply(306)
   NAnswer(307,1,NodeSndDialog)
end
