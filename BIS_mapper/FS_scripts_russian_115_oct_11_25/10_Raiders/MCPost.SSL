#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_MCPost
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RAIDERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_WAR_ROADS        // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_WAR_ROAD           // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_WARROAD          // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      75 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog100;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog202;
procedure NodeFstDialog203;
procedure NodeFstDialog204;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;
procedure NodeFstDialogGo;
procedure NodeSndDialog;
procedure NodeTrap100;
procedure NodeTrap101;
procedure NodeTrap102;
procedure NodeTrap103;
procedure NodeTrap104;
procedure NodeTrap105;
procedure NodeTrap106;
procedure NodeTrap107;
procedure NodeTrap108;
procedure NodeTrapEnd;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
   bitDialogExp(bit_2,0)
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
   set_map_var(MVAR_ROADWAR_DOPUSK,-1);
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
   set_map_var(MVAR_CAR_PRESENT,0);
   set_map_var(MVAR_ROADWAR_DOPUSK,-1);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (map_var(MVAR_ROADWAR_DOPUSK) < 0) then begin
      z_floater(self_obj,110,COLOR_MSG_RED);
   end
   else begin
      setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
      fracReaction(GVAR_TITUL_WARRIOR_ROAD,90) // Поправка к отношению за принадлежность к фракциям
      fracReaction(GVAR_TITUL_ARIZONA_RANGER,-50) // Поправка к отношению за принадлежность к фракциям
      dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (map_var(MVAR_ROADWAR_DOPUSK) > 0) then begin
      call NodeSndDialog;
   end
   else begin
      if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeFstDialog301;
      end
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if ((armor_pid_dude_var == PID_ARMOR_ROAD) and (map_var(MVAR_ROADWAR_DOPUSK) == 0) and (global_var(GVAR_TITUL_WARRIOR_ROAD) == 0)) then begin
   Reply(204)
   NAnswer(205,1,Node998)
   NAnswer(206,1,Node998)
   end
   else begin
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   end
end

procedure NodeFstDialog2 begin
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(203)
   end
   else begin
   Reply(202)
   end
   NAnswer(210,1,NodeFstDialog100)
   NAnswer(240,1,NodeFstDialog200)
   if (getQuest(GVAR_CGRANDE_QST_ROADSTOP) == qStart) then begin
   NAnswer(251,1,NodeFstDialog300)
   end
   if (global_var(GVAR_RAIDER_STATUS_ENCHELP)>0) then begin
   GAnswer(307,1,NodeFstDialog302)
   end
end

procedure NodeFstDialog100 begin
   Reply(211)
   NAnswer(217,1,NodeFstDialog102)
   BAnswer(213,1,NodeFstDialog101)
   NAnswer(235,1,NodeFstDialog204)
end

procedure NodeFstDialog101 begin
   Reply(214)
   BAnswer(215,1,Node998)
   NAnswer(216,1,Node998)
end

procedure NodeFstDialog102 begin
   Reply(218)
   NAnswer(220,1,NodeFstDialog103)
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog103 begin
   Reply(221)
   NAnswerSkill(226,1,NodeFstDialog105,SKILL_CONVERSANT,50,222,NodeFstDialog104)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 25) then begin
   NAnswer(229,1,NodeFstDialog106)
   end else begin
   NAnswer(229,1,NodeFstDialog107)
   end
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog104 begin
   Reply(223)
   BAnswer(224,1,Node998)
   NAnswer(225,1,Node999)
end

procedure NodeFstDialog105 begin
   Reply(227)
   NAnswer(228,1,NodeFstDialogGo)
end

procedure NodeFstDialog106 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,25)
   item_add(self_obj,PID_BOOTLE_CAPS,25)
   Reply(230)
   NAnswer(231,1,NodeFstDialogGo)
end

procedure NodeFstDialog107 begin
   Reply(232)
   BAnswer(234,1,Node998)
   NAnswer(233,1,Node999)
end

procedure NodeFstDialog200 begin
   Reply(241)
   NAnswer(250,1,NodeFstDialog103)
   BAnswer(242,1,NodeFstDialog201)
   NAnswer(256,1,Node999)
end

procedure NodeFstDialog201 begin
   Reply(243)
   NAnswer(245,1,NodeFstDialog202)
   BAnswer(244,1,Node998)
end

procedure NodeFstDialog202 begin
   zReply(246)
   BAnswer(247,1,Node998)
   NAnswer(248,1,NodeFstDialog203)
end

procedure NodeFstDialog203 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 100) then begin
   item_add(self_obj,PID_BOOTLE_CAPS,100)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) > 0) then begin
   item_add(self_obj,PID_BOOTLE_CAPS,item_amnt(dude_obj,PID_BOOTLE_CAPS))
   end
   item_remove(dude_obj,PID_BOOTLE_CAPS,100)
   call Node999;
end

procedure NodeFstDialog204 begin
   Reply(236)
   BAnswer(247,1,Node998)
   NAnswer(248,1,NodeFstDialog203)
end

procedure NodeFstDialog300 begin
   Reply(252)
   NAnswer(255,1,NodeFstDialog105)
   NAnswer(254,1,NodeFstDialog100)
   BAnswer(253,1,Node998)
end

procedure NodeFstDialogGo begin
   set_map_var(MVAR_ROADWAR_DOPUSK,1);
   if town_rep_is_antipaty then begin
   set_global_var(TOWN_REP_VAR,-5);
   end
   if (map_var(MVAR_ROADWAR_TILE_BOSS)>0) then begin
   move_to(dude_obj,map_var(MVAR_ROADWAR_TILE_BOSS),0);
   end
   call Node999;
end

procedure NodeFstDialog301 begin
   if (bitDialog(bit_2) == 0) then begin
   Reply(300)
   end
   else begin
   Reply(302)
   NAnswer(303,3,NodeFstDialog105)
   end

   NAnswerSkill(301,1,NodeFstDialog105,SKILL_CONVERSANT,50,306,NodeFstDialog104)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 25) then begin
   NAnswer(229,1,NodeFstDialog106)
   end else begin
   NAnswer(229,1,NodeFstDialog107)
   end
   BAnswer(304,1,Node998)
   NAnswer(305,1,Node999)
end

procedure NodeFstDialog302 begin
   setBonusReaction(25)
   Reply(308)
   NAnswer(309,1,NodeFstDialogGo)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   zReply(310)
   end
   else if town_rep_is_liked then begin
   zReply(311)
   end
   else if town_rep_is_hated then begin
   Reply(random(313,314))
   end
   else begin
   Reply(312)
   end

   if (map_var(MVAR_ROADWAR_TRAPS_VSBL) == 0) then begin
      if (bitDialog(bit_3) == 0) then begin
      NAnswer(320,3,NodeTrap100)
      end
      else begin
      NAnswer(331,3,NodeTrap105)
      end
   end

   NAnswer(315,1,Node999)
end


procedure NodeTrap100 begin
   bitDialogExp(bit_3,0)
   Reply(321)
   GAnswer(322,1,NodeTrap101)
   NAnswer(323,1,NodeTrap102)
   BAnswer(324,1,NodeTrap103)
end

procedure NodeTrap101 begin
   setBonusReaction(25)
   set_REP(1)
   call NodeTrap102;
end

procedure NodeTrap102 begin
   Reply(325)
   NAnswer(326,1,NodeTrap104)
end

procedure NodeTrap103 begin
   setBonusReaction(-25)
   set_REP(-1)
   call NodeTrap102;
end

procedure NodeTrap104 begin
   Reply(327)
   NAnswer(328,1,NodeTrap105)
end

procedure NodeTrap105 begin
   Reply(329)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 50) then begin
   NAnswerRep(332,1,NodeTrap108,0,332,NodeTrap106)
   end
   if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   GAnswer(336,1,NodeTrapEnd)
   end
   NAnswer(330,1,Node999)
end

procedure NodeTrap106 begin
   Reply(333)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 100) then begin
   NAnswer(335,1,NodeTrap107)
   end
   NAnswer(334,1,Node999)
end

procedure NodeTrap107 begin
   item_add(self_obj,PID_BOOTLE_CAPS,100)
   item_remove(dude_obj,PID_BOOTLE_CAPS,100)
   call NodeTrapEnd;
end

procedure NodeTrap108 begin
   item_add(self_obj,PID_BOOTLE_CAPS,50)
   item_remove(dude_obj,PID_BOOTLE_CAPS,50)
   call NodeTrapEnd;
end

procedure NodeTrapEnd begin
   set_map_var(MVAR_ROADWAR_TRAPS_VSBL,1);
   Reply(337)
   NAnswer(338,1,Node999)
end
