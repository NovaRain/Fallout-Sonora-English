#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_MCRdrHak
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RAIDERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_WAR_ROADS        // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_WAR_ROAD           // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_WARROAD          // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialog7;
procedure NodeFstDialog8;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst108;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (getQuest(GVAR_RAIDER_QST_HAK) >= qEnd) then begin
       critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
       end
       set_obj_visibility(self_obj, 0);
       if (getQuest(GVAR_RAIDER_QST_HAK) >= (qEnd+1)) then begin
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_RAIDER_STATUS_HAK, -1);
   if (getQuest(GVAR_RAIDER_QST_HAK) == qStart) then begin
   setQuest(GVAR_RAIDER_QST_HAK, qZero);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (getQuest(GVAR_RAIDER_QST_HAK) >= qEnd) then begin
   floater(self_obj, 102, COLOR_MSG_NORMAL);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if (global_var(GVAR_RAIDER_STATUS_ROADBOSS)>0) then begin
   Reply(210)
   NAnswer(211,1,NodeFstDialog5)
   end
   else begin
   Reply(200)
   NAnswer(mstr(206)+dude_name+mstr(207),1,NodeFstDialog4)
   BAnswer(201,1,NodeFstDialog2)
   end
end

procedure NodeFstDialog2 begin
   setBonusReaction(-10)
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog6)
end

procedure NodeFstDialog4 begin
   zReply(208)
   NAnswer(209,1,NodeFstDialog6)
end

procedure NodeFstDialog5 begin
   Reply(212)
   NAnswer(213,1,NodeFstDialog6)
end

procedure NodeFstDialog6 begin
   Reply(214)
   NAnswer(215,1,NodeFstDialog7)
end

procedure NodeFstDialog7 begin
   Reply(216)
   NAnswer(217,1,NodeFstDialog8)
end

procedure NodeFstDialog8 begin
   Reply(218)
   if (getQuest(GVAR_RAIDER_QST_HAK) == qZero) then begin
   NAnswer(222,1,NodeQst100)
   end
   NAnswer(219,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(220)

   if (getQuest(GVAR_RAIDER_QST_HAK) < qEnd) then begin
      NAnswer(251,1,NodeAnswer101)
      NAnswer(248,1,NodeAnswer100)
   end
   if (getQuest(GVAR_RAIDER_QST_HAK) == qZero) then begin
      NAnswer(222,1,NodeQst100)
   end
   if (getQuest(GVAR_RAIDER_QST_HAK) == qStart) then begin
      if (item_amnt(dude_obj,PID_M_PSYCHO)>0) then begin
      zGAnswer(237,1,NodeQst105)
      end
      if (global_var(GVAR_RAIDER_STATUS_HAK)>0) then begin
      GAnswer(240,1,NodeQst106)
      end
      if (global_var(GVAR_CGRANDE_STATUS_MER)<0) then begin
      GAnswer(246,1,NodeQst107)
      end
      NAnswer(222,1,NodeQst100)
   end

   NAnswer(221,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(249)
   NAnswer(250,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(252)
   NAnswer(253,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(254)
   NAnswer(255,1,NodeSndDialog)
   BAnswer(256,1,NodeSndDialog)
end

procedure NodeQst100 begin
   setQuest(GVAR_RAIDER_QST_HAK, qStart);
   Reply(223)
   NAnswer(224,1,NodeQst101)
   NAnswer(232,1,NodeQst104)
end

procedure NodeQst101 begin
   Reply(225)
   NAnswer(226,1,NodeQst102)
   NAnswer(229,1,NodeQst103)
end

procedure NodeQst102 begin
   Reply(227)
   NAnswer(236,1,NodeQst104)
   NAnswer(228,1,Node999)
end

procedure NodeQst103 begin
   Reply(230)
   NAnswer(233,1,NodeQst104)
   NAnswer(231,1,Node999)
end

procedure NodeQst104 begin
   Reply(234)
   NAnswer(235,1,NodeQst101)
   NAnswer(244,1,Node999)
end

procedure NodeQst105 begin
   setQuest(GVAR_RAIDER_QST_HAK, qEnd);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   item_remove(dude_obj,PID_M_PSYCHO,1)
   set_REP(2)
   setBonusReaction(50)
   exp_add(250);
   zReply(238)
   NAnswer(239,1,Node999)
end

procedure NodeQst106 begin
   Reply(241)
   NAnswer(257,1,NodeQst108)
end

procedure NodeQst107 begin
   Reply(247)
   NAnswer(257,1,NodeQst108)
end

procedure NodeQst108 begin
   setQuest(GVAR_RAIDER_QST_HAK, qEnd+1);
   set_global_var(GVAR_RAIDER_STATUS_HAK, 1);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   item_add(dude_obj,PID_M_STIMPAK,1)
   set_SLAVA(5)
   setBonusReaction(90)
   exp_add(250);
   set_obj_visibility(self_obj, 1);
   Reply(258)
   NAnswer(242,1,Node999)
   NAnswer(243,1,Node999)
end
