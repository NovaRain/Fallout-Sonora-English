#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCMedic
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TWOSUN_PEASAN    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_TWOSUN        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeMedQst;
procedure NodeMedQst2;
procedure NodeMedQst3;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer300;
procedure NodeAnswer400;
procedure NodeFAID;
procedure NodeFAID1;
procedure NodeFAID2;
procedure NodeFAID100;
procedure NodeFAID101;
procedure NodeFAID102;
procedure NodeFAID200;
procedure NodeFAID201;
procedure NodeFAID202;
procedure NodeFAID203;
procedure NodeFAID204;
procedure NodeFAID205;
procedure NodeFAID206;
procedure NodeFAID207;
procedure NodeFAID208;
procedure NodeFAID209;
procedure NodeFAID210;
procedure NodeFAID211;
procedure NodeFAID212;

//---------------------

#define LVAR_Implant_A                   (6) // установка имплантанта #1

variable MedicMany;
variable MedicImplnt;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (global_var(GVAR_TWOSUN_STATUS_ZAX) > 0) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeSndDialog)
   NAnswer(206,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(220,1,NodeFAID)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(300,3,NodeAnswer100)
   end
   else begin
   NAnswer(310,3,NodeAnswer)
   end
   if (map_var(MVAR_TWOSUN_MedicQst) == 0) then begin
   NAnswer(330,3,NodeMedQst)
   end
   NAnswer(211,1,Node999)
end

procedure NodeMedQst begin
   Reply(331)
   NAnswer(332,1,NodeMedQst2)
end

procedure NodeMedQst2 begin
   Reply(333)
   NAnswer(334,1,NodeMedQst3)
end

procedure NodeMedQst3 begin
   Reply(335)
   NAnswer(337,1,NodeSndDialog)
   NAnswer(336,1,Node999)
end

//--- ВОПРОСЫ

procedure NodeAnswer begin
   Reply(311)
   NAnswer(312,1,NodeAnswer200)
   NAnswer(314,1,NodeAnswer300)
   //NAnswer(318,1,NodeAnswer400)
   NAnswer(320,3,NodeAnswer400)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer100 begin
   Reply(301)
   NAnswer(302,1,NodeAnswer101)
   NAnswer(306,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(303)
   NAnswer(304,1,NodeAnswer102)
   NAnswer(306,1,NodeSndDialog)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,25)
   Reply(305)
   NAnswer(306,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   Reply(313)
   NAnswer(316,3,NodeAnswer201)
   NAnswer(213,1,NodeAnswer)
end

procedure NodeAnswer201 begin
   Reply(317)
   NAnswer(213,1,NodeAnswer)
end

procedure NodeAnswer300 begin
   Reply(315)
   NAnswer(213,1,NodeAnswer)
end

procedure NodeAnswer400 begin
   Reply(321)
   NAnswer(213,1,NodeAnswer)
end

//--- ЛЕЧЕНИЕ

procedure NodeFAID begin
   if (global_var(GVAR_TWOSUN_STATUS_BOSS) > 0) then begin
   call NodeFAID2;
   end
   else begin
   call NodeFAID1;
   end
end

procedure NodeFAID1 begin
   Reply(221)
   NAnswer(222,1,NodeSndDialog)
end

procedure NodeFAID2 begin
   MedicMany := 0;
   Reply(223)
   if (dude_cur_hits<dude_max_hits) then begin
   NAnswer(225,1,NodeFAID100)
   end
   else if dude_is_crippled then begin
   NAnswer(225,1,NodeFAID100)
   end
   if (local_var(LVAR_Implant_A) == 0) then begin
   NAnswer(250,1,NodeFAID200)
   end
   NAnswer(224,1,NodeSndDialog)
end

procedure NodeFAID100 begin
   MedicMany := (dude_max_hits-dude_cur_hits)*5;

   if (critter_state(dude_obj) bwand DAM_CRIP_LEG_LEFT) then begin
   MedicMany += 20;
   end
   if (critter_state(dude_obj) bwand DAM_CRIP_LEG_RIGHT) then begin
   MedicMany += 20;
   end
   if (critter_state(dude_obj) bwand DAM_CRIP_ARM_LEFT) then begin
   MedicMany += 20;
   end
   if (critter_state(dude_obj) bwand DAM_CRIP_ARM_RIGHT) then begin
   MedicMany += 20;
   end
   if (critter_state(dude_obj) bwand DAM_BLIND) then begin
   MedicMany += 20;
   end

   MedicMany += MedicMany;
   if (has_skill(dude_obj, SKILL_BARTER) > 0) then begin
   MedicMany -= (MedicMany*has_skill(dude_obj, SKILL_BARTER))/100;
   end
   if (MedicMany < 0) then begin
   MedicMany := 1;
   end

   Reply(mstr(227)+MedicMany+mstr(228))
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= MedicMany) then begin
   NAnswer(229,1,NodeFAID101)
   end
   NAnswer(231,1,NodeSndDialog)
   NAnswer(230,1,Node999)
end

procedure NodeFAID101 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= MedicMany) then begin
   call NodeFAID102;
   end
   else begin
   call Node999;
   end
end

procedure NodeFAID102 begin
   critter_heal(dude_obj,dude_max_hits-dude_cur_hits);
   critter_uninjure(dude_obj, (DAM_BLIND bwor DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
   if (MedicMany > 0) then begin
   item_remove(dude_obj, PID_BOOTLE_CAPS, MedicMany)
   end
   MedicMany := 0;
   PLAY_FADE
   Reply(232)
   NAnswer(233,1,Node999)
   NAnswer(234,1,Node999)
end

procedure NodeFAID200 begin
   Reply(251)
   NAnswer(252,1,NodeFAID201)
end

procedure NodeFAID201 begin
   Reply(253)
   NAnswer(254,1,NodeFAID202)
end

procedure NodeFAID202 begin
   MedicImplnt := 0;
   MedicMany := 3500;
   Reply(mstr(255)+MedicMany+mstr(235))
   NAnswer(260,1,NodeFAID203)
   NAnswer(261,1,NodeFAID204)
   NAnswer(262,1,NodeFAID205)
   NAnswer(263,1,NodeFAID206)
   NAnswer(264,1,NodeFAID207)
   NAnswer(265,1,NodeFAID208)
   NAnswer(266,1,NodeFAID209)
   NAnswer(256,1,Node999)
end

procedure NodeFAID203 begin
   MedicImplnt := STAT_st;
   call NodeFAID210;
end
procedure NodeFAID204 begin
   MedicImplnt := STAT_pe;
   call NodeFAID210;
end
procedure NodeFAID205 begin
   MedicImplnt := STAT_en;
   call NodeFAID210;
end
procedure NodeFAID206 begin
   MedicImplnt := STAT_ch;
   call NodeFAID210;
end
procedure NodeFAID207 begin
   MedicImplnt := STAT_iq;
   call NodeFAID210;
end
procedure NodeFAID208 begin
   MedicImplnt := STAT_ag;
   call NodeFAID210;
end
procedure NodeFAID209 begin
   MedicImplnt := STAT_lu;
   call NodeFAID210;
end

procedure NodeFAID210 begin
   if (get_critter_stat(dude_obj,MedicImplnt) >= 10) then begin
      Reply(257)
      NAnswer(258,1,NodeFAID202)
      NAnswer(259,1,Node999)
   end
   else begin
      Reply(mstr(267)+MedicMany+mstr(268))
      if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= MedicMany) then begin
      NAnswer(269,1,NodeFAID211)
      end
      NAnswer(256,1,Node999)
   end
end

procedure NodeFAID211 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= MedicMany) then begin
   call NodeFAID212;
   end
   else begin
   call Node999;
   end
end

procedure NodeFAID212 begin
   set_local_var(LVAR_Implant_A,1);
   set_critter_stat(dude_obj, MedicImplnt, 1);
   game_time_advance(ONE_GAME_DAY*2);
   display_mstr(102);
   item_remove(dude_obj, PID_BOOTLE_CAPS, MedicMany)
   PLAY_FADE
   call Node999;
end
