#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCSlvVll
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PLAYER           // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodeParty;
procedure NodeParty1;
procedure NodeParty2;
procedure NodeParty3;
procedure NodeParty4;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home

       if (cur_map_index != MAP_TWO_SUN_GRAVE) then begin
          if ((gvar_bit(GVAR_TWOSUN_QST_BAND_STATUS, bit_6) == 0) and (global_var(GVAR_TWOSUN_STATUS_ZAX) != 0) and (global_var(GVAR_VILLA_STATUS_PADRE) != 0)) then begin
          set_obj_visibility(self_obj, 0);
          end
          else begin
          rm_timer_event(self_obj);
          set_obj_visibility(self_obj, 1);
          end
       end
       else begin
          if (map_var(MVAR_TWOSUN_PartyVill) >0) then begin
          rm_timer_event(self_obj);
          move_to(self_obj, (tile_num_in_direction(dude_tile,random(0,5),1)), dude_elevation);
          end

          if ((global_var(GVAR_VILLA_STATUS_PADRE) > 0) or (bitDialog(bit_2) != 0)) then begin
          set_map_var(MVAR_TWOSUN_PartyVill,0);
          rm_timer_event(self_obj);
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
          end
       end

   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (cur_map_index != MAP_TWO_SUN_GRAVE) then begin
       timer_move_random_home(2)
       end
       else begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (cur_map_index == MAP_TWO_SUN_GRAVE) then begin
   if (map_var(MVAR_TWOSUN_PartyVill)>0) then begin
   partyRunToDude
   end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (cur_map_index == MAP_TWO_SUN_GRAVE) then begin
   set_map_var(MVAR_TWOSUN_PartyVill,0);
   end
   set_gvar_bit_on(GVAR_TWOSUN_QST_BAND_STATUS, bit_6);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (cur_map_index != MAP_TWO_SUN_GRAVE) then begin
   z_floater(self_obj, 210, COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if (getQuest(GVAR_TWOSUN_QST_PADRE) < qStart) then begin
   setQuest(GVAR_TWOSUN_QST_PADRE,qStart);
   end
   Reply(dude_name+mstr(200))
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(206,3,NodeFstDialog4)
   NAnswer(205,1,Node999)
end

procedure NodeFstDialog4 begin
   Reply(207)
   NAnswer(208,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (map_var(MVAR_TWOSUN_PartyVill) == 0) then begin
   zReply(210)
   NAnswer(220,1,NodeParty)
   end
   else begin
   Reply(215)
   NAnswer(229,1,NodeParty1)
   end

   if (global_var(GVAR_TWOSUN_STATUS_ZAX) != 0) then begin
   NAnswer(212,1,NodeSndDialog2)
   end
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog2 begin
   Reply(213)
   NAnswer(214,1,NodeSndDialog3)
end

procedure NodeSndDialog3 begin
   set_map_var(MVAR_TWOSUN_PartyVill,0);
   bitDialogExp(bit_2,350)
   rm_timer_event(self_obj);
   set_obj_visibility(self_obj, 1);
   call Node999;
end

//--- ПАРТИЯ

procedure NodeParty begin
   Reply(221)
   NAnswer(222,1,NodeParty2)
   NAnswer(211,1,Node999)
end

procedure NodeParty1 begin
   set_map_var(MVAR_TWOSUN_PartyVill,0);
   Reply(230)
   NAnswer(231,1,Node999)
end

procedure NodeParty2 begin
   Reply(223)
   NAnswer(224,1,NodeParty4)
   //NAnswerSkill(224,1,NodeParty3,SKILL_CONVERSANT,40,224,NodeParty4)
   NAnswer(211,1,Node999)
end

procedure NodeParty3 begin
   bitDialogExp(bit_3,200)
   set_map_var(MVAR_TWOSUN_PartyVill,1);
   Reply(225)
   NAnswer(226,1,Node999)
end

procedure NodeParty4 begin
   Reply(227)
   NAnswer(228,1,Node999)
end
