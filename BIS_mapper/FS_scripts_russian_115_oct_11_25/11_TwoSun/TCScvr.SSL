#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCScvr
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CULT_ATOMIC      // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BOS_SCOUT          // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog103;
procedure NodeSndDialog104;
procedure NodeSndDialog105;
procedure NodeSndDialog106;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home

       if ((map_var(MVAR_TWOSUN_AgentKnow) <= 2) and (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd) and (global_var(GVAR_TWOSUN_STATUS_ZAX) <= 0) and (global_var(GVAR_TWOSUN_STATUS_BOSS) >= 0)) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       set_obj_visibility(self_obj, 1);
       rm_timer_event(self_obj);
       end
   end
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (map_var(MVAR_TWOSUN_AgentKnow) == 2) then begin
   dialogue_system_forcing(3)
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_TWOSUN_AgentKnow,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (map_var(MVAR_TWOSUN_AgentKnow) > 2) then begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
   else begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
        if (map_var(MVAR_TWOSUN_AgentKnow) == 2) then begin
   call NodeSndDialog100;
   end
   else if (map_var(MVAR_TWOSUN_AgentKnow) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   inc_map_var(MVAR_TWOSUN_AgentKnow);
   set_local_var(LVAR_Home_Tile,18487);
   set_local_var(LVAR_Home_Rotat,3);
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   zReply(208)
   zNAnswer(209,1,Node999)
end

procedure NodeSndDialog100 begin
   bitDialogExp(bit_2,100)
   inc_map_var(MVAR_TWOSUN_AgentKnow);
   Reply(210)
   NAnswer(211,1,NodeSndDialog101)
   NAnswer(216,1,NodeSndDialog103)
   BAnswer(221,1,NodeSndDialog105)
end

procedure NodeSndDialog101 begin
   Reply(212)
   NAnswer(213,1,NodeSndDialog102)
end

procedure NodeSndDialog102 begin
   Reply(214)
   NAnswer(215,1,Node999)
end

procedure NodeSndDialog103 begin
   zReply(217)
   NAnswer(218,1,NodeSndDialog104)
end

procedure NodeSndDialog104 begin
   Reply(219)
   NAnswer(220,1,Node999)
end

procedure NodeSndDialog105 begin
   Reply(222)
   NAnswer(223,1,NodeSndDialog106)
end

procedure NodeSndDialog106 begin
   zReply(224)
   NAnswer(225,1,Node999)
   BAnswer(226,1,Node999)
end
