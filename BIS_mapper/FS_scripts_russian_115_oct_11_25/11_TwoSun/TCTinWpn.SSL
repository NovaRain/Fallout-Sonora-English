#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCTinWpn
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TWOSUN_PEASAN    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_TWOSUN        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeSndDialog;
procedure NodeSkillUp;
procedure NodeSkillUp10;
procedure NodeSkillUp11;
procedure NodeSkillUp20;
procedure NodeSkillUp30;
procedure NodeSkillUp31;
procedure NodeSkillUp40;
procedure NodeSkillUp41;
procedure NodeSkillUp50;
procedure NodeSkillUp51;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (global_var(GVAR_TWOSUN_STATUS_ZAX) == 1) then begin
       rm_timer_event(self_obj);
       kill_critter(self_obj, random(ANIM_fall_back_blood_sf,ANIM_fall_front_blood_sf));
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-40) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(209,1,Node999)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   bitDialogExp(bit_1,0)
   Reply(206)
   NAnswer(207,1,NodeStartDialog)
   NAnswer(208,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction >= 50) then begin
   Reply(210)
   end
   else begin
   Reply(211)
   end

   if (bitDialog(bit_2) == 0) then begin
   NAnswer(220,1,NodeSkillUp)
   end
   NAnswer(212,1,Node999)
end

procedure NodeSkillUp begin
   Reply(221)
   NAnswer(223,1,NodeSkillUp10)
   if town_rep_is_idolized then begin
   NAnswer(225,1,NodeSkillUp20)
   end
   else if town_rep_is_liked then begin
   NAnswer(227,1,NodeSkillUp30)
   end
   NAnswerSkill(231,1,NodeSkillUp40,SKILL_CONVERSANT,80,231,NodeSkillUp41)
   NAnswer(222,1,Node999)
end

procedure NodeSkillUp10 begin
   Reply(224)
   if (item_amnt(dude_obj,PID_TOOL_PARTS_ELECTRONIC) >= 5) then begin
   NAnswer(230,1,NodeSkillUp11)
   end
   NAnswer(222,1,Node999)
end

procedure NodeSkillUp11 begin
   item_remove(dude_obj, PID_TOOL_PARTS_ELECTRONIC, 5)
   Reply(240)
   NAnswer(241,1,NodeSkillUp50)
end

procedure NodeSkillUp20 begin
   Reply(226)
   NAnswer(241,1,NodeSkillUp50)
end

procedure NodeSkillUp30 begin
   Reply(228)
   if (item_amnt(dude_obj,PID_TOOL_PARTS_ELECTRONIC) >= 2) then begin
   NAnswer(229,1,NodeSkillUp31)
   end
   NAnswer(222,1,Node999)
end

procedure NodeSkillUp31 begin
   item_remove(dude_obj, PID_TOOL_PARTS_ELECTRONIC, 2)
   Reply(240)
   NAnswer(241,1,NodeSkillUp50)
end

procedure NodeSkillUp40 begin
   Reply(232)
   NAnswer(241,1,NodeSkillUp50)
end

procedure NodeSkillUp41 begin
   Reply(233)
   NAnswer(222,1,Node999)
end

procedure NodeSkillUp50 begin
   Reply(242)
   NAnswer(243,1,NodeSkillUp51)
end

procedure NodeSkillUp51 begin
   set_REP(2)
   PLAY_FADE
   game_time_advance(ONE_GAME_HOUR*5);
   bitDialogExp(bit_2,250)
   if (is_skill_tagged(SKILL_REPAIR) == true) then begin
   skill_up(SKILL_REPAIR,6);
   end
   else begin
   skill_up(SKILL_REPAIR,5);
   end
   if (is_skill_tagged(SKILL_ENERGY_WEAPONS) == true) then begin
   skill_up(SKILL_ENERGY_WEAPONS,6);
   end
   else begin
   skill_up(SKILL_ENERGY_WEAPONS,5);
   end
   display_mstr(244);
   call Node999;
end
