#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_TCOvrsr
#define TOWN_REP_VAR                    GVAR_TOWN_REP_TWO_SUN   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TWOSUN_PEASAN    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStopDialog;

procedure NodeFstDialog;
procedure NodeFstDialog1;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog510;
procedure NodeFstDialog520;
procedure NodeFstDialog530;
procedure NodeFstDialog540;
procedure NodeFstDialog541;
procedure NodeFstDialog542;
procedure NodeFstDialog543;
procedure NodeFstDialog544;
procedure NodeFstDialog545;
procedure NodeGoToZona;

procedure NodeSndDialog;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

variable dudebox; // в этот контейнер перемещаются вещи ГГ на время его порабощения и отправки в Зону

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if ((global_var(GVAR_TWOSUN_STATUS_DUDE) > 0) and (global_var(GVAR_TWOSUN_QST_ZONA) == 0)) then begin
       add_timer_event(self_obj, 5, 4);
       end
       if (global_var(GVAR_TWOSUN_STATUS_ZAX) == 1) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       inc_global_var_amt(GVAR_TWOSUN_STATUS_DUDE,10);
       if (getQuest(GVAR_TWOSUN_QST_ZAX) < qEnd) then begin
       setQuest(GVAR_TWOSUN_QST_ZAX,qStart);
       end
       dude_teleport_map(-1,-1,MAP_TWO_SUN_GRAVE,-1);
   end
   if (fixed_param == 4) then begin
       item_remove_armor(dude_obj)
       inven_unwield(dude_obj);
       dudebox := create_object_sid(PID_CNTR_VAULT_CB, 13087, 0, -1);
       create_object_sid(PID_HEX_BLOCKING, 13087, 0, -1); // точка размещения - у стены справа напротив персонажа
       move_obj_inven_to_obj(dude_obj,dudebox);

       move_to(dude_obj, tile_num_in_direction(self_tile, 2, 4), self_elevation);
       anim(dude_obj, ANIMATE_ROTATION, 5);
       gfade_in(ONE_GAME_SECOND);
       dialogue_system_enter;
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,60) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-50) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_TWOSUN_STATUS_ZAX) != 0) then begin
   call NodeStopDialog;
   end
   else if (global_var(GVAR_TWOSUN_STATUS_DUDE) == 1) then begin
   call NodeFstDialog;
   end
   else if (global_var(GVAR_TWOSUN_STATUS_DUDE) == 2) then begin
   call NodeFstDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog1;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeStopDialog begin
   if (bitDialog(bit_1) == 0) then begin
   Reply(238)
   NAnswer(239,1,Node999)
   end
   else begin
   Reply(230)
   NAnswer(231,1,Node999)
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog1 begin
   Reply(232)
   NAnswer(233,1,NodeFstDialog)
   NAnswer(234,1,Node999)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,NodeFstDialog5)
   NAnswer(206,1,NodeFstDialog4)
end

procedure NodeFstDialog4 begin
   Reply(207)
   NAnswer(208,1,NodeGoToZona)
end

procedure NodeFstDialog5 begin
   if (global_var(GVAR_TWOSUN_STATUS_DUDE) == 0) then begin
   Reply(235)
   end
   else begin
   Reply(210)
   NAnswer(211,1,NodeFstDialog510)
   end

   NAnswer(213,1,NodeFstDialog520)
   NAnswer(215,1,NodeFstDialog530)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(217,1,NodeFstDialog540)
   end
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog510 begin
   Reply(212)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog520 begin
   Reply(214)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog530 begin
   Reply(216)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog540 begin
   Reply(218)

   NAnswerSkill(219,1,NodeFstDialog542,SKILL_CONVERSANT,40,219,NodeFstDialog541)
   NAnswerSkill(220,1,NodeFstDialog543,SKILL_CONVERSANT,60,220,NodeFstDialog541)
   NAnswerSkill(221,1,NodeFstDialog544,SKILL_CONVERSANT,80,221,NodeFstDialog541)
   NAnswerSkill(222,1,NodeFstDialog545,SKILL_CONVERSANT,100,222,NodeFstDialog541)

   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog541 begin
   Reply(223)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog542 begin
   bitDialogExp(bit_2,0)
   item_add(dude_obj,PID_W_KNUCKLES_SPIKED,1)
   Reply(224)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog543 begin
   bitDialogExp(bit_2,0)
   item_add(dude_obj,PID_W_PISTOL_10,1)
   Reply(224)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog544 begin
   bitDialogExp(bit_2,0)
   item_add(dude_obj,PID_M_STIMPAK,1)
   Reply(224)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeFstDialog545 begin
   bitDialogExp(bit_2,0)
   item_add(dude_obj,PID_W_GRENADE_PULSE,2)
   Reply(224)
   NAnswer(225,1,NodeFstDialog5)
   NAnswer(209,1,NodeFstDialog4)
end

procedure NodeGoToZona begin
   gfade_out(ONE_GAME_SECOND);
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(236)
   NAnswer(237,1,Node999)
end
