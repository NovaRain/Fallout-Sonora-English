#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCFlgRun
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_FLAGSTAFF_CITIZEN // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      30 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog100;
procedure NodeSndDialog101;
procedure NodeSndDialog102;
procedure NodeSndDialog103;
procedure NodeSndDialog104;
procedure NodeSEX;

//---------------------

#define LVAR_Bonus_Up                     (6) // фиксирует результат диалога: -2 - совокупление, -1 - домагательство, 0 - ничего, 1 - ГГ дал крышек

variable paramVisibl;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home

       paramVisibl := 0;
       if (getQuest(GVAR_FLAGSTAFF_MINES_DESTROY) >= qEnd) then begin
       paramVisibl += 1;
       end
       if (global_var(GVAR_STATUS_FLAGSTAFF_FABER) < 0) then begin
       paramVisibl += 1;
       end
       if (getQuest(GVAR_FLAGSTAFF_SLAVES_RUN) >= qEnd) then begin
       paramVisibl += 1;
       end

       if (local_var(LVAR_Bonus_Up) != 0) then begin
       paramVisibl := 0;
       end
       if (global_var(GVAR_PHENIX_STATUS_BNDCSBOSS) < 0) then begin
       paramVisibl := 0;
       end

       if (paramVisibl > 0) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       set_obj_visibility(self_obj, 1);
       rm_timer_event(self_obj);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       if (bitDialog(bit_1) == 0) then begin
       timer_float_reply(110,119)
       end
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if (getQuest(GVAR_PHENIX_QST_REKET) == qStart) then begin
   floater(self_obj,105,COLOR_MSG_RED);
   end
   else if (local_var(LVAR_Bonus_Up) == 0) then begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else if (local_var(LVAR_Bonus_Up) == -1) then begin
   z_floater(self_obj,104,COLOR_MSG_RED);
   end
   else if (local_var(LVAR_Bonus_Up) < 0) then begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
   else begin
   floater(self_obj,103,COLOR_MSG_GREEN);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   BAnswer(205,1,NodeSndDialog)
   NAnswer(206,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   GAnswer(215,1,NodeSndDialog101)
   end
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 35) then begin
   if (self_is_female and dude_is_male) then begin
   BAnswer(220,1,NodeSndDialog102)
   end
   end
   BAnswer(211,1,NodeSndDialog100)
end

procedure NodeSndDialog100 begin
   Reply(212)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   GAnswer(214,1,NodeSndDialog101)
   end
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 35) then begin
   if (self_is_female and dude_is_male) then begin
   BAnswer(220,1,NodeSndDialog102)
   end
   end
   NAnswer(213,1,Node999)
end

procedure NodeSndDialog101 begin
   bitDialogExp(bit_2,100)
   set_local_var(LVAR_Bonus_Up,1);
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   item_add(self_obj,PID_BOOTLE_CAPS,10)
   item_remove(dude_obj,PID_BOOTLE_CAPS,10)
   end
   set_SLAVA(10)
   set_REP(1)
   setBonusReaction(100)

   Reply(216)
   GAnswer(217,1,Node999)
   NAnswer(mstr(218)+dude_name+mstr(219),1,Node999)
end

procedure NodeSndDialog102 begin
   Reply(221)
   NAnswerStat(222,1,NodeSndDialog104,STAT_ch,4,222,NodeSndDialog103)
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 10) then begin
   NAnswer(214,1,NodeSndDialog101)
   end
   NAnswer(223,1,Node999)
end

procedure NodeSndDialog103 begin
   set_local_var(LVAR_Bonus_Up,-1);
   setBonusReaction(-100)
   set_SLAVA(-10)
   set_REP(-1)
   Reply(224)
   NAnswer(225,1,Node999)
end

procedure NodeSndDialog104 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 35) then begin
   item_add(self_obj,PID_BOOTLE_CAPS,35)
   item_remove(dude_obj,PID_BOOTLE_CAPS,35)
   end
   Reply(226)
   NAnswer(227,1,NodeSEX)
   NAnswer(228,1,Node999)
end

procedure NodeSEX begin
   bitDialogExp(bit_2,250)
   set_local_var(LVAR_Bonus_Up,-2);
   setBonusReaction(-100)
   set_SLAVA(-10)
   set_REP(-1)
   PLAY_FADE
   game_time_advance(ONE_GAME_HOUR);
   move_to(self_obj,15877,0);
   move_to(dude_obj,16077,0);
   anim(self_obj, ANIMATE_ROTATION, 2);
   anim(dude_obj, ANIMATE_ROTATION, 5);
   set_local_var(LVAR_Home_Tile,self_tile);
   Reply(229)
   NAnswer(230,1,Node999)
end
