#include "..\headers\define.h"
//--------------------- Жительница дома позади бара

#define NAME                            SCRIPT_GCCtzA
#define TOWN_REP_VAR                    GVAR_TOWN_REP_GARAGE  // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_GARAGE_CITIZEN   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      20 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;

//---------------------

#define LVAR_Flag_Food                   (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_random_home(2)
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (local_var(LVAR_Flag_Food) == 0) then begin
      if (itemTypeUseDude == 3) then begin
      set_local_var(LVAR_Flag_Food,1);
      end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if town_rep_is_hated then begin
   floater(self_obj,110,COLOR_MSG_RED);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeAnswer100)
   NAnswer(202,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(211,1,NodeAnswer100)
   NAnswer(212,1,Node999)
end

procedure NodeAnswer100 begin
   if (local_var(LVAR_Flag_Food) == 0) then begin
      if town_rep_is_idolized then begin
      set_local_var(LVAR_Flag_Food,1);
      end
   end

   if (local_var(LVAR_Flag_Food) == 0) then begin
   Reply(213)
   NAnswer(214,1,Node999)
   BAnswer(215,1,Node999)
   end
   else begin
   Reply(220)
   NAnswer(222,1,NodeAnswer101)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(226,1,NodeAnswer103)
   NAnswer(228,1,NodeAnswer104)
   NAnswer(221,1,Node999)
   end
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(226,1,NodeAnswer103)
   NAnswer(228,1,NodeAnswer104)
   NAnswer(221,1,Node999)
end

procedure NodeAnswer102 begin
   if (global_var(GVAR_GARAGE_STATUS_BOSS) < 0) then begin
   Reply(231)
   end
   else begin
   Reply(225)
   end
   NAnswer(222,1,NodeAnswer101)
   NAnswer(226,1,NodeAnswer103)
   NAnswer(228,1,NodeAnswer104)
   NAnswer(221,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(227)
   NAnswer(222,1,NodeAnswer101)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(228,1,NodeAnswer104)
   NAnswer(221,1,Node999)
end

procedure NodeAnswer104 begin
   bitDialogExp(bit_2,50)
   if (getQuest(GVAR_GARAGE_STANOK_DESTROY) >= qEnd) then begin
   Reply(229)
   end
   else if (getQuest(GVAR_GARAGE_QST_BOSS_TRADE) >= 3) then begin
   Reply(230)
   end
   else if (getQuest(GVAR_GARAGE_QST_LUCS_TRADE) >= 3) then begin
   Reply(230)
   end
   else begin
   Reply(229)
   end
   NAnswer(222,1,NodeAnswer101)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(226,1,NodeAnswer103)
   NAnswer(221,1,Node999)
end
