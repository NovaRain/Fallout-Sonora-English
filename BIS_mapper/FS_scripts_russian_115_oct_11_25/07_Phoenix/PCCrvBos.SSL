#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCCrvBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_DRIVER     // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      90 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeSndDialog200;
procedure NodeSndDialog201;
procedure NodeSndDialog202;
procedure NodeSndDialog203;
procedure NodeDialogMap100;
procedure NodeDialogMap101;
procedure NodeDialogMap102;
procedure NodeDialogMap103;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeTwoSun;
procedure NodeTwoSun2;
procedure NodeTwoSun3;
procedure NodeTwoSun100;
procedure NodeTwoSun101;
procedure NodeTwoSun102;
procedure NodeTwoSun103;
procedure NodeTwoSun200;
procedure NodeTwoSun201;
procedure NodeTwoSun202;
procedure NodeTwoSun203;
procedure NodeTwoSunGo;

//---------------------

#define LVAR_Caravan_Timer              (6) // время до исчезновения с карты

//---------------------


procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (local_var(LVAR_Caravan_Timer) != 0) then begin
       set_local_var(LVAR_Home_Tile,tile_num_in_direction(dude_tile,random(0,5),1));
       end
       set_start_home

       if (cur_map_index == MAP_PHOENIX_SIGN) then begin
          if (map_first_run) then begin
          item_add(self_obj,PID_BOOTLE_CAPS,random(60,80))
          end
       end
       else begin
          party_remove(self_obj);
          set_obj_visibility(self_obj, 1);
          if (local_var(LVAR_Caravan_Timer) == 0) then begin
          set_local_var(LVAR_Caravan_Timer, (ONE_GAME_HOUR*24) + game_time);
          end
          if (local_var(LVAR_Caravan_Timer) >= game_time) then begin
          set_obj_visibility(self_obj, 0);
          end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       set_local_var(LVAR_Caravan_Timer,0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_CASA_GRANDE_WATER,24+random(1,12));
   end
   if (fixed_param == 4) then begin
       set_local_var(LVAR_Caravan_Timer,0);
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_TWO_SUN_CITY,24+random(1,12));
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-20) // Поправка к отношению за принадлежность к фракциям

   if (cur_map_index == MAP_TWO_SUN_CITY) then begin
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else if (cur_map_index == MAP_PHOENIX_SIGN) then begin
   dialog_proc(1,0,NodeStartDialog,-1,-1)
   end
   else if (cur_map_index == MAP_CASA_GRANDE_WATER) then begin
   dialog_proc(1,0,NodeDialogMap100,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((bitDialog(bit_7) == 0) and (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd)) then begin
   call NodeSndDialog200;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ДРУГИЕ ЛОКАЦИИ

procedure NodeDialogMap100 begin
   Reply(400)
   NAnswer(401,1,NodeDialogMap101)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap101 begin
   Reply(402)
   NAnswer(404,1,NodeDialogMap102)
   NAnswer(405,1,NodeDialogMap103)
   NAnswer(403,1,Node999)
end

procedure NodeDialogMap102 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 4);
   call Node999;
end

procedure NodeDialogMap103 begin
   set_local_var(LVAR_Caravan_Timer,-1);
   set_obj_visibility(self_obj, 1);
   Reply(406)
   NAnswer(407,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(220,1,NodeAnswer100)

   if (bitDialog(bit_8) != 0) then begin
      //Раньше здесь была проверка квеста на рабов в ТуСане, но я убрал ее, чтобы игрок мог пользоваться караваном независимо от квеста
      NAnswer(300,1,NodeTwoSun)
      if (getQuest(GVAR_PHENIX_QST_OWRS_HOLO) == qStart) then begin
      NAnswer(303,1,NodeTwoSun3)
      end
   end

   if (getQuest(GVAR_MAIN_QUEST_PHENIX) == qStart) then begin
   NAnswer(250,1,NodeAnswer200)
   end

   NAnswer(211,1,Node999)
end

procedure NodeSndDialog200 begin
   bitDialogExp(bit_7,0)
   Reply(240)
   NAnswer(247,1,NodeSndDialog203)
   NAnswer(241,1,NodeSndDialog201)
end

procedure NodeSndDialog201 begin
   Reply(242)
   NAnswer(244,1,NodeSndDialog202)
   NAnswer(243,1,Node999)
end

procedure NodeSndDialog202 begin
   Reply(245)
   NAnswer(246,1,Node999)
end

procedure NodeSndDialog203 begin
   bitDialogExp(bit_7,0)
   Reply(248)
   NAnswer(249,1,NodeSndDialog201)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   bitDialogExp(bit_3,10)
   Reply(221)
   NAnswer(222,1,NodeAnswer101)
   NAnswer(224,1,NodeAnswer102)
   NAnswer(233,3,NodeAnswer106)
   NAnswer(212,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(228,3,NodeAnswer104)
   NAnswer(213,1,NodeAnswer100)
end

procedure NodeAnswer102 begin
   Reply(225)
   NAnswer(226,5,NodeAnswer103)
   NAnswer(213,1,NodeAnswer100)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_2,25)
   Reply(227)
   NAnswer(213,1,NodeAnswer100)
end

procedure NodeAnswer104 begin
   bitDialogExp(bit_8,10)
   Reply(229)
   if (town_known(AREA_TWO_SUN) == MARK_STATE_UNKNOWN) then begin
   NAnswer(230,4,NodeAnswer105)
   end
   NAnswer(213,1,NodeAnswer100)
end

procedure NodeAnswer105 begin
   mark_on_map(AREA_TWO_SUN)
   Reply(231)
   NAnswer(232,1,NodeSndDialog)
end

procedure NodeAnswer106 begin
   Reply(234)
   NAnswer(235,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   Reply(251)
   NAnswer(252,1,NodeAnswer201)
end

procedure NodeAnswer201 begin
   Reply(253)
   NAnswer(254,1,Node999)
   NAnswer(255,1,Node999)
end

//--- ОТПРАВКА НА ЮГ

procedure NodeTwoSun begin
   if (global_var(GVAR_TWOSUN_STATUS_ZAX) == 1) then begin
   call NodeTwoSun2;
   end
   else if (bitDialog(bit_6) == 0) then begin
   call NodeTwoSun100;
   end
   else begin
   call NodeTwoSun200;
   end
end

procedure NodeTwoSun2 begin
   zReply(306)
   NAnswer(307,1,NodeSndDialog)
end

procedure NodeTwoSun3 begin
   Reply(309)
   NAnswer(300,1,NodeTwoSun)
   NAnswer(326,1,NodeSndDialog)
end

procedure NodeTwoSun100 begin
   Reply(301)
   NAnswer(322,1,NodeTwoSun103)
   NAnswerSkill(302,3,NodeTwoSun102,SKILL_BARTER,80,302,NodeTwoSun101)
   if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   NAnswer(304,3,NodeTwoSun102)
   end
   else if (getQuest(GVAR_PHENIX_QST_OWRS_HOLO) == qStart) then begin
   NAnswer(325,3,NodeTwoSun102)
   end
   NAnswer(305,1,NodeSndDialog)
end

procedure NodeTwoSun101 begin
   Reply(308)
   NAnswer(305,1,NodeSndDialog)
end

procedure NodeTwoSun102 begin
   bitDialogExp(bit_6,0)
   Reply(310)
   NAnswer(311,1,NodeTwoSun200)
end

procedure NodeTwoSun103 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 1000) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,1000)
   //item_add(self_obj,PID_BOOTLE_CAPS,1000)
   call NodeTwoSun102;
   end
   else begin
   Reply(323)
   NAnswer(324,1,Node999)
   end
end

procedure NodeTwoSun200 begin
   Reply(312)
   if ((game_time_hour >= 0500) and (game_time_hour < 800)) then begin
   NAnswer(313,1,NodeTwoSun201)
   end
   NAnswer(314,1,Node999)
end

procedure NodeTwoSun201 begin
   if (who_carry_amount(dude_obj) > 150) then begin
      Reply(315)
      NAnswerSkill(316,1,NodeTwoSun202,SKILL_CONVERSANT,80,316,NodeTwoSun203)
      NAnswer(317,1,Node999)
   end
   else begin
      call NodeTwoSun202;
   end
end

procedure NodeTwoSun202 begin
   Reply(318)
   NAnswer(319,1,NodeTwoSunGo)
end

procedure NodeTwoSun203 begin
   Reply(320)
   NAnswer(321,1,Node999)
end

procedure NodeTwoSunGo begin
   bitDialogExp(bit_5,250)
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end
