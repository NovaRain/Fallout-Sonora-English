#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCMerkDd
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_MERC     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GUARDS             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      75 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialog7;
procedure NodeFstDialog8;
procedure NodeFstDialog9;
procedure NodeFstDialog10;
procedure NodeSndDialog;
procedure NodePartyDialog;
procedure NodeParty100;
procedure NodeParty101;
procedure NodeParty102;
procedure NodeParty103;

//---------------------

#define LVAR_Flag_RunStatus                     (6) // 0 - бегает за ГГ будучи нанятым, 1 - стоит на месте будучи нанятым

variable coastParty;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (self_cur_hits < self_max_hits) then begin
       critter_heal(self_obj, 10);
       end
       critter_uninjure(self_obj, (DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
       set_start_home
       move_to(self_obj, HomeTile, 0);
       set_local_var(LVAR_Flag_RunStatus, 0);
       set_obj_visibility(self_obj, 1);

       if (global_var(GVAR_PHENIX_STATUS_BODYGUARD) > 0) then begin
       if (global_var(GVAR_PHENIX_TIMER_BODYGUARD) < game_time) then begin
       display_mstr(103);
       set_global_var(GVAR_PHENIX_STATUS_BODYGUARD, 0);
       set_global_var(GVAR_PHENIX_TIMER_BODYGUARD, 0);
       end
       end

       if (cur_map_index == MAP_PHOENIX_PLAZA) then begin
       if (getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) then begin
       destroy_object(self_obj);
       end
       end

       if (global_var(GVAR_PHENIX_STATUS_BODYGUARD)>0) then begin
       set_obj_visibility(self_obj, 0);
       critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
       add_timer_event(self_obj,1,3);
       end

       if (global_var(GVAR_PHENIX_STATUS_BODYGUARD) == 0) then begin
       if (cur_map_index == MAP_PHOENIX_SIGN) then begin
       set_obj_visibility(self_obj, 0);
       end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (global_var(GVAR_PHENIX_STATUS_BODYGUARD) == 0) then begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       if (global_var(GVAR_PHENIX_STATUS_BODYGUARD)>0) then begin
         move_to(self_obj, tile_num_in_direction(dude_tile,random(0,5),2), dude_elevation);
         if (cur_map_index == MAP_PHOENIX_SIGN) then begin
         floater(self_obj, 110, COLOR_MSG_NORMAL);
         end
         if (cur_map_index == MAP_PHOENIX_CENTER) then begin
         floater(self_obj, 111, COLOR_MSG_NORMAL);
         end
         if (cur_map_index == MAP_PHOENIX_BNDCS) then begin
         floater(self_obj, 112, COLOR_MSG_NORMAL);
         end
         if (cur_map_index == MAP_PHOENIX_ELECTR) then begin
         floater(self_obj, 113, COLOR_MSG_NORMAL);
         end
         if (cur_map_index == MAP_PHOENIX_PLAZA) then begin
         floater(self_obj, 114, COLOR_MSG_NORMAL);
         end
       end
   end
   if (fixed_param == 4) then begin
      set_local_var(LVAR_Flag_RunStatus, 0);
      set_global_var(GVAR_PHENIX_STATUS_BODYGUARD, 0);
      set_global_var(GVAR_PHENIX_TIMER_BODYGUARD, 0);
      set_obj_visibility(self_obj, 1);
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (global_var(GVAR_PHENIX_STATUS_BODYGUARD)>0) then begin
      if ((cur_map_index == MAP_PHOENIX_CENTER) and (dude_elevation!=0)) then begin
      //НЕ сопровождает ГГ в казино
      end
      else if (local_var(LVAR_Flag_RunStatus)>0) then begin
      end
      else begin
      partyRunToDude
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure push_p_proc begin
   push_options(HomeTile,5,-1) //Толкать (точка отсчета, макс расстояние, фраза нпс при толкании), удалить если не надо
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (global_var(GVAR_PHENIX_STATUS_BODYGUARD) > 0) then begin
   display_mstr(102);
   end
   set_global_var(GVAR_PHENIX_STATUS_BODYGUARD, -1);
   set_global_var(GVAR_PHENIX_TIMER_BODYGUARD, 0);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   //! реакция если ГГ стал борцом на ринге

   if (global_var(GVAR_PHENIX_STATUS_BODYGUARD) > 0) then begin
   call NodePartyDialog;
   end
   else if (cur_map_index != MAP_PHOENIX_SIGN) then begin
   call NodeSndDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   BAnswer(208,1,NodeFstDialog4)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
   NAnswer(204,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(205)
   NAnswer(206,1,NodeFstDialog6)
   NAnswer(207,1,NodeFstDialog6)
end

procedure NodeFstDialog4 begin
   Reply(209)
   NAnswer(210,1,NodeFstDialog5)
   GAnswer(211,1,NodeFstDialog5)
end

procedure NodeFstDialog5 begin
   Reply(212)
   NAnswer(206,1,NodeFstDialog6)
   NAnswer(207,1,NodeFstDialog6)
end

procedure NodeFstDialog6 begin
   Reply(213)
   NAnswer(214,1,NodeFstDialog7)
   NAnswer(215,1,NodeFstDialog7)
end

procedure NodeFstDialog7 begin
   /*
   if У ГГ уже есть напарники
   Reply(216)
   NAnswer(214,1,Node999)
   end
   else begin
   Reply(218)
   NAnswer(219,1,Node999)
   end
   */

   Reply(218)
   BAnswer(220,1,NodeFstDialog8)
   NAnswer(224,1,NodeFstDialog9)
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog8 begin
   zReply(221)
   NAnswer(224,1,NodeFstDialog9)
   NAnswer(222,1,Node999)
   BAnswer(223,1,Node999)
end

procedure NodeFstDialog9 begin
   coastParty := 200;

   if (get_REP<0) then begin
   coastParty := 300;
   Reply(mstr(225)+coastParty+mstr(226))
   end
   else begin
   Reply(coastParty+mstr(226))
   end

   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= coastParty) then begin
   NAnswer(228,1,NodeFstDialog10)
   end
   NAnswer(227,1,Node999)
end

procedure NodeFstDialog10 begin
   item_remove(dude_obj, PID_BOOTLE_CAPS, coastParty)
   set_global_var(GVAR_PHENIX_STATUS_BODYGUARD, 1);
   set_global_var(GVAR_PHENIX_TIMER_BODYGUARD, game_time+ONE_GAME_HOUR);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   Reply(random(230,236))
   NAnswer(239,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(240)
   NAnswer(242,1,NodeFstDialog7)
   NAnswer(241,1,Node999)
end

//--- ДИАЛОГ ВО ВРЕМЯ СЛУЖБЫ ПО НАЙМУ

procedure NodePartyDialog begin
   bitDialogExp(bit_1,0)
   if ((cur_map_index == MAP_PHOENIX_BNDCS) and (dude_elevation == 2)) then begin
   Reply(258)
   end
   else begin
   Reply(random(250,257))
   end

   if (local_var(LVAR_Flag_RunStatus) == 0) then begin
   NAnswer(260,1,NodeParty100)
   end
   else begin
   NAnswer(263,1,NodeParty101)
   end

   if (global_var(GVAR_PHENIX_STATUS_BODYGUARD)>0) then begin
   NAnswer(266,1,NodeParty102)
   end

   NAnswer(259,1,Node999)
end

procedure NodeParty100 begin
   set_local_var(LVAR_Flag_RunStatus, 1);
   Reply(261)
   NAnswer(262,1,Node999)
end

procedure NodeParty101 begin
   set_local_var(LVAR_Flag_RunStatus, 0);
   Reply(264)
   NAnswer(265,1,Node999)
end

procedure NodeParty102 begin
   zReply(267)
   NAnswer(268,1,NodeParty103)
   NAnswer(269,1,Node999)
end

procedure NodeParty103 begin
   add_timer_event(self_obj,3,4);
   call Node999;
end
