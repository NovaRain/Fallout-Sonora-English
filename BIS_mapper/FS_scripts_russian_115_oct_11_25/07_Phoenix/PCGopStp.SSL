#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCGopStp
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_BANDIT   // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

#define SELF_WEAPON_PID                 PID_W_PISTOL_ZIP // pid оружия грабителя

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeManyMove;
procedure NodeDialogMany;
procedure NodeDialogTitul;
procedure NodeDialog;
procedure NodeDialog2;
procedure NodeDialog3;
procedure NodeDialog100;
procedure NodeDialog101;
procedure NodeDialog102;
procedure NodeDialog103;
procedure NodeDialog104;
procedure NodeDialog200;
procedure NodeDialog300;
procedure NodeDialog301;
procedure NodeDialog302;
procedure NodeDialog303;
procedure NodeSndDialog;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

variable stopDialog;
variable manyAmnt;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if ((bitDialog(bit_1) != 0) or (dude_level >= 18)) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       destroy_object(self_obj);
       end
   end
end

procedure look_at_p_proc begin
   //lookProcMsg
   script_overrides;
   if (bitDialog(bit_1) == 0) then begin
   display_mstr(100);
   end
   else begin
   display_mstr(101);
   end
end

procedure description_p_proc begin
   script_overrides;
   if (bitDialog(bit_1) == 0) then begin
   display_mstr(102);
   end
   else begin
   display_mstr(103);
   end
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (bitDialog(bit_1) == 0) then begin
       timer_move_to_home
       end
       else begin
       //timer_run_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ

   //--- Принудительный диалог
   if (bitDialog(bit_1) == 0) then begin
      if self_can_see_dude then begin
         stopDialog := 1;

         if ((armor_pid_dude_var <= 0) or (armor_pid_dude_var == PID_ARMOR_VAULT) or (armor_pid_dude_var == PID_ARMOR_CHEST_SHIELD) or (armor_pid_dude_var == PID_ARMOR_JACKET_A) or (armor_pid_dude_var == PID_ARMOR_JACKET_B) or (armor_pid_dude_var == PID_ARMOR_LEATHER)) then begin
         end
         else begin
         stopDialog := 0; // ГГ в хорошей броне
         end

         if weapon_invn_dude then begin
         stopDialog := 0; // ГГ вооружен
         end
         else if (item_amnt(self_obj,SELF_WEAPON_PID) <= 0) then begin
         stopDialog := 0; // у персонажа нет оружия
         end

         if (stopDialog > 0) then begin
         dialogue_system_forcing(7)
         end
      end
   end

   //--- Персонаж убегает с карты
   if (bitDialog(bit_1) != 0) then begin
      if (combat_is_initialized == false) then begin
          if (self_tile == HomeTile) then begin
          display_mstr(105);
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
          end
          else begin
          move_to_tile(1,HomeTile,0)
          end
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (bitDialog(bit_1) != 0) then begin
   floater(self_obj,224,COLOR_MSG_RED);
   end
   else if (stopDialog > 0) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,104,COLOR_MSG_NORMAL);
   end
end

procedure Node998 begin
   bitDialogExp(bit_2,0)
   setNodeCombat;
end

procedure Node999 begin
   bitDialogExp(bit_2,100)
end

procedure NodeStartDialog begin
   stopDialog := 0;
   wield_obj(obj_carrying_pid_obj(self_obj, SELF_WEAPON_PID));

   if (bitDialog(bit_1) == 0) then begin
   call NodeDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeManyMove begin
   manyAmnt := item_amnt(dude_obj,PID_BOOTLE_CAPS);
   if (manyAmnt > 30) then begin
   manyAmnt := 30;
   end
   if (manyAmnt > 0) then begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,manyAmnt)
   item_add(self_obj,PID_BOOTLE_CAPS,manyAmnt)
   end
end

procedure NodeDialogMany begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) <= 0) then begin
   NAnswer(220,1,NodeDialog103)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 30) then begin
   NAnswer(210,1,NodeDialog100)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) == 1) then begin
   NAnswer(214,1,NodeDialog101)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) == 2) then begin
   NAnswer(215,1,NodeDialog101)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) == 3) then begin
   NAnswer(216,1,NodeDialog101)
   end
   else if (item_amnt(dude_obj,PID_BOOTLE_CAPS) > 0) then begin
   NAnswer(218,1,NodeDialog102)
   end
end

procedure NodeDialogTitul begin
   if (global_var(GVAR_TITUL_ARENA_MASTER) > 0) then begin
   NAnswer(239,3,NodeDialog303)
   end
   if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   NAnswer(243,3,NodeDialog303)
   end
   if (global_var(GVAR_TITUL_WARRIOR_ROAD) > 0) then begin
   NAnswer(244,3,NodeDialog303)
   end
end

procedure NodeDialog begin
   bitDialogExp(bit_1,0)

   if (tile_distance(self_tile,23065)<=25) then begin
   set_local_var(LVAR_Home_Tile, 23065); // сетка перехода справа между казино и Сонора Экпресс
   end
   else if (tile_distance(self_tile,8506)<=25) then begin
   set_local_var(LVAR_Home_Tile, 8506); // северная сетка перехода
   end
   else begin
   set_local_var(LVAR_Home_Tile, 18345); // переулок слева от рынка
   end

   /*
   Комментарий: Я удалил эту реплику лишь потому, что она нарушала ощущение внезапности ограбления.
   Reply(200)
   NAnswer(201,1,NodeDialog2)
   */

   call NodeDialog2;
end

procedure NodeDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeDialog3)
end

procedure NodeDialog3 begin
   Reply(205)

   //--- отдать крышки
   call NodeDialogMany;

   //--- убедить
   NAnswer(230,4,NodeDialog300)
   call NodeDialogTitul;

   //--- атаковать
   BAnswer(206,1,NodeDialog200)
end

procedure NodeDialog100 begin
   call NodeManyMove;
   Reply(211)
   NAnswer(212,1,Node999)
   BAnswer(213,1,Node998)
end

procedure NodeDialog101 begin
   call NodeManyMove;
   Reply(217)
   NAnswer(212,1,Node999)
   BAnswer(213,1,Node998)
end

procedure NodeDialog102 begin
   call NodeManyMove;
   Reply(211)
   NAnswer(212,1,Node999)
   BAnswer(213,1,Node998)
end

procedure NodeDialog103 begin
   Reply(221)
   NAnswer(222,1,NodeDialog104)
   BAnswer(227,1,Node998)
end

procedure NodeDialog104 begin
   Reply(223)
   NAnswer(212,1,Node999)
   BAnswer(213,1,Node998)
end

procedure NodeDialog200 begin
   Reply(207)

   //--- отдать крышки
   call NodeDialogMany;

   //--- убедить
   NAnswer(230,4,NodeDialog300)
   call NodeDialogTitul;

   //--- атаковать
   BAnswer(208,1,Node998)
end

procedure NodeDialog300 begin
   Reply(231)
   BAnswer(232,1,NodeDialog301)
end

procedure NodeDialog301 begin
   Reply(233)

   NAnswerSkill(235,4,NodeDialog302,SKILL_CONVERSANT,50,234,Node998)

   //--- отдать крышки
   call NodeDialogMany;

   //--- убедить
   call NodeDialogTitul;

   //--- атаковать
   BAnswer(246,1,Node998)
end

procedure NodeDialog302 begin
   set_SLAVA(5)
   Reply(236)
   NAnswer(237,1,Node999)
   BAnswer(238,1,Node998)
end

procedure NodeDialog303 begin
   Reply(240)
   NAnswer(241,1,Node999)
   BAnswer(242,1,Node998)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(224)
   NAnswer(225,1,Node999)
   BAnswer(226,1,Node998)
end
