#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCCtzn
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_CITIZEN  // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_NORMAL      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

#define TILE_NON_FLOAT_A                21314 // Зона молчания на рынке
#define TILE_NON_FLOAT_B                15085 // Зона молчания возле сцены в казино

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure float_reply;
procedure talk_reply;
procedure talk_p_proc;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

variable replyMsg;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (map_first_run) then begin
       item_add(self_obj,PID_BOOTLE_CAPS,random(4,12))
       end
   end
end

procedure look_at_p_proc begin
   //lookProcMsg
   script_overrides;
   if self_is_male then begin
   display_mstr(101);
   end
   else begin
   display_mstr(102);
   end
end

procedure description_p_proc begin
   //dsrptProcMsg
   script_overrides;
   if self_is_male then begin
   display_mstr(random(110,114));
   end
   else begin
   display_mstr(random(120,124));
   end
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_random_home(5)
   end
   if (fixed_param == 2) then begin
       call float_reply;
       timer_float_reply(replyMsg,replyMsg)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure push_p_proc begin
   push_options(HomeTile,10,-1) //Толкать (точка отсчета, макс расстояние, фраза нпс при толкании), удалить если не надо
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure float_reply begin
   replyMsg := 103;

   if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B) or (armor_pid_dude_var == PID_ARMOR_POWER_C)) then begin
      replyMsg := random(330,339);
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
      replyMsg := random(340,349);
   end
   else if ((global_var(GVAR_TITUL_ARENA_MASTER) > 0) and (random(0,2) == 1)) then begin
      if self_is_male then begin
      replyMsg := random(350,359);
      end
      else begin
      replyMsg := random(360,369);
      end
   end
   else begin
      if ((getQuest(GVAR_PHENIX_CULT_DESTROY) >= qEnd) and (random(0,1) == 0)) then begin
      replyMsg := random(390,399);
      end
      else begin
      replyMsg := random(370,389);
      end
   end

   //Зоны молчания на картах
   if (cur_map_index == MAP_PHOENIX_CENTER) then begin
      if (tile_distance(self_tile, TILE_NON_FLOAT_A) < 10) then begin
      replyMsg := 103;
      end
      if (tile_distance(self_tile, TILE_NON_FLOAT_B) < 10) then begin
      replyMsg := 103;
      end
   end

   if (random(0,100) > 40) then begin
   replyMsg := 103;
   end
end

procedure talk_reply begin
   replyMsg := 103;
   if ((armor_pid_dude_var == PID_ARMOR_POWER_A) or (armor_pid_dude_var == PID_ARMOR_POWER_B) or (armor_pid_dude_var == PID_ARMOR_POWER_C)) then begin
      replyMsg := random(230,239);
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
      replyMsg := random(240,249);
   end
   else if (global_var(GVAR_TITUL_ARENA_MASTER) > 0) then begin
      replyMsg := random(250,259);
      if dude_is_female then begin
      replyMsg := random(1250,1259);
      end
   end
   else if ((global_var(GVAR_ADDICT_BUFF_OUT) > 0) or (global_var(GVAR_ADDICT_MENTATS) > 0) or (global_var(GVAR_ADDICT_PSYCHO) > 0) or (global_var(GVAR_ADDICT_BUFF_OUT) > 0)) then begin
      replyMsg := random(260,269);
   end
   else if (random(0,1) == 0) then begin
      replyMsg := random(270,294);
   end
   else begin
      if town_rep_is_idolized then begin
      replyMsg := random(200,209);
      end
      else if town_rep_is_hated then begin
      replyMsg := random(220,229);
      end
      else begin
      replyMsg := random(210,219);
      end
   end
end

procedure talk_p_proc begin
   call talk_reply;

   if town_rep_is_hated then begin
   floater(self_obj,replyMsg,COLOR_MSG_RED);
   end
   else begin
   floater(self_obj,replyMsg,COLOR_MSG_NORMAL);
   end
end
