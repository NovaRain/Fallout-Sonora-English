#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_NCMer
#define TOWN_REP_VAR                    GVAR_TOWN_REP_CASA_NUEVA // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CASANUEVA_PEASAN // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_TOUGH       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      65 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure mer_is_dead;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog10;
procedure NodeFstDialog11;
procedure NodeFstDialog12;
procedure NodeFstDialog13;
procedure NodeFstDialog14;
procedure NodeFstDialog15;
procedure NodeFstDialog16;
procedure NodeFstDialog17;
procedure NodeStopDialog101;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog106;
procedure NodeStopDialog107;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeAnswer107;
procedure NodeAnswer108;
procedure NodeAnswer109;
procedure NodeAnswer110;
procedure NodeAnswer111;
procedure NodeAnswer112;
procedure NodeAnswer113;
procedure NodeAnswer114;
procedure NodeAnswer115;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if ((global_var(GVAR_GAME_END) != 0) and (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd) and (global_var(GVAR_TWOSUN_STATUS_ZAX) > 0)) then begin
       call mer_is_dead;
       end
   end
end

#define safe_mer_obj                   tile_contains_pid_obj(10093, 0, 248) \

procedure mer_is_dead begin
   variable pistolPID;
   pistolPID := 0;
   rm_timer_event(self_obj);
   set_obj_visibility(self_obj, 1);
   obj_unlock(safe_mer_obj);

   if (item_amnt(safe_mer_obj,PID_W_REVOLVER_OLD) > 0) then begin
      pistolPID := PID_W_REVOLVER_OLD;
   end
   else if (item_amnt(safe_mer_obj,PID_W_REVOLVER_POLICE) > 0) then begin
      pistolPID := PID_W_REVOLVER_POLICE;
   end
   else if (item_amnt(safe_mer_obj,PID_W_REVOLVER_COMBAT) > 0) then begin
      pistolPID := PID_W_REVOLVER_COMBAT;
   end
   else if (item_amnt(safe_mer_obj,PID_W_PISTOL_ZIP) > 0) then begin
      pistolPID := PID_W_PISTOL_ZIP;
   end
   else if (item_amnt(safe_mer_obj,PID_W_PISTOL_22) > 0) then begin
      pistolPID := PID_W_PISTOL_22;
   end
   else if (item_amnt(safe_mer_obj,PID_W_PISTOL_10) > 0) then begin
      pistolPID := PID_W_PISTOL_10;
   end
   else if (item_amnt(safe_mer_obj,PID_W_PISTOL_50) > 0) then begin
      pistolPID := PID_W_PISTOL_50;
   end

   if (pistolPID>0) then begin
      create_object_sid(33556405,self_tile,self_elevation,-1);
      create_object_sid(pistolPID,tile_num_in_direction(self_tile,4,1),self_elevation,-1);
      item_remove(safe_mer_obj,pistolPID,1)
   end
   else begin
      create_object_sid(33556404,10097,self_elevation,-1);
   end

   set_global_var(GVAR_NUEVA_STATUS_MER,-999);
   destroy_object(self_obj);
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   if town_rep_is_idolized then begin
   end
   else begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_NUEVA_STATUS_MER,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   if ((global_var(GVAR_GAME_END) != 0) and (getQuest(GVAR_PUERTO_BOS_DESTROY) >= qEnd)) then begin
   floater(self_obj,105,COLOR_MSG_RED);
   end
   else if (game_time_hour < 0600) then begin
   floater(self_obj,104,COLOR_MSG_RED);
   end
   else begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-35) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,20) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(102,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
   if (map_var(MVAR_NUEVA_MER_DIALOG) == 0) then begin
   inc_map_var(MVAR_NUEVA_MER_DIALOG);
   end
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((bitDialog(bit_2) == 0) and (getQuest(GVAR_PUERTO_BOS_DESTROY)>=qEnd)) then begin
   call NodeStopDialog101;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   if (global_var(GVAR_TITUL_REBIRTH)>0) then begin
   Reply(2200)
   end
   else begin
   Reply(200)
   end
   NAnswer(201,1,NodeFstDialog2)
   GAnswer(mstr(204)+dude_name+mstr(205),1,NodeFstDialog3)
   BAnswer(208,1,NodeFstDialog4)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog10)
end

procedure NodeFstDialog3 begin
   set_REP(1)
   setBonusReaction(15)

   if (dude_name == self_name) then begin
   set_REP(1)
   setBonusReaction(15)
   Reply(234)
   end
   else begin
   Reply(206)
   end
   NAnswer(207,1,NodeFstDialog10)
end

procedure NodeFstDialog4 begin
   set_REP(-1)
   setBonusReaction(-15)
   Reply(209)
   NAnswer(210,1,NodeFstDialog10)
   BAnswer(211,1,NodeFstDialog10)
end

procedure NodeFstDialog10 begin
   Reply(212)
   NAnswer(213,1,NodeFstDialog11)
   if (global_var(GVAR_TITUL_BOS)>0) then begin
   GAnswer(220,1,NodeFstDialog13)
   end
   if (town_known(AREA_PUERTO_STEEL) >= MARK_STATE_KNOWN) then begin
   NAnswer(224,1,NodeFstDialog14)
   end
   BAnswer(228,1,NodeFstDialog15)
end

procedure NodeFstDialog11 begin
   Reply(214)
   NAnswer(215,1,NodeFstDialog12)
   BAnswer(216,1,NodeFstDialog12)
end

procedure NodeFstDialog12 begin
   Reply(217)
   NAnswer(218,1,NodeFstDialog17)
   BAnswer(219,1,NodeFstDialog17)
end

procedure NodeFstDialog13 begin
   Reply(221)
   NAnswer(222,1,NodeFstDialog12)
   BAnswer(223,1,NodeFstDialog16)
end

procedure NodeFstDialog14 begin
   Reply(225)
   NAnswer(226,1,NodeFstDialog12)
   BAnswer(227,1,NodeFstDialog16)
end

procedure NodeFstDialog15 begin
   Reply(229)
   NAnswer(230,1,NodeFstDialog12)
   BAnswer(231,1,NodeFstDialog16)
end

procedure NodeFstDialog16 begin
   set_REP(-1)
   setBonusReaction(-10)
   call NodeFstDialog12;
end

procedure NodeFstDialog17 begin
   //call NodeSndDialog;
   Reply(232)
   NAnswer(233,1,Node999)
end

procedure NodeStopDialog101 begin
   bitDialogExp(bit_2,100)
   Reply(240)
   NAnswer(241,1,NodeStopDialog102)
end

procedure NodeStopDialog102 begin
   Reply(242)
   NAnswer(243,1,NodeStopDialog103)
end

procedure NodeStopDialog103 begin
   Reply(244)
   NAnswer(245,1,NodeStopDialog104)
end

procedure NodeStopDialog104 begin
   Reply(246)
   NAnswer(247,1,NodeStopDialog105)
end

procedure NodeStopDialog105 begin
   Reply(248)
   NAnswer(249,1,NodeStopDialog107)
   BAnswer(239,1,NodeStopDialog106)
end

procedure NodeStopDialog106 begin
   set_REP(-2)
   setBonusReaction(-20)
   call Node999;
end

procedure NodeStopDialog107 begin
   set_REP(2)
   setBonusReaction(20)
   call Node999;
end

//--- ВТОРОЙ ДИАЛОГ

procedure NodeSndDialog begin
   if town_rep_is_idolized then begin
   zReply(253)
   end
   else if town_rep_is_liked then begin
   Reply(252)
   end
   else begin
   Reply(250)
   end

   if (getQuest(GVAR_NUEVA_QST_PLANT_DEAD) == qStart) then begin
   if (map_var(MVAR_NUEVA_MER_ROSAKNOW) == 0) then begin
   BAnswer(260,4,NodeAnswer200)
   end
   end

   if (getQuest(GVAR_SANTAANA_QST_BARTER) == qStart) then begin
   NAnswer(340,4,NodeAnswer112)
   end

   NAnswer(280,4,NodeAnswer100)

   if (bitDialog(bit_5) == 0) then begin
   if DudeTraitHas(TRAIT_espanol) then begin
   GAnswer(350,5,NodeAnswer114)
   end
   end

   if (bitDialog(bit_4) == 0) then begin
   if ((town_known(AREA_PUERTO_STEEL) >= MARK_STATE_VISITED) or (global_var(GVAR_TITUL_BOS)!=0)) then begin
   NAnswer(310,4,NodeAnswer300)
   end
   end

   if (getQuest(GVAR_NUEVA_QST_PINKI) != qZero) then begin
   if (getQuest(GVAR_NUEVA_QST_PINKI) < qEnd) then begin
   NAnswer(330,3,NodeAnswer110)
   end
   end

   NAnswer(251,4,Node999)
   NAnswer(254,-3,Node999)
end

procedure NodeAnswer100 begin
   Reply(281)
   NAnswer(283,1,NodeAnswer101)
   NAnswer(291,1,NodeAnswer104)
   NAnswer(294,1,NodeAnswer105)
   NAnswer(300,1,NodeAnswer107)
   NAnswer(303,1,NodeAnswer108)
   NAnswer(282,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(284)
   NAnswer(285,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(286)
   NAnswer(287,4,NodeAnswer103)
   NAnswer(291,1,NodeAnswer104)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   mark_on_map(AREA_TWO_SUN)
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   mark_on_map(AREA_PUERTO_STEEL)
   end
   Reply(289)
   NAnswer(291,1,NodeAnswer104)
   NAnswer(290,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(292)
   NAnswer(293,1,NodeAnswer102)
   NAnswer(295,1,NodeAnswer105)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer105 begin
   Reply(296)
   if (town_known(AREA_PHOENIX) >= MARK_STATE_VISITED) then begin
   GAnswer(297,5,NodeAnswer106)
   end
   NAnswer(299,1,NodeAnswer107)
   NAnswer(283,1,NodeAnswer101)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer106 begin
   bitDialogExp(bit_3,25)
   Reply(298)
   NAnswer(299,1,NodeAnswer107)
   NAnswer(283,1,NodeAnswer101)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer107 begin
   Reply(301)
   NAnswer(283,1,NodeAnswer101)
   NAnswer(302,1,NodeAnswer108)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer108 begin
   Reply(304)
   if (getQuest(GVAR_PUERTO_BOS_DESTROY) < qEnd) then begin
   NAnswer(306,4,NodeAnswer109)
   end
   NAnswer(283,1,NodeAnswer101)
   NAnswer(305,1,NodeAnswer104)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer109 begin
   if (global_var(GVAR_TITUL_BOS)>0) then begin
   Reply(308)
   end
   else begin
   Reply(307)
   end
   NAnswer(283,1,NodeAnswer101)
   NAnswer(305,1,NodeAnswer104)
   NAnswer(288,1,NodeSndDialog)
end

procedure NodeAnswer110 begin
   Reply(331)
   NAnswer(332,1,NodeAnswer111)
end

procedure NodeAnswer111 begin
   Reply(333)
   NAnswer(334,1,NodeSndDialog)
end

procedure NodeAnswer112 begin
   Reply(341)
   NAnswer(342,1,NodeAnswer113)
end

procedure NodeAnswer113 begin
   setQuest(GVAR_SANTAANA_QST_BARTER, qEnd);
   set_CITY_REP(GVAR_TOWN_REP_SANTA_ANA,5)
   set_REP(2)
   set_SLAVA(2)
   setBonusReaction(20)
   exp_add(400);

   Reply(343)
   NAnswer(344,1,Node999)
end

procedure NodeAnswer114 begin
   bitDialogExp(bit_5,50)
   Reply(351)
   GAnswer(354,4,NodeAnswer115)
   NAnswer(352,4,NodeSndDialog)
   BAnswer(353,4,NodeSndDialog)
end

procedure NodeAnswer115 begin
   setBonusReaction(15)
   set_REP(2)
   Reply(355)
   NAnswer(356,4,NodeSndDialog)
end

procedure NodeAnswer200 begin
   set_map_var(MVAR_NUEVA_MER_ROSAKNOW,-99);
   Reply(261)
   NAnswer(262,1,NodeAnswer201)
   NAnswer(268,1,NodeAnswer203)
end

procedure NodeAnswer201 begin
   Reply(263)
   NAnswer(264,1,NodeAnswer202)
end

procedure NodeAnswer202 begin
   Reply(265)
   NAnswer(266,1,Node999)
   BAnswer(267,1,Node999)
end

procedure NodeAnswer203 begin
   set_map_var(MVAR_NUEVA_MER_ROSAKNOW,1);
   set_SLAVA(-25)
   Reply(269)
   NAnswer(270,1,NodeAnswer204)
end

procedure NodeAnswer204 begin
   Reply(271)
   NAnswer(266,1,Node999)
   BAnswer(267,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(311)
   if (getQuest(GVAR_NUEVA_QST_PLANT_INSECT) >= qEnd) then begin
   NAnswer(328,3,NodeAnswer302)
   end
   NAnswerRep(317,3,NodeAnswer302,30,313,NodeAnswer301)
   NAnswer(312,1,NodeSndDialog)
end

procedure NodeAnswer301 begin
   Reply(314)
   NAnswer(315,1,NodeSndDialog)
   BAnswer(316,1,NodeSndDialog)
end

procedure NodeAnswer302 begin
   Reply(318)
   NAnswer(319,1,NodeAnswer303)
end

procedure NodeAnswer303 begin
   Reply(320)
   NAnswer(321,1,NodeAnswer304)
   NAnswer(322,1,NodeAnswer304)
end

procedure NodeAnswer304 begin
   Reply(323)
   NAnswer(324,1,NodeAnswer305)
   BAnswer(329,1,NodeAnswer305)
end

procedure NodeAnswer305 begin
   bitDialogExp(bit_4,100)
   Reply(325)
   NAnswer(326,1,Node999)
   NAnswer(327,1,Node999)
end
