#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCBarSlv
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_FLAGSTAFF_MERC    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_SLAVER             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog1;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog3b;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc

   if (itemTypeUseDude == 2) then begin
       if (bitDialog(bit_3) == 0) then begin
               set_REP(1)
               exp_add(100);
               if (bitDialog(bit_4) == 0) then begin
               floater(self_obj,104,COLOR_MSG_GREEN);
               end
               else begin
               floater(self_obj,105,COLOR_MSG_GREEN);
               end
               bitDialogExp(bit_1,0)
               bitDialogExp(bit_3,0)
       end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   if (bitDialog(bit_1) != 0) then begin
      if (bitDialog(bit_4) == 0) then begin
          if (self_cur_hits <= (self_max_hits/2)) then begin
              terminate_combat;
              set_local_var(LVAR_Flags,0);
              set_local_var(LVAR_Self_Flags,0);
              set_map_var(MVAR_FLAG_Huligan,1);
              //!!! переменная для реакции Фабера "Это ты избил моего человека в баре? Смелый поступок."
              exp_add(100);
              floater(self_obj,103,COLOR_MSG_RED);
              bitDialogExp(bit_4,0)
          end
          else if (dude_cur_hits <= (dude_max_hits/4)) then begin
              if (bitDialog(bit_5) == 0) then begin
              terminate_combat;
              set_local_var(LVAR_Flags,0);
              set_local_var(LVAR_Self_Flags,0);
              off_enemy_dude;
              set_REP(-2)
              floater(self_obj,106,COLOR_MSG_RED);
              bitDialogExp(bit_5,0)
              end
          end
      end
   end
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
   if (source_obj == dude_obj) then begin
      if (bitDialog(bit_1) != 0) then begin
          if (bitDialog(bit_4) == 0) then begin
          set_map_var(MVAR_FLAG_Huligan,2);
          end
      end
   end
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-20) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(1,107,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_STATUS_FLAGSTAFF_FABER) == -1) then begin
   call NodeFstDialog5;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   zNAnswer(201,3,NodeFstDialog1)
   zNAnswer(202,1,NodeFstDialog2)
   BAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog1 begin
   Reply(204)
   NAnswer(218,8,NodeFstDialog6)
   if ((getQuest(GVAR_FLAGSTAFF_MERPSWDR) > qZero) or (getQuest(GVAR_FLAGSTAFF_RANGER_KILL) > qZero)) then begin
   NAnswer(213,1,NodeFstDialog4)
   end
   NAnswer(205,1,NodeFstDialog2)
   BAnswer(206,1,NodeFstDialog3b)
end

procedure NodeFstDialog2 begin
   set_REP(-2)
   zReply(207)
   NAnswer(208,1,Node999)
   BAnswer(209,1,Node998)
end

procedure NodeFstDialog3 begin
   Reply(210)
   NAnswer(202,1,NodeFstDialog2)
   NAnswer(211,1,Node998)
   BAnswer(212,1,Node998)
end

procedure NodeFstDialog3b begin
   Reply(210)
   NAnswer(211,1,Node998)
   BAnswer(212,1,Node998)
end

procedure NodeFstDialog4 begin
   bitDialogExp(bit_2,100)
   Reply(214)
   NAnswer(215,1,Node999)
end

procedure NodeFstDialog5 begin
   Reply(216)
   NAnswer(217,1,Node999)
end

procedure NodeFstDialog6 begin
   bitDialogExp(bit_2,100)
   Reply(219)
   NAnswer(222,1,Node999)
end

procedure NodeSndDialog begin
   if (bitDialog(bit_4) != 0) then begin
      Reply(225)
      if ((getQuest(GVAR_FLAGSTAFF_SLAVES_DIALOG) == qStart) and (bitDialog(bit_6) == 0)) then begin
      NAnswer(227,1,NodeAnswer100)
      end
      NAnswer(226,1,Node999)
   end
   else if (bitDialog(bit_3) == 0) then begin
      Reply(223)
      NAnswer(224,1,Node999)
   end
   else begin
      Reply(220)
      NAnswer(221,1,Node999)
   end
end

procedure NodeAnswer100 begin
   Reply(228)
   NAnswer(229,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(230)
   NAnswer(231,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_6,50)
   Reply(232)
   NAnswer(233,1,Node999)
end
