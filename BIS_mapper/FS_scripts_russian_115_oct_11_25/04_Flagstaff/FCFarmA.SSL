#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_FCFarmA
#define TOWN_REP_VAR                    GVAR_TOWN_REP_FLAGSTAFF   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_TRAPPERS         // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_WIMPY       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      20 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer205;
procedure NodeFarmDialog;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;
procedure NodeAnswer305;
procedure NodeFinish;
procedure NodeFinish100;
procedure NodeFinish101;
procedure NodeFinish102;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (cur_map_index == MAP_FLAGSTAFF_FARM) then begin
          if (getQuest(GVAR_FLAGSTAFF_QST_FARM) == qZero) then begin
          party_remove(self_obj);
          critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,NUM_TEAM);
          set_local_var(LVAR_Home_Tile,25517);
          set_local_var(LVAR_Home_Rotat,2);
          rm_timer_event(self_obj);
          add_timer_event(self_obj, 20, 1);
          add_timer_event(self_obj, 5, 4);
          setQuest(GVAR_FLAGSTAFF_QST_FARM,qStart);
          end
       end
       if ((cur_map_index == MAP_FLAGSTAFF_CITY) and (game_time_hour >= 1000) and (game_time_hour < 1800)) then begin
          move_to(self_obj,15523,0);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if ((cur_map_index == MAP_FLAGSTAFF_CITY) and (game_time_hour >= 1000) and (game_time_hour < 1800)) then begin
       timer_move_to_tile(0,15523,5)
       end
       else if (getQuest(GVAR_FLAGSTAFF_QST_FARM) >= qEnd) then begin
       timer_move_random_home(5)
       end
       else begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       party_add(self_obj);
       dude_teleport_map(1,1,MAP_FLAGSTAFF_FARM,2);
   end
   if (fixed_param == 4) then begin
       floater(self_obj,102,COLOR_MSG_NORMAL);
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   setQuest(GVAR_FLAGSTAFF_QST_FARM,qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (getQuest(GVAR_FLAGSTAFF_QST_FARM) >= qEnd) then begin
   floater(self_obj,103,COLOR_MSG_GREEN);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (cur_map_index == MAP_FLAGSTAFF_FARM) then begin
      call NodeFarmDialog;
   end
   else begin
      if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeSndDialog;
      end
   end
end

//--- НА КАРТЕ ГОРОДА

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   NAnswer(205,1,NodeFstDialog3)
   BAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(204,1,NodeSndDialog)
   BAnswer(203,1,Node999)
end

procedure NodeFstDialog3 begin
   Reply(206)
   NAnswer(207,1,NodeSndDialog)
   BAnswer(208,1,Node999)
end

procedure NodeSndDialog begin
   Reply(210)
   NAnswer(212,1,NodeAnswer100)
   NAnswer(214,1,NodeAnswer200)
   NAnswer(211,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(213)
   NAnswer(223,1,NodeAnswer200)
   NAnswer(209,1,Node999)
end

procedure NodeAnswer200 begin
   Reply(215)
   NAnswer(216,1,NodeAnswer201)
   NAnswer(222,1,NodeAnswer100)
   NAnswer(209,1,Node999)
end

procedure NodeAnswer201 begin
   Reply(217)
   NAnswer(218,1,NodeAnswer202)
   NAnswer(222,1,NodeAnswer100)
   NAnswer(209,1,Node999)
end

procedure NodeAnswer202 begin
   Reply(219)
   NAnswer(220,1,NodeAnswer203)
   NAnswer(221,1,NodeAnswer204)
   NAnswer(222,1,NodeAnswer100)
   NAnswer(209,1,Node999)
end

procedure NodeAnswer203 begin
   Reply(224)
   NAnswer(225,1,NodeAnswer205)
   NAnswer(226,1,Node999)
end

procedure NodeAnswer204 begin
   Reply(227)
   NAnswer(228,1,NodeAnswer205)
   NAnswer(229,1,Node999)
end

procedure NodeAnswer205 begin
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end

//--- НА КАРТЕ ФЕРМЫ

procedure NodeFarmDialog begin
   Reply(300)
   NAnswer(310,3,NodeAnswer300)
   if (map_var(MVAR_FLAG_RAIDERS_LIFE) <= 0) then begin
   NAnswer(350,1,NodeFinish100)
   end
   else if (map_var(MVAR_FLAG_RAIDERS_RUNS) > 0) then begin
   NAnswer(359,1,NodeFinish100)
   end
   NAnswer(301,1,Node999)
end

procedure NodeAnswer300 begin
   Reply(311)
   NAnswer(312,3,NodeAnswer301)
   NAnswer(316,7,NodeAnswer303)
   NAnswer(318,3,NodeAnswer304)
   NAnswer(301,1,Node999)
end

procedure NodeAnswer301 begin
   Reply(313)
   NAnswer(314,5,NodeAnswer302)
   NAnswer(316,7,NodeAnswer303)
   NAnswer(318,3,NodeAnswer304)
   NAnswer(301,1,Node999)
end

procedure NodeAnswer302 begin
   bitDialogExp(bit_2,10)
   Reply(315)
   NAnswer(316,7,NodeAnswer303)
   NAnswer(318,3,NodeAnswer304)
   NAnswer(301,1,Node999)
end

procedure NodeAnswer303 begin
   bitDialogExp(bit_3,10)
   Reply(317)
   NAnswer(312,3,NodeAnswer301)
   NAnswer(318,3,NodeAnswer304)
   NAnswer(301,1,Node999)
end

procedure NodeAnswer304 begin
   Reply(319)
   NAnswer(320,3,NodeAnswer305)
   NAnswer(312,3,NodeAnswer301)
   NAnswer(316,7,NodeAnswer303)
   NAnswer(301,1,Node999)
end

procedure NodeAnswer305 begin
   Reply(321)
   NAnswer(312,3,NodeAnswer301)
   NAnswer(316,7,NodeAnswer303)
   NAnswer(301,1,Node999)
end

procedure NodeFinish begin
   setQuest(GVAR_FLAGSTAFF_QST_FARM,qEnd);
   set_map_var(MVAR_FLAGFARM_TRAPS_VSBL,1);
   set_local_var(LVAR_Home_Tile,19104);
   set_local_var(LVAR_Home_Rotat,3);
   move_to(self_obj,HomeTile,0);
   exp_add(500);
   set_SLAVA(25)
   set_REP(2)
end

procedure NodeFinish100 begin
   call NodeFinish;
   Reply(351)
   BAnswer(352,1,NodeFinish101)
   NAnswer(353,1,NodeFinish101)
end

procedure NodeFinish101 begin
   Reply(354)
   BAnswer(355,1,NodeFinish102)
   zNAnswer(356,1,Node999)
end

procedure NodeFinish102 begin
   Reply(357)
   NAnswer(358,1,Node999)
end
