#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_EncSlvC
#define TOWN_REP_VAR                    -1  // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_FLAGSTAFF_MERC    // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_PHENIX        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;

procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;

procedure NodeAnswer;
procedure NodeAnswer1;
procedure NodeAnswer2;
procedure NodeAnswer3;
procedure NodeAnswer4;
procedure NodeAnswer5;
procedure NodeAnswer999;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_gvar_bit_on(GVAR_ENC_CONVOY_FLAGS_BIT, bit_1);
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   if (gvar_bit(GVAR_ENC_CONVOY_FLAGS_BIT, bit_2) != 0) or (gvar_bit(GVAR_ENC_CONVOY_FLAGS_BIT, bit_3) != 0) then begin
   set_critter_options(2,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   end
   else begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,2) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (source_obj == dude_obj) then begin
   set_gvar_bit_on(GVAR_ENC_CONVOY_FLAGS_BIT, bit_2);
   end
   set_damage_dude
end

procedure destroy_p_proc begin
   set_gvar_bit_on(GVAR_ENC_CONVOY_FLAGS_BIT, bit_5);
   if (source_obj == dude_obj) then begin
   set_gvar_bit_on(GVAR_ENC_CONVOY_FLAGS_BIT, bit_2);
   end
   item_add(self_obj,PID_ARMOR_PURPLE_ROBE_A,1)
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (bitDialog(bit_1) == 0) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   display_mstr(102);
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeFstDialog;
end

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswerSkill(201,1,NodeAnswer,SKILL_CONVERSANT,50,201,NodeFstDialog3)
   NAnswerSkill(209,1,NodeFstDialog6,SKILL_SCIENCE,50,209,NodeFstDialog5)
   if (global_var(GVAR_TITUL_PHENIX_CULT) >0) then begin
   GAnswer(202,1,NodeFstDialog4)
   end
   BAnswer(203,1,NodeFstDialog2)
   NAnswer(204,1,Node999)
end

procedure NodeFstDialog2 begin
   Reply(205)
   NAnswer(206,1,Node998)
end

procedure NodeFstDialog3 begin
   if dude_skill(SKILL_CONVERSANT,0) then begin
   Reply(227)
   BAnswer(203,1,NodeFstDialog2)
   NAnswer(204,1,Node999)
   end
   else begin
   Reply(205)
   NAnswer(206,1,Node998)
   end
end

procedure NodeFstDialog4 begin
   Reply(207)
   NAnswer(208,1,NodeAnswer)
end

procedure NodeFstDialog5 begin
   if dude_skill(SKILL_SCIENCE,0) then begin
   Reply(227)
   BAnswer(203,1,NodeFstDialog2)
   NAnswer(204,1,Node999)
   end
   else begin
   Reply(205)
   NAnswer(206,1,Node998)
   end
end

procedure NodeFstDialog6 begin
   Reply(218)
   NAnswer(208,1,NodeAnswer)
end

procedure NodeAnswer begin
   bitDialogExp(bit_2,350)
   set_gvar_bit_on(GVAR_ENC_CONVOY_FLAGS_BIT, bit_4);
   Reply(210)
   NAnswer(211,1,NodeAnswer1)
   NAnswer(213,1,NodeAnswer2)
   NAnswer(215,1,NodeAnswer3)
   NAnswer(217,1,NodeAnswer4)
   NAnswer(225,1,NodeAnswer5)
end

procedure NodeAnswer1 begin
   Reply(212)
   BAnswer(219,1,NodeAnswer999)
   NAnswer(220,1,NodeAnswer999)
end

procedure NodeAnswer2 begin
   Reply(214)
   BAnswer(219,1,NodeAnswer999)
   NAnswer(220,1,NodeAnswer999)
end

procedure NodeAnswer3 begin
   Reply(216)
   BAnswer(219,1,NodeAnswer999)
   NAnswer(220,1,NodeAnswer999)
end

procedure NodeAnswer4 begin
   if (worldmap_ypos <500) then begin
   mark_on_map(AREA_FLAGSTAFF)
   Reply(221)
   end
   else if (worldmap_ypos <800) then begin
   mark_on_map(AREA_PHOENIX)
   Reply(222)
   end
   else begin
   mark_on_map(AREA_TWO_SUN)
   Reply(223)
   end
   BAnswer(219,1,NodeAnswer999)
   NAnswer(220,1,NodeAnswer999)
end

procedure NodeAnswer5 begin
   item_add(dude_obj,PID_M_WATER_FLASK,3)
   Reply(226)
   BAnswer(219,1,NodeAnswer999)
   NAnswer(220,1,NodeAnswer999)
end

procedure NodeAnswer999 begin
   Reply(224)
   BAnswer(203,1,NodeFstDialog2)
   NAnswer(204,1,Node999)
end
