#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCMadre
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      -100       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeCulon;
procedure NodeCulon2;
procedure NodeCulon3;
procedure NodeCulon4;
procedure NodeCulon5;
procedure NodeQuest;
procedure NodeQuest1;
procedure NodeQuest2;
procedure NodeQuest3;
procedure NodeAnswer;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeAnswer304;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 1);

       if (global_var(GVAR_VILLA_STATUS_MADRE) == 1) then begin
          if (bitDialog(bit_2) == 0) then begin
          display_mstr(103);
          set_lvar_bit_on(LVAR_Dialog_Status, bit_2);
          end
          set_obj_visibility(self_obj, 0);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (map_var(MVAR_Plaza_Council) > 0) then begin
       timer_move_to_tile(0,12483,2)
       end
       else begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   if (map_var(MVAR_Plaza_Council) > 0) then begin
      if (self_visible == true) then begin
      if (self_tile != 12483) then begin
      reg_anim_clear(self_obj);
      move_to(self_obj,12483,0);
      end
      end
   end
   set_critter_options(3,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_VILLA_STATUS_MADRE,-2);
   setQuest(GVAR_VILLA_QST_CULON,qStop);
   kill_critter_opt
   kill_critter_dude_reply(102,102)
end

procedure talk_p_proc begin
   if (global_var(GVAR_GAME_END) != 0) then begin
      if (global_var(GVAR_TITUL_VILLA_TRADITION)>0) then begin
      z_floater(self_obj,106,COLOR_MSG_GREEN);
      end
      else if (global_var(GVAR_TITUL_VILLA_DISTROY)>0) then begin
      floater(self_obj,107,COLOR_MSG_RED);
      end
      else begin
      floater(self_obj,108,COLOR_MSG_NORMAL);
      end
   end
   else begin
      setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
      fracReaction(GVAR_TITUL_VILLA_TRADITION,50) // Поправка к отношению за принадлежность к фракциям
      fracReaction(GVAR_TITUL_VILLA_DISTROY,-50) // Поправка к отношению за принадлежность к фракциям
      dialog_proc(0,104,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else if ((global_var(GVAR_TITUL_REBIRTH) > 0) and (bitDialog(bit_3) == 0)) then begin
   call NodeSndDialog2;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   setQuest(GVAR_MAIN_QUEST_FLAGSTAFF,qEnd); // для контроля на всякий случай
   zReply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeSndDialog)
end

//--- ВТОРОЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (game_time_hour < 0600) then begin
   Reply(212)
   end
   else begin
   Reply(210)
   end

   //--- Главквесты
   if (getQuest(GVAR_FLAGSTAFF_MINES_DESTROY) == qStart) then begin
   NAnswer(270,1,NodeAnswer301)
   end
   if (getQuest(GVAR_GARAGE_STANOK_DESTROY) == qStart) then begin
   NAnswer(273,1,NodeAnswer302)
   end

   if (getQuest(GVAR_VILLA_ALLIANCE_RANGER) >= qEnd) then begin
   NAnswer(276,1,NodeAnswer303)
   end
   else if (getQuest(GVAR_VILLA_ALLIANCE_BOS) >= qEnd) then begin
   NAnswer(279,1,NodeAnswer304)
   end

   //--- Расспросы
   NAnswer(250,1,NodeQuest)
   NAnswer(220,1,NodeAnswer)
   if (getQuest(GVAR_VILLA_QST_CHRIS) == qStart) then begin
   NAnswer(230,1,NodeAnswer105)
   end

   //--- Кулон
   if (getQuest(GVAR_VILLA_QST_CULON) == qZero) then begin
      NAnswer(290,1,NodeCulon)
   end
   else if (getQuest(GVAR_VILLA_QST_CULON) == qStart) then begin
      if (item_amnt(dude_obj,PID_Q_MADRE_CULON)>0) then begin
      GAnswer(298,1,NodeCulon4)
      end
   end

   NAnswer(211,1,Node999)
end

procedure NodeSndDialog2 begin
   bitDialogExp(bit_3,0)
   Reply(204)
   NAnswer(205,1,NodeSndDialog)
end

procedure NodeCulon begin
   Reply(291)
   NAnswer(292,1,NodeCulon2)
end

procedure NodeCulon2 begin
   Reply(293)
   NAnswer(294,1,NodeCulon3)
end

procedure NodeCulon3 begin
   setQuest(GVAR_VILLA_QST_CULON,qStart);
   Reply(295)
   NAnswer(297,1,NodeSndDialog)
   NAnswer(296,1,NodeSndDialog)
end

procedure NodeCulon4 begin
   if (item_amnt(dude_obj,PID_Q_MADRE_CULON)>0) then begin
   call NodeCulon5;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeCulon5 begin
   item_remove(dude_obj,PID_Q_MADRE_CULON,1)
   if (getQuest(GVAR_VILLA_QST_CULON) < qEnd) then begin
      set_REP(3)
      exp_add(250);
      if (dude_luck < 10) then begin
      set_critter_stat(dude_obj, STAT_lu, 1);
      display_mstr(283);
      end
      setQuest(GVAR_VILLA_QST_CULON,qEnd);
   end
   Reply(299)
   NAnswer(282,1,Node999)
end

procedure NodeQuest begin
   if (getQuest(GVAR_MAIN_QUEST_SYNOD_VILLA) != qZero) then begin
      if (getQuest(GVAR_FLAGSTAFF_SLAVES_MINE) < qEnd) then begin
      Reply(262)
      NAnswer(264,1,NodeSndDialog)
      NAnswer(263,1,Node999)
      end
      else begin
      Reply(255)
      NAnswer(264,1,NodeSndDialog)
      NAnswer(256,1,Node999)
      end
   end
   else if (global_var(GVAR_VILLA_STATUS_PADRE) == 0) then begin
      Reply(251)
      NAnswer(252,1,NodeQuest1)
   end
   else if (global_var(GVAR_VILLA_STATUS_PADRE) < 0) then begin
      Reply(251)
      NAnswer(257,1,NodeQuest2)
      NAnswer(264,1,NodeSndDialog)
      NAnswer(254,1,Node999)
   end
   else begin
      Reply(255)
      NAnswer(265,1,NodeSndDialog)
      NAnswer(256,1,Node999)
   end
end

procedure NodeQuest1 begin
   Reply(253)
   NAnswer(264,1,NodeSndDialog)
   NAnswer(254,1,Node999)
end

procedure NodeQuest2 begin
   Reply(258)
   NAnswer(259,1,NodeQuest3)
end

procedure NodeQuest3 begin
   if (getQuest(GVAR_MAIN_QUEST_SYNOD_VILLA) == qZero) then begin
   setQuest(GVAR_MAIN_QUEST_SYNOD_VILLA,qStart);
   end
   Reply(260)
   NAnswer(261,1,Node999)
end

procedure NodeAnswer begin
   Reply(221)
   NAnswer(222,1,NodeAnswer102)
   NAnswer(229,1,Node999)
end

procedure NodeAnswer102 begin
   Reply(223)
   NAnswer(224,1,NodeAnswer103)
   NAnswer(229,1,Node999)
end

procedure NodeAnswer103 begin
   Reply(225)
   NAnswer(226,1,NodeAnswer104)
end

procedure NodeAnswer104 begin
   bitDialogExp(bit_4,100)
   Reply(227)
   NAnswer(232,1,NodeSndDialog)
   NAnswer(228,1,Node999)
end

procedure NodeAnswer105 begin
   Reply(231)
   NAnswer(228,1,NodeSndDialog)
end

procedure NodeAnswer301 begin
   Reply(271)
   NAnswer(272,1,NodeSndDialog)
end

procedure NodeAnswer302 begin
   Reply(274)
   NAnswer(275,1,NodeSndDialog)
end

procedure NodeAnswer303 begin
   Reply(277)
   NAnswer(278,1,NodeSndDialog)
end

procedure NodeAnswer304 begin
   Reply(280)
   NAnswer(281,1,NodeSndDialog)
end
