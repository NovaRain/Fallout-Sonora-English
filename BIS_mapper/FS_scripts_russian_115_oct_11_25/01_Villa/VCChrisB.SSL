#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCChrisB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog3;
procedure NodeAnswer;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeQst;
procedure NodeQst1;
procedure NodeQst2;
procedure NodeQst3;
procedure NodeQst4;

//---------------------

#define LVAR_Check_UsingFood            (6) // количество использованных на персонажа продуктов питания

#define limit_UsingFood                  5

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (global_var(GVAR_VILLA_STATUS_CHRIS) == 1) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       if (global_var(GVAR_VILLA_STATUS_CHRIS) == 1) then begin
       timer_move_to_home
       end
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (global_var(GVAR_VILLA_STATUS_CHRIS) != 1) then begin
   partyRunToDude
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if ((itemTypeUseDude == 3) and (global_var(GVAR_VILLA_STATUS_CHRIS) == 1)) then begin
      inc_local_var(LVAR_Check_UsingFood);
      if (local_var(LVAR_Check_UsingFood) >= limit_UsingFood) then begin
      display_mstr(110);
      floater(self_obj,111,COLOR_MSG_GREEN);
      end
      else begin
      display_msg(mstr(112)+local_var(LVAR_Check_UsingFood)+mstr(113)+limit_UsingFood+mstr(114));
      floater(self_obj,115,COLOR_MSG_NORMAL);
      end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (source_obj == dude_obj) then begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,-3);
   end
   else begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,-2);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,50) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_VILLA_STATUS_CHRIS) < 0) then begin
   call NodeSndDialog3;
   end
   else if (global_var(GVAR_VILLA_STATUS_CHRIS) == 2) then begin
   call NodeSndDialog2;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(dude_name+mstr(200))
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeAnswer)
   NAnswer(204,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (getReaction > 0) then begin
   Reply(210)
   end
   else begin
   Reply(211)
   end

   NAnswer(213,1,NodeAnswer)
   if (bitDialog(bit_2) != 0) then begin
   NAnswer(228,1,NodeQst)
   end
   if (local_var(LVAR_Check_UsingFood) >= limit_UsingFood) then begin
   GAnswer(236,1,NodeQst4)
   end

   NAnswer(212,1,Node999)
end

procedure NodeSndDialog2 begin
   display_mstr(244);
   if (dude_elevation == 0) then begin
   Reply(242)
   NAnswer(243,1,Node999)
   end
   else begin
   Reply(240)
   NAnswer(241,1,Node999)
   end
end

procedure NodeSndDialog3 begin
   zReply(245)
   NAnswer(246,1,Node999)
   NAnswer(247,1,Node999)
end

procedure NodeAnswer begin
   Reply(214)

   NAnswer(220,1,NodeAnswer101)
   NAnswer(222,1,NodeAnswer102)
   NAnswer(224,4,NodeAnswer103)
   NAnswer(228,1,NodeQst)

   NAnswer(212,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(221)
   NAnswer(215,1,NodeAnswer)
end

procedure NodeAnswer102 begin
   Reply(223)
   NAnswer(215,1,NodeAnswer)
end

procedure NodeAnswer103 begin
   Reply(225)
   NAnswer(226,1,NodeAnswer104)
end

procedure NodeAnswer104 begin
   bitDialogExp(bit_3,50)
   Reply(227)
   NAnswer(215,1,NodeAnswer)
end

procedure NodeQst begin
   bitDialogExp(bit_2,0)
   Reply(229)
   NAnswer(230,1,NodeQst1)
end

procedure NodeQst1 begin
   Reply(231)
   NAnswer(232,1,NodeQst2)
   NAnswer(233,1,NodeQst3)
   zNAnswer(234,1,NodeAnswer)
end

procedure NodeQst2 begin
   display_mstr(235);
   call Node999;
end

procedure NodeQst3 begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,-2);
   display_mstr(239);
   call Node999;
end

procedure NodeQst4 begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,2); // одновременно является проверкой для Криса, чтобы тот бегал за ГГ по карте
   display_mstr(244);
   rm_timer_event(self_obj);
   Reply(237)
   NAnswer(238,1,Node999)
end
