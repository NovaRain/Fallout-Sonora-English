#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCCrzEnm
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog105;
procedure NodeFstDialog106;
procedure NodeFstDialog107;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog300;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       if (global_var(GVAR_VILLA_STATUS_CHRIS) == 2) then begin
       set_local_var(LVAR_Home_Tile,10);
       move_to(self_obj, HomeTile, self_elevation);
       end
       set_start_home
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,115)
   end
   if (fixed_param == 3) then begin
       dude_teleport_map(1,1,MAP_VILLA_PLAZA,3);
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (getQuest(GVAR_VILLA_QST_CHRIS) == qStart) then begin
      if (global_var(GVAR_VILLA_STATUS_CHRIS) == 2) then begin
         if (bitDialog(bit_1) == 0) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 4) then begin
            invisToDude(0,102) // Скрывание нпс от ГГ до некоторой дистанции, в скобках реплика для лога
            end
            dialogue_system_forcing(4)
         end
      end
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_VILLA_QST_CHRIS) == qStart) then begin
   setQuest(GVAR_VILLA_QST_CHRIS,-1);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   if (global_var(GVAR_VILLA_STATUS_CHRIS) < 0) then begin
   floater(self_obj,105,COLOR_MSG_NORMAL);
   end
   else if (bitDialog(bit_1) != 0) then begin
   floater(self_obj,103,COLOR_MSG_NORMAL);
   end
   else begin
   setReaction(1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeFstDialog;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(210)
   BAnswer(211,1,NodeFstDialog101)
   NAnswer(230,1,NodeFstDialog200)
   BAnswer(240,1,NodeFstDialog300)
end

procedure NodeFstDialog101 begin
   Reply(212)
   NAnswer(213,1,NodeFstDialog102)
end

procedure NodeFstDialog102 begin
   Reply(214)
   NAnswerSkill(215,1,NodeFstDialog103,SKILL_CONVERSANT,100,224,NodeFstDialog103)
end

procedure NodeFstDialog103 begin
   Reply(216)
   if dude_skill(SKILL_CONVERSANT,100) then begin
   NAnswer(217,1,NodeFstDialog104)
   end
   if ((global_var(GVAR_VILLA_STATUS_OLD)>=10) or (get_REP>=30)) then begin
   NAnswer(225,1,NodeFstDialog107)
   end
   zNAnswer(220,1,NodeFstDialog105)
   BAnswer(221,1,NodeFstDialog106)
end

procedure NodeFstDialog104 begin
   bitDialogExp(bit_2,350)
   set_local_var(LVAR_Home_Tile,13730);
   /*
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 5, 1);
   */
   set_local_var(LVAR_Home_Tile,10);
   move_to(self_obj, HomeTile, self_elevation);
   Reply(218)
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog105 begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,-2);
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 2, 3);
   call Node999;
end

procedure NodeFstDialog106 begin
   set_REP(-10)
   set_local_var(LVAR_Home_Tile,10);
   move_to(self_obj, HomeTile, self_elevation);
   Reply(222)
   NAnswer(223,1,Node999)
end

procedure NodeFstDialog107 begin
   bitDialogExp(bit_2,350)
   set_local_var(LVAR_Home_Tile,13730);
   /*
   rm_timer_event(self_obj);
   add_timer_event(self_obj, 5, 1);
   */
   set_local_var(LVAR_Home_Tile,10);
   move_to(self_obj, HomeTile, self_elevation);
   Reply(226)
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog200 begin
   Reply(231)
   NAnswer(232,1,NodeFstDialog201)
end

procedure NodeFstDialog201 begin
   Reply(233)
   NAnswer(234,1,NodeFstDialog105)
end

procedure NodeFstDialog300 begin
   if town_rep_is_accepted then begin
   Reply(241)
   end
   else begin
   Reply(242)
   end
   NAnswer(243,1,NodeFstDialog105)
   BAnswer(244,1,NodeFstDialog106)
end
