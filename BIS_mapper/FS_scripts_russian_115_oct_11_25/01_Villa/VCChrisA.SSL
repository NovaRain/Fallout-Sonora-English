#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_VCChrisA
#define TOWN_REP_VAR                    GVAR_TOWN_REP_VILLA   // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_VILLA_PEASAN     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_TRIBLE_VILLA       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeDialog01;
procedure NodeDialog01b;
procedure NodeDialog02;
procedure NodeDialog03;
procedure NodeDialog03a;
procedure NodeDialog03b;
procedure NodeDialog03c;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if ((getQuest(GVAR_MAIN_QUEST_FLAGSTAFF) >= qEnd) or (global_var(GVAR_VILLA_STATUS_CHRIS) != 0)) then begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(3,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure push_p_proc begin
   //push_options(HomeTile,5,110) //Толкать (точка отсчета, макс расстояние, фраза нпс при толкании), удалить если не надо
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_VILLA_STATUS_CHRIS,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,20) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,1,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   Reply(200)
   NAnswer(202,1,NodeDialog01)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(203,1,NodeDialog02)
   end
   NAnswer(201,1,Node999)
end

procedure NodeDialog01 begin
   Reply(204)
   NAnswer(215,1,NodeDialog01b)
end

procedure NodeDialog01b begin
   Reply(216)
   if (bitDialog(bit_2) == 0) then begin
   NAnswer(203,1,NodeDialog02)
   end
   NAnswer(201,1,Node999)
end

procedure NodeDialog02 begin
   Reply(205)
   BAnswer(206,5,NodeDialog03)
   NAnswer(202,1,NodeDialog01)
   NAnswer(201,1,Node999)
end

procedure NodeDialog03 begin
   bitDialogExp(bit_2,75)
   Reply(207)
   BAnswer(208,1,NodeDialog03a)
   NAnswer(209,1,NodeDialog03b)
   GAnswer(210,1,NodeDialog03c)
end

procedure NodeDialog03a begin
   setBonusReaction(-20)
   Reply(211)
   NAnswer(212,1,Node999)
end

procedure NodeDialog03b begin
   Reply(213)
   NAnswer(212,1,Node999)
end

procedure NodeDialog03c begin
   setBonusReaction(20)
   Reply(214)
   NAnswer(212,1,Node999)
end
