#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCScvAtm
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PHOENIX_JUNK     // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_PERSON_WIMPY       // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      25 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure questSet;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswerQst;

//---------------------

#define LVAR_Flag_Food                     (6) // фиксирует факт применения еды

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (getQuest(GVAR_PHENIX_QST_PLANT_SPY) == qStart) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,111)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
   if (itemTypeUseDude == 2) then begin
      if (local_var(LVAR_Flag_Food) == 0) then begin
      inc_local_var(LVAR_Flag_Food);
      end
   end
   if (itemTypeUseDude == 3) then begin
      if (local_var(LVAR_Flag_Food) == 0) then begin
      floater(self_obj,102,COLOR_MSG_GREEN);
      inc_local_var(LVAR_Flag_Food);
      end
   end
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   if (getQuest(GVAR_PHENIX_QST_PLANT_SPY) == qStart) then begin
   call questSet;
   floater(self_obj, 103, COLOR_MSG_RED);
   end
   set_damage_dude
end

procedure questSet begin
   setQuest(GVAR_PHENIX_QST_PLANT_SPY,qEnd);
end

procedure destroy_p_proc begin
   if (getQuest(GVAR_PHENIX_QST_PLANT_SPY) == qStart) then begin
   call questSet;
   floater(self_obj, 103, COLOR_MSG_RED);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,50)
   Reply(200)
   zNAnswer(201,1,NodeFstDialog3)
   BAnswer(202,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   setBonusReaction(-10)
   call NodeAnswer100;
end

procedure NodeFstDialog3 begin
   setBonusReaction(10)
   call NodeAnswer100;
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (local_var(LVAR_Flag_Food)>0) then begin
   Reply(251)
   end
   else begin
   Reply(250)
   end

   NAnswer(252,1,NodeAnswer100)
   if (getQuest(GVAR_PHENIX_QST_PLANT_SPY) == qStart) then begin
   NAnswer(205,1,NodeAnswer101)
   end
   NAnswer(253,1,Node999)
end

procedure NodeAnswer100 begin
   Reply(203)
   if (getQuest(GVAR_PHENIX_QST_PLANT_SPY) == qStart) then begin
   NAnswer(205,1,NodeAnswer101)
   end
   NAnswer(204,1,Node999)
end

procedure NodeAnswer101 begin
   Reply(206)

   if (local_var(LVAR_Flag_Food)>0) then begin
   GAnswer(208,1,NodeAnswerQst)
   end
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=10) then begin
   NAnswer(209,1,NodeAnswer102)
   end
   else begin
   NAnswer(212,1,NodeSndDialog)
   end
   if (global_var(GVAR_TITUL_ARENA_MASTER)>0) then begin
   NAnswer(217,1,NodeAnswer105)
   end
   else begin
   NAnswerStat(217,3,NodeAnswer105,STAT_st,5,213,NodeAnswer104)
   end
   //Это очень важно. Возможно, от этого зависит жизнь целого города!
   NAnswer(207,1,Node999)
end

procedure NodeAnswer102 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS)>=10) then begin
   call NodeAnswer103;
   end
   else begin
   call NodeAnswer101;
   end
end

procedure NodeAnswer103 begin
   item_remove(dude_obj,PID_BOOTLE_CAPS,10)
   item_add(self_obj,PID_BOOTLE_CAPS,10)
   Reply(210)
   NAnswer(211,1,NodeAnswerQst)
end

procedure NodeAnswer104 begin
   Reply(214)
   NAnswer(215,1,Node999)
   BAnswer(216,1,Node998)
end

procedure NodeAnswer105 begin
   setBonusReaction(-50)
   set_SLAVA(-5)
   set_REP(-1)
   Reply(218)
   NAnswer(219,1,NodeAnswerQst)
end

procedure NodeAnswerQst begin
   call questSet;
   exp_add(250);
   Reply(220)
   NAnswer(222,1,Node999)
   BAnswer(221,1,Node999)
end


