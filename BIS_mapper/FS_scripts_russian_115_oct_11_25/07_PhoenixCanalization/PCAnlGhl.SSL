#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCAnlGhl
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_GHOUL_WILD       // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GHOUL_GENERIC      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GHOUL      // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_BAD, REP_KILL_NEITRAL, REP_KILL_CRITICAL для враждебности всего поселения, REP_KILL_CHILD)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialog7;
procedure NodeFstDialog8;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj,1);
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   invisToDude(0,0) // Скрывание нпс от ГГ до некоторой дистанции, в скобках реплика для лога (устанавливать set_obj_visibility(self_obj, 1) в map_enter_p_proc)
   if (bitDialog(bit_1) == 0) then begin
   if self_can_see_dude then begin
   dialogue_system_forcing(5)
   end
   end
   set_critter_options(0,1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,2) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
   effectRegeratHP
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   kill_critter_opt
end

procedure talk_p_proc begin
   if (bitDialog(bit_1) == 0) then begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else if (bitDialog(bit_2) == 0) then begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
   else begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   call NodeFstDialog;
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   GAnswer(201,1,NodeFstDialog3)
   NAnswer(202,1,NodeFstDialog2)
   BAnswer(203,1,Node998)
end

procedure NodeFstDialog2 begin
   Reply(210)
   NAnswer(211,1,Node998)
end

procedure NodeFstDialog3 begin
   Reply(212)
   if (global_var(GVAR_TITUL_REBIRTH) > 0) then begin
   GAnswer(213,1,NodeFstDialog5)
   end
   else begin
   NAnswerStat(213,1,NodeFstDialog4,STAT_ch,3,213,NodeFstDialog5)
   end
   BAnswer(214,1,Node998)
end

procedure NodeFstDialog4 begin
   Reply(215)
   NAnswer(216,1,Node998)
end

procedure NodeFstDialog5 begin
   bitDialogExp(bit_2,100)
   Reply(217)
   NAnswer(218,1,NodeFstDialog6)
   NAnswer(219,1,NodeFstDialog6)
end

procedure NodeFstDialog6 begin
   Reply(220)
   NAnswer(221,1,NodeFstDialog7)
end

procedure NodeFstDialog7 begin
   Reply(222)
   NAnswer(223,1,NodeFstDialog8)
   NAnswer(224,1,NodeFstDialog8)
end

procedure NodeFstDialog8 begin
   Reply(225)
   NAnswer(226,1,Node999)
   NAnswer(227,1,Node999)
end
