#include "..\headers\define.h"
//--------------------- Книгохранитель

#define NAME                            SCRIPT_PCCltBk
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX_CULT // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CULT_ATOMIC      // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CULT_PHENIX        // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_NEITRAL    // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_PNXCULT          // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      50 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer204;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer303;
procedure NodeBibl;
procedure NodeBibl2;
procedure NodeBibl3;
procedure NodeBibl4;
procedure NodeBibl5;
procedure NodeSpy;
procedure NodeSpy2;
procedure NodeSpy3;
procedure NodeSpy4;
procedure NodeBooks;
procedure NodeBooks100;
procedure NodeBooks101;
procedure NodeBooks102;
procedure NodeBooks103;
procedure NodeBooks104;
procedure NodeBooks105;
procedure NodeBooks106;
procedure NodeBooks107;
procedure NodeBooks200;
procedure NodeBooks201;
procedure NodeBooks202;
procedure NodeBooks203;
procedure NodeBooks204;
procedure NodeBooks205;
procedure NodeBooks206;
procedure NodeBooks207;
procedure NodeBooks208;

//---------------------

#define LVAR_BOOKS_AMNT                     (6) // число книг, подаренных библиотеке

import variable box_stop_use;

variable itemBookAmnt;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_PHENIX_CULT) == 0) then begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_CULT_BIBL,-1);
   set_gvar_bit_on(GVAR_BIBL_FLAGS_BIT, bit_8);
   setQuest(GVAR_PHENIX_QST_BIBLIO,qStop);
   setQuest(GVAR_PHENIX_QST_BIBLBOOK,qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_PHENIX_CULT,70) // Поправка к отношению за принадлежность к фракциям
   if (map_var(MVAR_PNX_CULT_MAP_SOLAR) > 0) then begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   NAnswer(201,1,NodeAnswer200)
   NAnswer(202,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   setBonusReaction(-10)
   Reply(203)
   NAnswer(204,1,NodeAnswer200)
   NAnswer(205,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_TITUL_PHENIX_CULT)>0) then begin
   zReply(211)
   end
   else begin
   zReply(210)
   end

   //--- квест Аарона
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 10) then begin
      if (map_var(MVAR_PNX_CULT_SPY_BOOKS) == 0) then begin
      NAnswer(280,1,NodeSpy)
      end
   end

   //--- доставка книг
   if (bitDialog(bit_5) != 0) then begin
      if (bitDialog(bit_7) == 0) then begin
      NAnswer(300,1,NodeBooks)
      end
      else begin
      NAnswer(303,1,NodeBooks)
      end
   end

   if (getQuest(GVAR_PHENIX_QST_BIBLBOOK) == qStart) then begin
      if (item_amnt(dude_obj,PID_RELICT_BIBLE)>0) then begin
      NAnswer(332,3,NodeBooks205)
      end
   end

   /*

   if (getQuest(GVAR_PHENIX_QST_BIBLIO) == qStart) then begin
      !!! сдача квеста
         set_global_var(GVAR_PHENIX_STATUS_CULT_BIBL,1);
   end

   */


   //--- расспросы
   NAnswer(220,3,NodeAnswer100)
   NAnswer(240,3,NodeAnswer200)
   if ((bitDialog(bit_3) != 0) and (bitDialog(bit_4) == 0)) then begin
   NAnswer(250,5,NodeAnswer300)
   end
   NAnswer(212,1,Node999)
end

//--- РАССПРОСЫ

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(222,1,NodeAnswer101)
   NAnswer(226,1,NodeAnswer103)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(225)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer103 begin
   bitDialogExp(bit_3,10)
   Reply(227)
   NAnswer(228,1,NodeAnswer104)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(229)
   NAnswer(230,1,NodeAnswer105)
end

procedure NodeAnswer105 begin
   Reply(231)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer200 begin
   Reply(241)
   NAnswer(242,1,NodeAnswer201)
   NAnswer(244,1,NodeAnswer202)
   if (gvar_bit(GVAR_BIBL_FLAGS_BIT, bit_8) == 0) then begin
   NAnswer(260,1,NodeBibl)
   end
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer201 begin
   Reply(243)
   NAnswer(244,1,NodeAnswer202)
   NAnswer(248,1,NodeAnswer204)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer202 begin
   Reply(245)
   NAnswer(246,5,NodeAnswer203)
   NAnswer(242,1,NodeAnswer201)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer203 begin
   bitDialogExp(bit_2,15)
   Reply(247)
   NAnswer(242,1,NodeAnswer201)
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer204 begin
   bitDialogExp(bit_5,15)
   Reply(249)

/*
   if (getQuest(GVAR_PHENIX_QST_BIBLIO) == qZero) then begin
      !!! Так я могу поискать. --- получение квеста
   end
*/

   NAnswer(244,1,NodeAnswer202)
   if (gvar_bit(GVAR_BIBL_FLAGS_BIT, bit_8) == 0) then begin
   NAnswer(260,1,NodeBibl)
   end
   NAnswer(213,1,NodeSndDialog)
end

procedure NodeAnswer300 begin
   Reply(251)
   NAnswer(252,1,NodeAnswer301)
end

procedure NodeAnswer301 begin
   Reply(253)
   NAnswer(254,1,NodeAnswer302)
   NAnswer(257,7,NodeAnswer303)
end

procedure NodeAnswer302 begin
   Reply(255)
   NAnswer(256,1,NodeSndDialog)
end

procedure NodeAnswer303 begin
   bitDialogExp(bit_4,50)
   Reply(258)
   NAnswer(259,1,NodeSndDialog)
end

//--- БИБЛИОТЕКА

procedure NodeBibl begin
   Reply(261)
   if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   zNAnswer(264,1,NodeBibl2)
   end
   NAnswer(268,1,NodeBibl3)
   if (getQuest(GVAR_PHENIX_QST_BIBLIO) >= qEnd) then begin
   NAnswer(273,1,NodeBibl5)
   end
   NAnswer(262,1,NodeSndDialog)
   NAnswer(263,1,Node999)
end

procedure NodeBibl2 begin
   set_gvar_bit_on(GVAR_BIBL_FLAGS_BIT, bit_8);
   Reply(265)
   zGAnswer(266,1,Node999)
   BAnswer(267,1,Node999)
end

procedure NodeBibl3 begin
   if (item_amnt(dude_obj,PID_BOOTLE_CAPS) >= 300) then begin
   call NodeBibl4;
   end
   else begin
   Reply(271)
   NAnswer(272,1,Node999)
   end
end

procedure NodeBibl4 begin
   set_gvar_bit_on(GVAR_BIBL_FLAGS_BIT, bit_8);
   item_remove(dude_obj,PID_BOOTLE_CAPS,300)
   Reply(269)
   zGAnswer(266,1,Node999)
   BAnswer(267,1,Node999)
end

procedure NodeBibl5 begin
   set_gvar_bit_on(GVAR_BIBL_FLAGS_BIT, bit_8);
   Reply(274)
   zGAnswer(266,1,Node999)
   BAnswer(267,1,Node999)
end

//--- ШПИОН В СОБОРЕ

procedure NodeSpy begin
   Reply(281)
   NAnswer(282,1,NodeSpy2)
end

procedure NodeSpy2 begin
   Reply(283)
   NAnswer(284,1,NodeSpy3)
end

procedure NodeSpy3 begin
   set_map_var(MVAR_PNX_CULT_SPY_BOOKS,1);
   PLAY_FADE
   Reply(285)
   NAnswer(286,1,NodeSpy4)
   BAnswer(289,1,Node999)
   NAnswer(288,1,Node999)
end

procedure NodeSpy4 begin
   Reply(287)
   BAnswer(289,1,Node999)
   NAnswer(288,1,Node999)
end

//--- КНИГИ

procedure NodeBooks begin
   bitDialogExp(bit_7,0)
   Reply(301)
   if (item_amnt(dude_obj,PID_BOOK_OLD)>0) then begin
   NAnswer(304,1,NodeBooks100)
   end
   if (getQuest(GVAR_PHENIX_QST_BIBLBOOK) == qZero) then begin
   NAnswer(320,3,NodeBooks200)
   end
   NAnswer(302,1,NodeSndDialog)
end

procedure NodeBooks100 begin
   itemBookAmnt := 0;
   Reply(305)

   if (item_amnt(dude_obj,PID_BOOK_OLD)>=1) then begin
   NAnswer(309,1,NodeBooks101)
   end
   if (item_amnt(dude_obj,PID_BOOK_OLD)>=2) then begin
   NAnswer(310,1,NodeBooks102)
   end
   if (item_amnt(dude_obj,PID_BOOK_OLD)>=3) then begin
   NAnswer(311,1,NodeBooks103)
   end
   if (item_amnt(dude_obj,PID_BOOK_OLD)>3) then begin
   NAnswer(308,1,NodeBooks104)
   end

   NAnswer(306,1,NodeSndDialog)
   NAnswer(307,1,Node999)
end

procedure NodeBooks101 begin
   itemBookAmnt := 1;
   call NodeBooks105;
end

procedure NodeBooks102 begin
   itemBookAmnt := 2;
   call NodeBooks105;
end

procedure NodeBooks103 begin
   itemBookAmnt := 3;
   call NodeBooks105;
end

procedure NodeBooks104 begin
   itemBookAmnt := item_amnt(dude_obj,PID_BOOK_OLD);
   call NodeBooks105;
end

procedure NodeBooks105 begin
   item_remove(dude_obj,PID_BOOK_OLD,itemBookAmnt)
   exp_add(itemBookAmnt*25);

   Reply(312)
   GAnswer(313,1,NodeBooks106)
   NAnswer(317,1,NodeBooks107)
end

procedure NodeBooks106 begin
   inc_local_var_amt(LVAR_BOOKS_AMNT,itemBookAmnt);
   setBonusReaction(itemBookAmnt*5)
   set_REP(itemBookAmnt)
   set_SLAVA(itemBookAmnt*5)

   Reply(314)
   if ((local_var(LVAR_BOOKS_AMNT)>=25) and (global_var(GVAR_PHENIX_STATUS_CULT_BIBL) == 0) and (global_var(GVAR_TITUL_PHENIX_CULT) == 0)) then begin
   NAnswer(316,1,NodeBooks208)
   end
   else begin
   NAnswer(315,1,NodeSndDialog)
   NAnswer(316,1,Node999)
   end
end

procedure NodeBooks107 begin
   itemBookAmnt := itemBookAmnt*(5*proto_data(PID_BOOK_OLD, it_cost));
   item_add(dude_obj,PID_BOOTLE_CAPS,itemBookAmnt)

   Reply(mstr(318)+itemBookAmnt+mstr(319))
   NAnswer(315,1,NodeSndDialog)
   NAnswer(316,1,Node999)
end

procedure NodeBooks200 begin
   Reply(321)
   NAnswer(322,1,NodeBooks201)
   NAnswer(323,1,NodeBooks201)
end

procedure NodeBooks201 begin
   Reply(324)
   NAnswer(325,1,NodeBooks202)
end

procedure NodeBooks202 begin
   Reply(326)
   GAnswer(330,1,NodeBooks204)
   NAnswer(327,1,NodeBooks203)
   if (item_amnt(dude_obj,PID_RELICT_BIBLE)>0) then begin
   NAnswer(343,3,NodeBooks205)
   end
end

procedure NodeBooks203 begin
   Reply(328)
   NAnswer(329,1,Node999)
end

procedure NodeBooks204 begin
   setQuest(GVAR_PHENIX_QST_BIBLBOOK,qStart);
   Reply(331)
   if (item_amnt(dude_obj,PID_RELICT_BIBLE)>0) then begin
   NAnswer(343,3,NodeBooks205)
   end
   NAnswer(342,1,Node999)
end

procedure NodeBooks205 begin
   setQuest(GVAR_PHENIX_QST_BIBLBOOK,qEnd);
   item_remove(dude_obj,PID_RELICT_BIBLE,1)
   setBonusReaction(10)
   exp_add(500);
   g_display_mstr(491);
   Reply(333)
   GAnswer(334,1,NodeBooks206)
   NAnswer(337,1,NodeBooks207)
end

procedure NodeBooks206 begin
   setBonusReaction(50)
   set_REP(5)

   zReply(335)
   if ((global_var(GVAR_PHENIX_STATUS_CULT_BIBL) == 0) and (global_var(GVAR_TITUL_PHENIX_CULT) == 0)) then begin
   NAnswer(336,1,NodeBooks208)
   end
   else begin
   NAnswer(336,1,Node999)
   end
end

procedure NodeBooks207 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,300)
   Reply(338)
   if ((global_var(GVAR_PHENIX_STATUS_CULT_BIBL) == 0) and (global_var(GVAR_TITUL_PHENIX_CULT) == 0)) then begin
   NAnswer(339,1,NodeBooks208)
   end
   else begin
   NAnswer(339,1,Node999)
   end
end

procedure NodeBooks208 begin
   set_global_var(GVAR_PHENIX_STATUS_CULT_BIBL,1);
   zReply(340)
   NAnswer(341,1,Node999)
end
