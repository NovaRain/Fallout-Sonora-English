#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_PCMaster
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX_CULT // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CULT_ATOMIC      // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          -1                    // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      (SLAVA_KILL_BAD*20)   // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_PNXCULT          // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      80 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeMoveTwoSun;
procedure NodeStopDialog100;
procedure NodeStopDialog101;
procedure NodeStopDialog102;
procedure NodeStopDialog103;
procedure NodeStopDialog104;
procedure NodeStopDialog105;
procedure NodeStopDialog200;

procedure NodeFstDialog;
procedure NodeFstDialog1;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog100;
procedure NodeFstDialog101;
procedure NodeFstDialog102;
procedure NodeFstDialog103;
procedure NodeFstDialog104;
procedure NodeFstDialog104b;
procedure NodeFstDialog105;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog202;
procedure NodeFstDialog203;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;
procedure NodeFstDialog400;
procedure NodeFstDialogEnemy01;
procedure NodeFstDialogEnemy02;

procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeSndDialog2a;
procedure NodeSndDialog2b;

procedure NodeQst100;
procedure NodeQst101;
procedure NodeQst102;
procedure NodeQst103;
procedure NodeQst104;
procedure NodeQst105;
procedure NodeQst106;
procedure NodeQst107;
procedure NodeQst108;
procedure NodeQst109;
procedure NodeQst110;
procedure NodeQst111;
procedure NodeQst112;
procedure NodeQst200;
procedure NodeQst201;
procedure NodeQst202;
procedure NodeQst203;
procedure NodeQst204;
procedure NodeQst205;
procedure NodeQst206;
procedure NodeQst300;
procedure NodeQst301;
procedure NodeQst302;
procedure NodeQst303;
procedure NodeQst304;
procedure NodeQst305;
procedure NodeQst306;
procedure NodeQst307;
procedure NodeQst308;
procedure NodeQst309;
procedure NodeQst310;
procedure NodeQst311;

procedure NodeAnswer;
procedure NodeAnswer101;
procedure NodeAnswer101a;
procedure NodeAnswer101b;
procedure NodeAnswer200;
procedure NodeAnswer200b;
procedure NodeAnswer201;
procedure NodeAnswer202;
procedure NodeAnswer203;
procedure NodeAnswer210;
procedure NodeAnswer211;
procedure NodeAnswer212;
procedure NodeAnswer212b;
procedure NodeAnswer213;
procedure NodeAnswer214;
procedure NodeAnswer215;
procedure NodeAnswer216;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;

procedure NodeFollower;
procedure NodeFollower100;
//procedure NodeFollower101;
procedure NodeFollower102;
procedure NodeFollower103;
procedure NodeFollower200;
procedure NodeFollower200b;
procedure NodeFollower201;
procedure NodeFollower202;

procedure NodeVilla;
procedure NodeVilla2;
procedure NodeVilla3;
procedure NodeVilla4;
procedure NodeVilla100;
procedure NodeVilla101;
procedure NodeVilla102;
procedure NodeVilla103;
procedure NodeVilla110;
procedure NodeVilla111;
procedure NodeVilla200;
procedure NodeVilla201;
procedure NodeVilla300;
procedure NodeVilla301;
procedure NodeVilla302;
procedure NodeVilla310;
procedure NodeVilla311;
procedure NodeVilla320;
procedure NodeVilla321;
procedure NodeVilla322;
procedure NodeVilla323;
procedure NodeVilla330;
procedure NodeVilla331;
procedure NodeVilla332;
procedure NodeVilla400;

//---------------------

#define LVAR_Dude_Knowing                  (6) // знакомство с ГГ: 0 - ГГ проходимец, 1 - знает что ГГ ищет людей Виллы, 2 - знает, что ГГ связан с БС или Советником, 3 - свой человек в соборе
#define LVAR_Villa_Knowing                 (7) // состоялся ли диалог про Виллу: 0 - диалоге не состоялся, 1 - диалог состоялся
#define LVAR_SBrahmin_Qst                  (8) // ГГ навязался на службу через екомендацию Крука из СБрамин: 0 - нет, 1 - да

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
   if (fixed_param == 3) then begin
       set_global_var(GVAR_TWOSUN_STATUS_DUDE,1);
       partyRemoveAll
       if (dude_cur_hits<dude_max_hits) then begin
       critter_heal(dude_obj,dude_max_hits-dude_cur_hits);
       end
       if (get_poison(dude_obj)>0) then begin
       poison(dude_obj,-(get_poison(dude_obj)));
       end
       critter_uninjure(dude_obj, (DAM_BLIND bwor DAM_CRIP_LEG_LEFT bwor DAM_CRIP_LEG_RIGHT bwor DAM_CRIP_ARM_LEFT bwor DAM_CRIP_ARM_RIGHT));
       dude_teleport_map(1,-1,MAP_TWO_SUN_CITY,(5*24)+random(1,23));
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_PHENIX_CULT) == 0) then begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_CULT_AARON,-1);
   set_global_var(GVAR_PHENIX_CULT_PREVTITUL,-1);
   setQuest(GVAR_PHENIX_CULT_OWR_DOPUSK,qStop);
   setQuest(GVAR_PHENIX_CULT_ARON_DOPUSK,qStop);

   if (getQuest(GVAR_PHENIX_QST_CULT_A) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_CULT_A,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_B) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_CULT_B,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_C) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_CULT_C,qStop);
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_D) == qStart) then begin
   setQuest(GVAR_PHENIX_QST_CULT_D,qStop);
   end

   if (source_obj == dude_obj) then begin
   set_CITY_REP(GVAR_TOWN_REP_PHOENIX,15)
   end

   if (global_var(GVAR_PHENIX_MATIAS_NONATTAK) > 0) then begin
   kill_critter_opt_norep
   end
   else begin
   kill_critter_opt
   end
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_BOS,40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-10) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_DUDE_IS_SLAVE,-10) // Поправка к отношению за принадлежность к фракциям

   dialog_proc(1,102,NodeStartDialog,HEAD_PHENIX_CULTBOSS,BACKGROUND_WASTELND)
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin

   if (getQuest(GVAR_PHENIX_QST_CULT_A) != qZero) then begin
   bitDialogExp(bit_1,0)
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_B) != qZero) then begin
   bitDialogExp(bit_1,0)
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_C) != qZero) then begin
   bitDialogExp(bit_1,0)
   end

   if (getQuest(GVAR_PHENIX_CULT_OWR_DOPUSK) == qStart) then begin
      call NodeStopDialog200;
   end
   else if ((bitDialog(bit_1) != 0) and (bitDialog(bit_2) == 0) and (global_var(GVAR_TWOSUN_STATUS_DUDE) == 1)) then begin
      call NodeStopDialog100;
   end
   else if ((local_var(LVAR_Dude_Knowing) == 0) and (global_var(GVAR_PHENIX_CULT_PREVTITUL) == 0)) then begin
      call NodeFstDialog;
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРЕХОД В ТУСАН

procedure NodeMoveTwoSun begin
   if (local_var(LVAR_Dude_Knowing) == 0) then begin
   set_local_var(LVAR_Dude_Knowing,1);
   end
   if (local_var(LVAR_Villa_Knowing) == 0) then begin
   set_local_var(LVAR_Villa_Knowing,1);
   end
   setBonusReaction(-80)

   if (global_var(GVAR_TITUL_BOS) > 0) then begin
      Reply(417)
      NAnswer(418,1,Node999)
   end
   else if ((global_var(GVAR_TWOSUN_STATUS_ZAX) != 0) or (global_var(GVAR_TWOSUN_STATUS_DUDE) != 0) or (global_var(GVAR_TWOSUN_QST_ZONA) != 0)) then begin
      Reply(417)
      NAnswer(418,1,Node999)
   end
   else begin
      inven_unwield(dude_obj);
      rm_timer_event(self_obj);
      add_timer_event(self_obj, 2, 3);
      call Node999;
   end
end

//--- СТОП-ДИАЛОГ

procedure NodeStopDialog100 begin
   bitDialogExp(bit_2,100)
   if (local_var(LVAR_Villa_Knowing) == 0) then begin
   set_local_var(LVAR_Villa_Knowing,1);
   end

   if (getQuest(GVAR_PHENIX_CULT_OWR_DOPUSK) > 0) then begin
   Reply(292)
   BAnswer(293,4,NodeStopDialog105)
   BAnswer(295,-3,NodeStopDialog105)
   end
   else if ((global_var(GVAR_TWOSUN_STATUS_ZAX) > 0) or (global_var(GVAR_TWOSUN_STATUS_BOSS) < 0)) then begin
   Reply(292)
   BAnswer(293,4,NodeStopDialog101)
   BAnswer(295,-3,NodeStopDialog101)
   end
   else begin
   Reply(280)
   BAnswer(281,4,NodeStopDialog102)
   NAnswer(284,4,NodeStopDialog103)
   BAnswer(288,4,NodeStopDialog104)
   BAnswer(297,-3,NodeStopDialog101)
   end
end

procedure NodeStopDialog101 begin
   Reply(294)
   NAnswer(296,0,Node998)
end

procedure NodeStopDialog102 begin
   Reply(282)
   NAnswer(283,1,Node998)
end

procedure NodeStopDialog103 begin
   Reply(285)
   BAnswer(286,1,NodeStopDialog102)
   NAnswer(287,1,Node999)
end

procedure NodeStopDialog104 begin
   Reply(289)
   BAnswer(286,1,NodeStopDialog102)
   NAnswer(291,1,Node999)
end

procedure NodeStopDialog105 begin
   Reply(298)
   NAnswer(299,0,Node999)
end

procedure NodeStopDialog200 begin
   bitDialogExp(bit_1,100)
   set_local_var(LVAR_Dude_Knowing,3);
   setQuest(GVAR_PHENIX_CULT_OWR_DOPUSK,qEnd);
   setBonusReaction(20)
   Reply(mstr(270)+dude_name+mstr(271))

   NAnswer(272,1,NodeFollower200)
   zBAnswer(273,1,NodeFollower200)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog1;
   end
   else begin
   call NodeFstDialog2;
   end
end

procedure NodeFstDialog1 begin
   bitDialogExp(bit_1,100)
   Reply(200)
   call NodeFstDialog3;
end

procedure NodeFstDialog2 begin
   Reply(201)
   call NodeFstDialog3;
end

procedure NodeFstDialog3 begin
   NAnswer(mstr(204)+dude_name+mstr(205),1,NodeFstDialog400)

   if ((global_var(GVAR_TITUL_BOS) > 0) or (armor_pid_dude_var == PID_ARMOR_COMBAT_BOS)) then begin
   zGAnswer(264,1,NodeFstDialog104)
   end

   GAnswer(206,3,NodeFollower)
   NAnswer(202,1,NodeFstDialog300)
   zBAnswer(210,1,NodeFstDialog100)
end

procedure NodeFstDialog100 begin
   setBonusReaction(-20)
   Reply(211)
   NAnswer(mstr(204)+dude_name+mstr(205),1,NodeFstDialog400)
   if ((global_var(GVAR_TITUL_BOS) > 0) or (armor_pid_dude_var == PID_ARMOR_COMBAT_BOS)) then begin
   NAnswer(223,1,NodeFstDialog105)
   end
   NAnswer(203,1,NodeFstDialog300)
   NAnswer(240,5,NodeFstDialog200)
   if (dude_iq>3) then begin
   BAnswer(212,1,NodeFstDialog101)
   end else begin
   BAnswer(212,1,NodeFstDialog102)
   end
end

procedure NodeFstDialog101 begin
   zReply(213)
   GAnswer(216,5,NodeFstDialog103)
   NAnswer(214,1,Node998)
   NAnswer(215,1,Node998)
end

procedure NodeFstDialog102 begin
   Reply(217)
   NAnswer(218,1,Node999)
   NAnswer(219,1,Node999)
end

procedure NodeFstDialog103 begin
   setBonusReaction(-10)
   Reply(220)
   NAnswer(mstr(204)+dude_name+mstr(205),1,NodeFstDialog400)
   if ((global_var(GVAR_TITUL_BOS) > 0) or (armor_pid_dude_var == PID_ARMOR_COMBAT_BOS)) then begin
   NAnswer(223,1,NodeFstDialog105)
   end
   NAnswer(221,1,NodeFstDialog300)
   BAnswer(222,1,NodeFstDialogEnemy01)
end

procedure NodeFstDialog104 begin
   if (local_var(LVAR_Dude_Knowing) < 2) then begin
   set_local_var(LVAR_Dude_Knowing,2);
   end

   if (getReaction <0) then begin
   call NodeFstDialog105;
   end
   else begin
   setBonusReaction(40)
   Reply(265)
   NAnswer(267,1,Node999)
   BAnswer(268,1,NodeFstDialog104b)
   end
end

procedure NodeFstDialog104b begin
   setBonusReaction(-10)
   call Node999;
end

procedure NodeFstDialog105 begin
   if (local_var(LVAR_Dude_Knowing) < 2) then begin
   set_local_var(LVAR_Dude_Knowing,2);
   end
   setBonusReaction(40)
   Reply(266)
   NAnswer(267,1,Node999)
   BAnswer(268,1,NodeFstDialog104b)
end

procedure NodeFstDialog200 begin
   Reply(241)
   NAnswer(242,1,NodeFstDialog201)
end

procedure NodeFstDialog201 begin
   Reply(243)
   NAnswer(244,1,NodeFstDialog202)
end

procedure NodeFstDialog202 begin
   bitDialogExp(bit_8,30)
   Reply(245)
   NAnswer(mstr(204)+dude_name+mstr(205),1,NodeFstDialog400)
   if ((global_var(GVAR_TITUL_BOS) > 0) or (armor_pid_dude_var == PID_ARMOR_COMBAT_BOS)) then begin
   NAnswer(223,1,NodeFstDialog105)
   end
   NAnswer(246,1,NodeFstDialog203)
   if (dude_iq>3) then begin
   BAnswer(212,1,NodeFstDialog101)
   end else begin
   BAnswer(212,1,NodeFstDialog102)
   end
end

procedure NodeFstDialog203 begin
   Reply(247)
   BAnswer(248,1,NodeFstDialogEnemy01)
   NAnswer(249,1,Node999)
end

procedure NodeFstDialog300 begin
   Reply(250)
   GAnswerSkill(254,3,NodeAnswer200,SKILL_CONVERSANT,50,254,NodeAnswer200b)
   NAnswer(251,1,NodeFstDialog302)
   zGAnswer(252,1,Node999)
   NAnswer(253,1,NodeFstDialog301)
end

procedure NodeFstDialog301 begin
   Reply(255)
   NAnswer(256,1,Node999)
   GAnswer(257,1,Node999)
end

procedure NodeFstDialog302 begin
   Reply(260)
   NAnswer(mstr(262)+dude_name+mstr(263),1,NodeFstDialog400)
   BAnswer(261,1,NodeFstDialogEnemy02)
end

procedure NodeFstDialog400 begin
   if (local_var(LVAR_Dude_Knowing) == 0) then begin
   set_local_var(LVAR_Dude_Knowing,1);
   end
   Reply(mstr(227)+dude_name+mstr(228))
   NAnswer(229,1,NodeVilla)
   BAnswer(239,1,NodeFstDialogEnemy02)
end

procedure NodeFstDialogEnemy01 begin
   setBonusReaction(-40)
   if ((global_var(GVAR_TITUL_BOS) > 0) and (getReaction >= -90)) then begin
   Reply(224)
   NAnswer(225,1,Node999)
   BAnswer(226,1,Node999)
   end
   else begin
   zReply(230)
   BAnswer(231,1,Node998)
   NAnswer(232,1,Node998)
   end
end

procedure NodeFstDialogEnemy02 begin
   Reply(233)
   BAnswer(234,1,Node998)
   NAnswer(235,1,Node998)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (local_var(LVAR_Dude_Knowing) > 2) then begin
      if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
      Reply(304)
      end
      else if (global_var(GVAR_PHENIX_CULT_PREVTITUL) > 0) then begin
      zReply(305)
      end
      else begin
      Reply(304)
      end
   end
   else if (local_var(LVAR_Dude_Knowing) == 2) then begin
      zReply(303)
   end
   else if (local_var(LVAR_Dude_Knowing) == 1) then begin
      if (getReaction >= 20) then begin
      Reply(302)
      end
      else if (getReaction <= -20) then begin
      Reply(306)
      end
      else begin
      zReply(301)
      end
   end
   else begin
      if (getReaction <= 0) then begin
      Reply(306)
      end
      else begin
      Reply(300)
      end
   end

   //--- квестовая линейка
   if (getQuest(GVAR_PHENIX_QST_CULT_A) == qStart) then begin
   NAnswer(550,1,NodeQst100)
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_B) == qStart) then begin
   NAnswer(600,1,NodeQst200)
   end
   if (getQuest(GVAR_PHENIX_QST_CULT_C) == qStart) then begin
   NAnswer(630,1,NodeQst300)
   end

   //--- про Виллу
   NAnswer(400,1,NodeVilla)

   //--- расспросы
   if (local_var(LVAR_Dude_Knowing) < 2) then begin
   NAnswer(310,1,NodeAnswer)
   end else begin
   NAnswer(311,1,NodeAnswer)
   end

   //--- стать послушником
   if (global_var(GVAR_TITUL_PHENIX_CULT) == 0) then begin
   if (global_var(GVAR_PHENIX_CULT_PREVTITUL) == 0) then begin
   NAnswer(500,1,NodeFollower)
   end
   end

   //--- привет от БС
   if (local_var(LVAR_Dude_Knowing) < 2) then begin
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   GAnswer(223,1,NodeFstDialog104)
   end
   end

   NAnswer(309,1,NodeSndDialog2)
end

procedure NodeSndDialog2 begin
   if (getReaction>0) then begin
   call NodeSndDialog2a;
   end
   else begin
   call NodeSndDialog2b;
   end
end

procedure NodeSndDialog2a begin
   Reply(307)
   NAnswer(308,1,Node999)
end

procedure NodeSndDialog2b begin
   Reply(318)
   NAnswer(319,1,Node999)
end

//--- КВЕСТ ПЕРВЫЙ

procedure NodeQst100 begin
   Reply(551)
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 5) then begin
   NAnswer(555,1,NodeQst102)
   end
   if (global_var(GVAR_PHENIX_QST_CULT_A_BIT) == 10) then begin
      if (map_var(MVAR_PNX_CULT_SPY_SHRIFT) > 0) then begin
      NAnswer(570,1,NodeQst105)
      end
      else if ((map_var(MVAR_PNX_CULT_SPY_BOOKS) != 0) and (map_var(MVAR_PNX_CULT_SPY_RADIO) != 0)) then begin
      NAnswer(570,1,NodeQst105)
      end
   end
   NAnswer(552,1,NodeQst101)
end

procedure NodeQst101 begin
   Reply(553)
   NAnswer(554,1,Node999)
end

procedure NodeQst102 begin
   Reply(556)
   NAnswer(557,4,NodeQst103)
   BAnswer(563,1,NodeQst103)
end

procedure NodeQst103 begin
   Reply(558)
   NAnswer(559,1,NodeQst104)
end

procedure NodeQst104 begin
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,10);
   Reply(560)
   NAnswer(561,1,Node999)
   BAnswer(562,1,Node999)
end

procedure NodeQst105 begin
   setQuest(GVAR_PHENIX_QST_CULT_A,qEnd);
   setQuest(GVAR_PHENIX_QST_CULT_B,qStart);
   set_global_var(GVAR_PHENIX_QST_CULT_A_BIT,20);
   setBonusReaction(15)
   exp_add(1000);
   Reply(571)
   NAnswer(572,1,NodeQst106)
   NAnswer(573,1,NodeQst106)
end

procedure NodeQst106 begin
   Reply(574)
   NAnswer(575,1,NodeQst107)
end

procedure NodeQst107 begin
   Reply(576)
   NAnswer(577,1,NodeQst108)
   BAnswer(590,1,NodeQst108)
end

procedure NodeQst108 begin
   zReply(578)
   GAnswer(579,1,NodeQst109)
   NAnswer(580,1,NodeQst109)
end

procedure NodeQst109 begin
   Reply(581)
   NAnswer(582,1,NodeQst110)
   NAnswer(584,1,NodeQst111)
   NAnswer(586,1,NodeQst112)
   NAnswer(588,1,Node999)
end

procedure NodeQst110 begin
   Reply(583)
   NAnswer(584,1,NodeQst111)
   NAnswer(586,1,NodeQst112)
   NAnswer(588,1,Node999)
end

procedure NodeQst111 begin
   Reply(585)
   NAnswer(589,1,NodeQst110)
   NAnswer(586,1,NodeQst112)
   NAnswer(588,1,Node999)
end

procedure NodeQst112 begin
   Reply(587)
   NAnswer(589,1,NodeQst110)
   NAnswer(584,1,NodeQst111)
   NAnswer(588,1,Node999)
end

procedure NodeQst200 begin
   Reply(601)
   if (global_var(GVAR_PHENIX_STATUS_MARCOS) < 0) then begin
   NAnswer(603,1,NodeQst201)
   end
   else if (gvar_bit(GVAR_DIALOGS_FLAGS_BIT, bit_13) != 0) then begin
   NAnswer(608,1,NodeQst201)
   end
   NAnswer(602,1,Node999)
end

procedure NodeQst201 begin
   PLAY_FADE
   setQuest(GVAR_PHENIX_QST_CULT_B,qEnd);
   setQuest(GVAR_PHENIX_QST_CULT_C,qStart);
   set_global_var(GVAR_PHENIX_STATUS_MARCOS, -1);
   setQuest(GVAR_PHENIX_PARTY_QST_A,qStop);
   setQuest(GVAR_PHENIX_PARTY_QST_B,qStop);
   setBonusReaction(35)
   exp_add(1000);

   Reply(604)
   NAnswer(605,1,NodeQst202)
end

procedure NodeQst202 begin
   Reply(606)
   NAnswer(607,1,NodeQst203)
end

procedure NodeQst203 begin
   if ((local_var(LVAR_SBrahmin_Qst)>0) and (getQuest(GVAR_PHENIX_QST_CULT_C) == qStart)) then begin
   zReply(616)
   NAnswer(617,1,NodeQst300)
   end
   else begin
   Reply(609)
   NAnswer(610,1,NodeQst204)
   end
end

procedure NodeQst204 begin
   Reply(611)
   NAnswer(612,1,NodeQst205)
end

procedure NodeQst205 begin
   item_add(dude_obj,PID_BOOTLE_CAPS,350)
   Reply(613)
   GAnswer(614,1,NodeQst206)
   NAnswer(615,1,Node999)
end

procedure NodeQst206 begin
   setBonusReaction(10)
   call Node999;
end

//--- КВЕСТ ТРЕТИЙ

procedure NodeQst300 begin
   Reply(631)

   /*
   ? расспросы про ситуацию в СБрамин + интересы Собора там + отношение с рейнджерами и племенем
   (впрочем это может быть избыточным и спойлерным)
   */

   /*
   if (bitDialog(bit_9) != 0) then begin
   if (global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO)<0) then begin
   if (global_var(GVAR_BRAHMIN_STATUS_RANGER)!=0) then begin
   if (getQuest(GVAR_BRAHMIN_QST_RANGER) <= qZero) then begin
   GAnswer(660,1,NodeQst310)
   end
   end
   end
   end
   */

   if (bitDialog(bit_9) != 0) then begin
   if (global_var(GVAR_BRAHMIN_STATUS_HEAD_GERONIMO)<0) then begin
   GAnswer(660,1,NodeQst310)
   end
   end

   if (getQuest(GVAR_BRAHMIN_QST_RANGER) >= qEnd) then begin
   BAnswer(656,1,NodeQst309)
   end
   else if (getQuest(GVAR_BRAHMIN_QST_GERONIMO) >= 20) then begin
   BAnswer(656,1,NodeQst309)
   end
   else if (getQuest(GVAR_BRAHMIN_QST_COMMANDER) >= qEnd) then begin
   zGAnswer(636,1,NodeQst301)
   end
   else if (getQuest(GVAR_BRAHMIN_QST_COMMANDER) <= qStop) then begin
   BAnswer(650,1,NodeQst307)
   end
   else if (global_var(GVAR_BRAHMIN_STATUS_COMMANDER)<0) then begin
   BAnswer(650,1,NodeQst307)
   end

   //NAnswer(633,1,NodeQst301) //!!! чит
   NAnswer(632,1,Node999)
end

procedure NodeQst301 begin
   Reply(637)
   GAnswer(638,1,NodeQst302)
   NAnswer(639,1,NodeQst303)
end

procedure NodeQst302 begin
   setBonusReaction(10)
   call NodeQst303;
end

procedure NodeQst303 begin
   if (global_var(GVAR_BRAHMIN_STATUS_COMMANDER)<0) then begin
   call NodeQst304;
   end
   else begin
   Reply(640)
   GAnswer(641,1,NodeQst304)
   NAnswer(642,1,NodeQst304)
   end
end

procedure NodeQst304 begin
   setQuest(GVAR_PHENIX_QST_CULT_C,qEnd);

   set_local_var(LVAR_Dude_Knowing,3);
   set_gvar_bit_on(GVAR_RADIO_FLAGS_BIT, bit_4);
   if (getQuest(GVAR_PHENIX_CULT_ARON_DOPUSK) == qZero) then begin
   setQuest(GVAR_PHENIX_CULT_ARON_DOPUSK,qStart);
   end

   item_add(dude_obj,PID_KEY_PHENIX_CULT,1)
   item_add(dude_obj,PID_ARMOR_PURPLE_ROBE_B,1)
   //крышки?
   exp_add(2500);
   set_REP(30)
   setBonusReaction(75)

   if (global_var(GVAR_TITUL_ARIZONA_RANGER)>0) then begin
   display_mstr(103);
   set_global_var(GVAR_TITUL_ARIZONA_RANGER,0);
   end

   //? стоит ли делать дополнительные проверки на свершения ГГ ? (взрыв шахты флагпула, ситуация с ИИ в тусане, смерть священника флагпула, взрыв пуэрто)
   set_global_var(GVAR_TITUL_PHENIX_CULT,1);
   display_mstr(104);


   Reply(643)
   NAnswer(644,1,NodeQst305)
end

procedure NodeQst305 begin
   Reply(645)
   NAnswer(646,1,NodeQst306)
end

procedure NodeQst306 begin
   Reply(647)
   NAnswer(648,1,Node999)
end

procedure NodeQst307 begin
   Reply(651)
   NAnswer(652,1,NodeQst308)
   NAnswer(653,1,NodeQst308)
end

procedure NodeQst308 begin
   bitDialogExp(bit_9,0)
   Reply(654)
   NAnswer(655,1,Node999)
end

procedure NodeQst309 begin
   Reply(657)
   NAnswer(658,1,NodeQst308)
   NAnswer(659,1,NodeQst308)
end

procedure NodeQst310 begin
   Reply(661)
   NAnswer(662,1,NodeQst311)
end

procedure NodeQst311 begin
   setQuest(GVAR_PHENIX_QST_CULT_C,qEnd);

   set_local_var(LVAR_Dude_Knowing,3);
   set_gvar_bit_on(GVAR_RADIO_FLAGS_BIT, bit_4);
   if (getQuest(GVAR_PHENIX_CULT_ARON_DOPUSK) == qZero) then begin
   setQuest(GVAR_PHENIX_CULT_ARON_DOPUSK,qStart);
   end

   item_add(dude_obj,PID_KEY_PHENIX_CULT,1)
   exp_add(1500);
   set_REP(15)
   setBonusReaction(-25)

   Reply(663)
   NAnswer(664,1,Node999)
end


//--- РАССПРОСЫ

procedure NodeAnswer begin
   if ((getReaction >= 25) or (local_var(LVAR_Dude_Knowing) >= 2) or (dude_charisma >= 8)) then begin
   call NodeAnswer200;
   end
   else if ((global_var(GVAR_TITUL_PHENIX_CULT) > 0) or (global_var(GVAR_TITUL_BOS) > 0)) then begin
   call NodeAnswer200;
   end
   else begin
   Reply(320)
   GAnswerSkill(324,3,NodeAnswer200,SKILL_CONVERSANT,35,324,NodeAnswer200b)
   NAnswer(321,1,NodeAnswer101)
   zGAnswer(322,1,NodeSndDialog2)
   NAnswer(323,1,NodeAnswer101a)
   end
end

procedure NodeAnswer101 begin
   Reply(330)
   NAnswer(331,1,NodeVilla)
   BAnswer(332,1,NodeAnswer101b)
   NAnswer(339,1,NodeAnswer101a)
end

procedure NodeAnswer101a begin
   Reply(333)
   NAnswer(334,1,Node999)
   GAnswer(335,1,Node999)
end

procedure NodeAnswer101b begin
   Reply(336)
   BAnswer(337,1,Node998)
   NAnswer(338,1,Node998)
end

procedure NodeAnswer200 begin
   Reply(340)
   NAnswer(342,1,NodeAnswer201)
   NAnswer(343,1,NodeAnswer300)
   NAnswer(341,1,NodeVilla)
   NAnswer(344,1,NodeSndDialog2)
end

procedure NodeAnswer200b begin
   Reply(345)
   NAnswer(346,1,Node999)
   BAnswer(347,1,Node999)
end

procedure NodeAnswer201 begin
   call NodeAnswer202;
end

procedure NodeAnswer202 begin
   if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   Reply(350)
   end
   else begin
   Reply(351)
   end
   NAnswer(352,1,NodeAnswer203)
end

procedure NodeAnswer203 begin
   Reply(353)
   NAnswer(354,3,NodeAnswer210)
   BAnswer(368,3,NodeAnswer301)
   NAnswer(355,1,NodeAnswer216)
end

procedure NodeAnswer210 begin
   Reply(356)
   NAnswer(357,1,NodeAnswer211)
end

procedure NodeAnswer211 begin
   Reply(358)
   NAnswer(359,1,NodeAnswer212)
end

procedure NodeAnswer212 begin
   Reply(360)
   NAnswer(365,1,NodeAnswer212b)
   NAnswer(361,1,NodeAnswer213)
   NAnswer(363,1,NodeAnswer214)
end

procedure NodeAnswer212b begin
   bitDialogExp(bit_3,10)
   Reply(366)
   NAnswer(361,1,NodeAnswer213)
   NAnswer(363,1,NodeAnswer214)
end

procedure NodeAnswer213 begin
   bitDialogExp(bit_4,10)
   Reply(362)
   NAnswer(367,1,NodeAnswer215)
   NAnswer(363,1,NodeAnswer214)
end

procedure NodeAnswer214 begin
   bitDialogExp(bit_5,10)
   Reply(364)
   NAnswer(367,1,NodeAnswer215)
   NAnswer(361,1,NodeAnswer213)
end

procedure NodeAnswer215 begin
   bitDialogExp(bit_6,30)
   Reply(370)

   if (local_var(LVAR_Villa_Knowing) > 0) then begin
   NAnswer(375,1,NodeVilla)
   end else begin
   NAnswer(374,1,NodeVilla)
   end
   if (global_var(GVAR_TITUL_PHENIX_CULT) == 0) then begin
   if (local_var(LVAR_Dude_Knowing) < 3) then begin
   GAnswer(371,1,NodeFollower)
   end
   end
   BAnswer(372,1,NodeAnswer101b)
   NAnswer(380,1,NodeAnswer300)
   NAnswer(373,1,NodeAnswer216)
end

procedure NodeAnswer216 begin
   call NodeSndDialog2;
end

procedure NodeAnswer300 begin
   Reply(381)
   BAnswer(384,3,NodeAnswer301)
   NAnswer(382,1,NodeAnswer201)
   GAnswer(383,1,NodeSndDialog2)
end

procedure NodeAnswer301 begin
   Reply(385)
   NAnswer(386,1,NodeAnswer302)
end

procedure NodeAnswer302 begin
   bitDialogExp(bit_7,30)
   Reply(387)
   NAnswer(388,1,NodeAnswer201)
   BAnswer(389,1,NodeAnswer101b)
   NAnswer(390,1,NodeSndDialog2)
end

//--- ВСТУПИТЬ В ЦЕРКОВЬ

procedure NodeFollower begin
   if (local_var(LVAR_Dude_Knowing) == 1) then begin
   zReply(512)
   end
   else begin
   Reply(501)
   end

   NAnswerSkill(508,1,NodeFollower200,SKILL_CONVERSANT,70,522,NodeFollower102)

   if (getQuest(GVAR_PHENIX_CULT_OWR_DOPUSK) > qZero) then begin
   GAnswer(513,1,NodeFollower200)
   end
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   GAnswer(514,1,NodeFollower200)
   end
   if (item_amnt(dude_obj,PID_LETTER_CULT_FLAGSTAFF) > 0) then begin
   GAnswer(515,1,NodeFollower103)
   end
   if ((global_var(GVAR_VAULT27_STATUS_MERC) == 2) and (global_var(GVAR_VAULT27_GO_MERC) == 0)) then begin
   GAnswer(520,1,NodeFollower200)
   end
   if (global_var(GVAR_PHENIX_STATUS_CULT_BIBL)>0) then begin
   GAnswer(521,1,NodeFollower200)
   end
   if ((global_var(GVAR_BRAHMIN_STATUS_COMMANDER)>=0) and (getQuest(GVAR_BRAHMIN_QST_COMMANDER) >= qEnd)) then begin
   GAnswer(523,1,NodeFollower200b)
   end

   NAnswer(502,1,NodeFollower100)
end

procedure NodeFollower100 begin
   Reply(503)
   //NAnswer(505,1,NodeFollower101)
   NAnswer(504,1,NodeSndDialog2a)
   BAnswer(519,1,NodeSndDialog2b)
end

/*
procedure NodeFollower101 begin
   !!! проверочный квест
   Reply(506)
   NAnswer(507,1,Node999)
end
*/

procedure NodeFollower102 begin
   Reply(509)
   NAnswer(511,1,NodeFollower)
   NAnswer(510,1,NodeSndDialog2a)
   BAnswer(519,1,NodeSndDialog2b)
end

procedure NodeFollower103 begin
   item_remove(dude_obj, PID_LETTER_CULT_FLAGSTAFF, 1)
   if (global_var(GVAR_PHENIX_CULT_LETTER) != 1) then begin
   Reply(516)
   NAnswer(517,1,Node999)
   end
   else begin
   call NodeFollower200;
   end
end

procedure NodeFollower200 begin
   set_global_var(GVAR_PHENIX_CULT_PREVTITUL,1);
   item_remove(dude_obj, PID_LETTER_CULT_FLAGSTAFF, 1)

   Reply(530)
   if (getQuest(GVAR_PHENIX_QST_CULT_A) == qZero) then begin
   NAnswer(531,1,NodeFollower201)
   end
   else begin
   NAnswer(536,1,Node999)
   end
end

procedure NodeFollower200b begin
   set_local_var(LVAR_SBrahmin_Qst, 1);
   call NodeFollower200;
end

procedure NodeFollower201 begin
   setQuest(GVAR_PHENIX_QST_CULT_A,qStart);
   Reply(532)
   NAnswer(533,1,NodeFollower202)
end

procedure NodeFollower202 begin
   Reply(534)
   NAnswer(535,1,Node999)
   NAnswer(536,1,Node999)
end

//--- ВИЛЛА

procedure NodeVilla begin
   if (getReaction>=50) then begin
   Reply(404)
   NAnswer(405,1,NodeVilla3)
   end
   else if (local_var(LVAR_Villa_Knowing) == 0) then begin
   Reply(404)
   NAnswer(405,1,NodeVilla2)
   end
   else begin
   call NodeVilla301;
   end
end

procedure NodeVilla2 begin
   if (local_var(LVAR_Dude_Knowing) == 0) then begin
   set_local_var(LVAR_Dude_Knowing,1);
   end
   Reply(406)
   BAnswer(407,1,NodeVilla100)
   NAnswer(420,1,NodeVilla110)
   if (getQuest(GVAR_MAIN_QUEST_PHENIX) == qStart) then begin
   NAnswer(430,1,NodeVilla200)
   end
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   NAnswer(424,3,NodeVilla400)
   end
end

procedure NodeVilla3 begin
   if (local_var(LVAR_Dude_Knowing) == 0) then begin
   set_local_var(LVAR_Dude_Knowing,1);
   end
   Reply(436)
   NAnswer(437,1,NodeVilla4)
end

procedure NodeVilla4 begin
   Reply(438)
   NAnswer(453,1,NodeVilla302)
end

procedure NodeVilla100 begin
   Reply(408)
   NAnswer(409,1,NodeVilla101)
end

procedure NodeVilla101 begin
   Reply(410)
   NAnswer(411,1,NodeVilla102)
   NAnswer(419,1,NodeVilla102)
end

procedure NodeVilla102 begin
   if (bitDialog(bit_2) == 0) then begin
   Reply(412)
   GAnswer(413,1,NodeMoveTwoSun)
   zBAnswer(414,1,NodeVilla103)
   end
   else begin
   call NodeSndDialog2;
   end
end

procedure NodeVilla103 begin
   if (bitDialog(bit_2) != 0) then begin
   call NodeSndDialog2;
   end
   else if (global_var(GVAR_TITUL_PHENIX_CULT) > 0) then begin
   call NodeSndDialog2;
   end
   else if (global_var(GVAR_PHENIX_CULT_PREVTITUL) > 0) then begin
   call NodeSndDialog2;
   end
   else if (local_var(LVAR_Dude_Knowing) > 2) then begin
   call NodeSndDialog2;
   end
   else if (local_var(LVAR_Dude_Knowing) == 2) then begin
   Reply(433)
   NAnswer(434,1,Node999)
   BAnswer(435,1,Node999)
   end
   else if (global_var(GVAR_TITUL_BOS) > 0) then begin
   Reply(417)
   NAnswer(418,1,Node999)
   end
   else begin
   zReply(416)
   NAnswer(423,1,NodeVilla102)
   BAnswer(428,1,Node998)
   BAnswer(429,1,Node998)
   end
end

procedure NodeVilla110 begin
   Reply(421)
   BAnswer(427,3,NodeVilla111)
   if (global_var(GVAR_TITUL_BOS) > 0) then begin
   NAnswer(424,3,NodeVilla400)
   end
   NAnswer(422,1,Node999)
end

procedure NodeVilla111 begin
   call NodeVilla300;
end

procedure NodeVilla200 begin
   Reply(431)
   NAnswer(432,1,NodeVilla201)
end

procedure NodeVilla201 begin
   call NodeVilla300;
end

procedure NodeVilla300 begin
   Reply(450)
   NAnswer(453,1,NodeVilla302)
end

procedure NodeVilla301 begin
   Reply(452)
   NAnswer(453,1,NodeVilla302)
end

procedure NodeVilla302 begin
   if (local_var(LVAR_Dude_Knowing) == 0) then begin
   set_local_var(LVAR_Dude_Knowing,1);
   end
   if (local_var(LVAR_Villa_Knowing) == 0) then begin
   set_local_var(LVAR_Villa_Knowing,1);
   end
   if (getQuest(GVAR_MAIN_QUEST_PHENIX) < qEnd) then begin
   setQuest(GVAR_MAIN_QUEST_PHENIX,qEnd);
   end
   if (getQuest(GVAR_MAIN_QUEST_FLAGSTAFF) < qStart) then begin
   setQuest(GVAR_MAIN_QUEST_FLAGSTAFF,qStart);
   end
   if (getQuest(GVAR_MAIN_QUEST_TWOSUN) < qStart) then begin
   setQuest(GVAR_MAIN_QUEST_TWOSUN,qStart);
   end

   Reply(454)
   NAnswer(460,1,NodeVilla310)
   NAnswer(466,1,NodeVilla320)
   NAnswer(482,1,NodeVilla330)
end

procedure NodeVilla310 begin
   if (bitDialog(bit_2) == 0) then begin
   Reply(461)
   end
   else begin
   Reply(459)
   end
   NAnswer(462,1,NodeVilla311)
end

procedure NodeVilla311 begin
   Reply(463)
   NAnswer(466,1,NodeVilla320)
   BAnswer(464,1,NodeVilla103)
   NAnswer(465,1,NodeVilla103)
end

procedure NodeVilla320 begin
   Reply(467)
   NAnswer(468,1,NodeVilla321)
   if (town_known(AREA_FLAGSTAFF) >= MARK_STATE_VISITED) then begin
   NAnswer(473,1,NodeVilla323)
   end
end

procedure NodeVilla321 begin
   Reply(469)
   NAnswer(470,1,NodeVilla322)
end

procedure NodeVilla322 begin
   Reply(471)
   if (town_known(AREA_FLAGSTAFF) >= MARK_STATE_VISITED) then begin
   NAnswer(472,1,NodeVilla323)
   end
   NAnswer(478,1,NodeVilla310)
   NAnswer(483,1,NodeVilla330)
   BAnswer(480,1,NodeVilla103)
   NAnswer(481,1,NodeVilla103)
end

procedure NodeVilla323 begin
   if (global_var(GVAR_STATUS_FLAGSTAFF_FABER) < 0) then begin
   Reply(477)
   end
   else begin
   Reply(474)
   end
   NAnswer(478,1,NodeVilla310)
   NAnswer(483,1,NodeVilla330)
   BAnswer(475,1,NodeVilla103)
   NAnswer(476,1,NodeVilla103)
end

procedure NodeVilla330 begin
   Reply(484)
   NAnswer(485,1,NodeVilla331)
end

procedure NodeVilla331 begin
   Reply(486)
   NAnswer(489,1,NodeVilla332)
   NAnswer(491,1,NodeVilla310)
   NAnswer(492,1,NodeVilla320)
   BAnswer(487,1,NodeVilla103)
   NAnswer(488,1,NodeVilla103)
end

procedure NodeVilla332 begin
   Reply(490)
   NAnswer(491,1,NodeVilla310)
   NAnswer(492,1,NodeVilla320)
   BAnswer(487,1,NodeVilla103)
   NAnswer(488,1,NodeVilla103)
end

procedure NodeVilla400 begin
   if (local_var(LVAR_Dude_Knowing) < 2) then begin
   set_local_var(LVAR_Dude_Knowing,2);
   end
   Reply(425)
   NAnswer(426,1,NodeVilla300)
end
