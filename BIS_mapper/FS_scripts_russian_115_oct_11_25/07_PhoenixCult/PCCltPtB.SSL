#include "..\headers\define.h"
//--------------------- Лидер партизан во время осады собора

#define NAME                            SCRIPT_PCCltPtB
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_PLAYER           // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_GUARDS             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_GOOD         // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      65 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog2;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       art_change_fid_num(self_obj, FID_NMLTHR);

       if ((getQuest(GVAR_PHENIX_PARTY_ATTAKTOAARON) >= qZero) and (getQuest(GVAR_PHENIX_PARTY_QST_B) == qStart) and (global_var(GVAR_PHENIX_STATUS_MARCOS) == 0)) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_MARCOS, -2);
   setQuest(GVAR_PHENIX_PARTY_QST_B,qStop);
   setQuest(GVAR_PHENIX_PARTY_ATTAKTOAARON,qStop);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (getQuest(GVAR_PHENIX_PARTY_QST_B) >= qEnd) then begin
   floater(self_obj,102,COLOR_MSG_GREEN);
   end
   else begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (getQuest(GVAR_PHENIX_PARTY_ATTAKTOAARON) == qZero) then begin
      call NodeFstDialog;
   end
   else begin
      call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   Reply(200)
   if (global_var(GVAR_PHENIX_MATIAS_NONATTAK) > 0) then begin
   NAnswer(202,1,NodeFstDialog2)
   end
   else if ((global_var(GVAR_PHENIX_QST_CULT_A_BIT) >= 20) or (global_var(GVAR_PHENIX_MATIAS_NONATTAK) > 0)) then begin
   NAnswer(209,1,NodeFstDialog2)
   end
   else begin
   NAnswer(205,1,NodeFstDialog3)
   end
   NAnswer(201,1,Node999)
end

procedure NodeFstDialog2 begin
   setQuest(GVAR_PHENIX_PARTY_ATTAKTOAARON, qStart);
   set_local_var(LVAR_Home_Tile, 11702);
   set_local_var(LVAR_Home_Rotat, 5);
   Reply(203)
   NAnswer(204,1,Node999)
end

procedure NodeFstDialog3 begin
   Reply(206)
   NAnswer(208,1,NodeFstDialog2)
   NAnswer(207,1,Node999)
end

procedure NodeSndDialog begin
   Reply(210)
   if ((global_var(GVAR_PHENIX_STATUS_CULT_AARON)<0) and (global_var(GVAR_PHENIX_STATUS_CULT_OVRSR)<0)) then begin
   NAnswer(212,1,NodeSndDialog2)
   end
   NAnswer(211,1,Node999)
end

procedure NodeSndDialog2 begin
   setQuest(GVAR_PHENIX_PARTY_ATTAKTOAARON, qEnd);
   setQuest(GVAR_PHENIX_PARTY_QST_B, qEnd);
   exp_add(1000);
   set_REP(10)

   //!!! просьба достать взрыватели (а если они уже установлены?)

   Reply(213)
   NAnswer(214,1,Node999)
end
