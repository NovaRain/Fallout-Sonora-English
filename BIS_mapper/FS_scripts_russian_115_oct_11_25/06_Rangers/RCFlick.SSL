#include "..\headers\define.h"
#include "..\headers\rangers.h"
//---------------------

#define NAME                            SCRIPT_RCFlick
#define TOWN_REP_VAR                    GVAR_TOWN_REP_CARAVAN_FLICK   // привязка к репутации (-1, если не нужно)
#define BOX_TILE                        11  // номер тайла с личным товарным ящиком (0 или меньше, если не надо; не может совпадать с чужими ящиками на одной локации!)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_DRIVER     // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      60 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure setBarterA;
procedure setBarterB;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeStartDialog2;
procedure NodeQstFstDialog;
procedure NodeQstFstDialog2;
procedure NodeQstFstDialog3;
procedure NodeQstSndDialog;
procedure NodeQstSndDialog2;
procedure NodeQstSndDialog3;
procedure NodeQstSndDialog4;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeStopDialog;
procedure NodeStopDialog2;
procedure NodeStopDialog3;
procedure NodeSndDialog;
procedure NodeAnswer;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer200;
procedure NodeAnswer201;
procedure NodeAnswer300;
procedure NodeAnswer301;
procedure NodeAnswer302;
procedure NodeAnswer400;
procedure NodeAnswer401;
procedure NodeAnswer402;
procedure NodeAnswer403;
procedure NodeAnswer404;

//---------------------

//#define LVAR_Flag_A                     (8) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (cur_map_index == MAP_RANGERS_BASA) then begin
       set_BarterBoxProc(ONE_GAME_WEEK)
       end
       Flick_Visible
   end
end

procedure map_update_p_proc begin
   if (cur_map_index == MAP_RANGERS_ROAD) then begin
      if ((global_var(GVAR_RANGERS_QST_MOR_STATUS) == 2) and (item_amnt(self_obj,PID_M_NUKA_COLA_RAD) <= 0)) then begin
      display_mstr(103);
      set_global_var(GVAR_RANGERS_QST_MOR_STATUS,3);
      end
   end
end

procedure setBarterA begin
        //- крышки
        check_restock_many(260,320)
end

procedure setBarterB begin
   //! пока пусто
   set_BarterDopusk;
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_STATUS_RANGERS_FLICK,cur_map_index);
   kill_critter_opt
   kill_critter_box
end

procedure talk_p_proc begin
   setReaction(-1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (cur_map_index == MAP_RANGERS_ROAD) then begin
      if (global_var(GVAR_RANGERS_QST_MOR_STATUS) > 2) then begin
      floater(self_obj,102,COLOR_MSG_NORMAL);
      end
      else begin
      dialog_proc(0,0,NodeStartDialog2,-1,-1)
      end
   end
   else if (cur_map_index == MAP_RANGERS_BASA) then begin
      dialog_proc_barter(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((bitDialog(bit_6) == 0) and (getQuest(GVAR_RANGERS_DUMB_DESTROY) >= qEnd)) then begin
   call NodeStopDialog;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

procedure NodeStartDialog2 begin
   gdialog_set_barter_mod(200);
   if (bitDialog(bit_1) == 0) then begin
   call NodeQstFstDialog;
   end
   else begin
   call NodeQstSndDialog;
   end
end

//--- ДИАЛОГ НА КАРТЕ ДОРОГИ

procedure NodeQstFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(300)
   NAnswer(301,1,NodeQstFstDialog2)
end

procedure NodeQstFstDialog2 begin
   Reply(302)
   NAnswer(303,1,NodeQstFstDialog3)
end

procedure NodeQstFstDialog3 begin
   Reply(304)
   NAnswer(305,1,Node999)
end

procedure NodeQstSndDialog begin
   Reply(310)
   NAnswer(312,1,NodeQstSndDialog2)
   BAnswer(316,1,NodeQstSndDialog3)
   NAnswer(311,1,Node999)
end

procedure NodeQstSndDialog2 begin
   Reply(313)
   NAnswer(314,1,NodeQstSndDialog4)
end

procedure NodeQstSndDialog3 begin
   Reply(317)
   BAnswer(318,1,Node998)
   NAnswer(319,1,Node999)
end

procedure NodeQstSndDialog4 begin
   goBarterMod;
   Reply(313)
   NAnswer(315,1,Node999)
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   zReply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   call NodeAnswer;
   NAnswer(203,1,Node999)
end

procedure NodeStopDialog begin
   bitDialogExp(bit_1,0) // дубляж сделан на тот случай, если игрок ни разу не заговорит с персонажем до размыва дамбы
   bitDialogExp(bit_6,0)
   zReply(270)
   NAnswer(271,1,NodeStopDialog2)
end

procedure NodeStopDialog2 begin
   Reply(272)
   NAnswer(273,1,NodeStopDialog3)
end

procedure NodeStopDialog3 begin
   Reply(274)
   NAnswer(275,1,Node999)
   NAnswer(276,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(210)
   call NodeAnswer;
   NAnswer(211,1,Node999)
end

procedure NodeAnswer begin
   NAnswer(220,1,NodeAnswer100)
   NAnswer(230,1,NodeAnswer200)
   NAnswer(240,1,NodeAnswer300)
   if (bitDialog(bit_4) != 0) then begin
      if ((town_known(AREA_QUARTZ) >= MARK_STATE_KNOWN) or (getQuest(GVAR_RANGERS_QST_QUARTZ) > qZero)) then begin
      NAnswer(250,1,NodeAnswer302)
      end
   end
   if (bitDialog(bit_7) == 0) then begin
      if (getQuest(GVAR_RANGERS_DUMB_DESTROY) < qEnd) then begin
      NAnswer(260,1,NodeAnswer400)
      end
   end
end

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(222,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,20)
   Reply(225)
   NAnswer(226,1,NodeSndDialog)
   NAnswer(227,1,Node999)
end

procedure NodeAnswer200 begin
   Reply(231)
   if (town_known(AREA_SAN_BRAHMIN) >= MARK_STATE_VISITED) then begin
   NAnswer(234,4,NodeAnswer201)
   end
   NAnswer(232,1,NodeSndDialog)
   NAnswer(233,1,Node999)
end

procedure NodeAnswer201 begin
   bitDialogExp(bit_3,20)
   Reply(235)
   NAnswer(236,1,NodeSndDialog)
   NAnswer(237,1,Node999)
end

procedure NodeAnswer300 begin
   bitDialogExp(bit_4,10)
   Reply(241)
   NAnswer(242,1,NodeAnswer301)
   NAnswer(243,1,NodeSndDialog)
   NAnswer(244,1,Node999)
end

procedure NodeAnswer301 begin
   Reply(245)
   NAnswer(246,1,NodeSndDialog)
   NAnswer(247,1,Node999)
end

procedure NodeAnswer302 begin
   bitDialogExp(bit_5,10)
   Reply(251)
   NAnswer(252,1,NodeSndDialog)
end

procedure NodeAnswer400 begin
   bitDialogExp(bit_7,20)
   Reply(261)
   NAnswer(262,1,NodeAnswer401)
   NAnswer(265,1,NodeAnswer402)
end

procedure NodeAnswer401 begin
   Reply(263)
   NAnswer(212,1,NodeSndDialog)
   NAnswer(211,1,Node999)
end

procedure NodeAnswer402 begin
   Reply(266)
   NAnswer(267,1,NodeAnswer403)
   NAnswer(269,1,NodeAnswer404)
end

procedure NodeAnswer403 begin
   Reply(268)
   NAnswer(212,1,NodeSndDialog)
   NAnswer(211,1,Node999)
end

procedure NodeAnswer404 begin
   Reply(264)
   NAnswer(212,1,NodeSndDialog)
   NAnswer(211,1,Node999)
end
