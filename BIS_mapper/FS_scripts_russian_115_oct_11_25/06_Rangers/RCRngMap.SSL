#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_RCRngMap
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RANGERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                       TEAM_RANGERS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_RANGER             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_RANGER           // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      40 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeSndDialog;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;
procedure NodeAnswer106;
procedure NodeQuartz;
procedure NodeQuartz101;
procedure NodeQuartz102;
procedure NodeQuartz103;
procedure NodeQuartz104;
procedure NodeQuartz105;
procedure NodeQuartz106;
procedure NodeQuartz107;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

import variable box_stop_use;

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   if (global_var(GVAR_TITUL_ARIZONA_RANGER) <= 0) then begin
   set_using_stop // привязка хозяина и объекта (удалить, если не нужно)
   end
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_gvar_bit_on(GVAR_RANGERS_BIT_FAMILY, bit_13);
   if (getQuest(GVAR_RANGERS_QST_QUARTZMAP) <= qEnd) then begin
   setQuest(GVAR_RANGERS_QST_QUARTZMAP,qZero);
   end
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям

   dialog_proc(0,0,NodeStartDialog,-1,-1)
end

procedure Node998 begin
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,4,NodeSndDialog)
   NAnswer(202,-3,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (bitDialog(bit_2) == 0) then begin
   Reply(213)
   end
   else begin
   Reply(210)
   end

   //--- вопросы
   if (getQuest(GVAR_RANGERS_DUMB_DESTROY) >= qEnd) then begin
      NAnswer(233,4,NodeAnswer106)
   end
      NAnswer(220,4,NodeAnswer100)
   if (bitDialog(bit_2) != 0) then begin
      NAnswer(229,4,NodeAnswer104)
      if (gvar_bit(GVAR_RANGERS_BIT_FAMILY, bit_13) == 0) then begin
      NAnswer(226,4,NodeAnswer103)
      end
   end

   //--- Кварц
   if (getQuest(GVAR_RANGERS_QST_QUARTZMAP) == qZero) then begin
      if (getQuest(GVAR_RANGERS_QST_QUARTZ) > qZero) then begin
      NAnswer(250,4,NodeQuartz)
      NAnswer(276,-3,NodeQuartz)
      end
   end
   if (getQuest(GVAR_RANGERS_QST_QUARTZMAP) == qEnd) then begin
      GAnswer(270,4,NodeQuartz107)
      GAnswer(282,-3,NodeQuartz107)
   end

   NAnswer(211,4,Node999)
   NAnswer(281,-3,Node999)
end

//--- КВАРЦ

procedure NodeQuartz begin
   Reply(251)
   NAnswer(253,4,NodeQuartz101)
   NAnswer(259,4,NodeQuartz103)
   if (getQuest(GVAR_RANGERS_QST_QUARTZMAP) == qZero) then begin
   NAnswer(261,4,NodeQuartz104)
   NAnswer(278,-3,NodeQuartz104)
   end
   NAnswer(252,4,NodeSndDialog)
   NAnswer(277,-3,NodeSndDialog)
end

procedure NodeQuartz101 begin
   mark_on_map(AREA_QUARTZ)
   Reply(254)
   NAnswer(257,4,NodeQuartz102)
   NAnswer(255,4,NodeQuartz)
   NAnswer(256,4,NodeSndDialog)
end

procedure NodeQuartz102 begin
   Reply(258)
   NAnswer(255,4,NodeQuartz)
   NAnswer(256,4,NodeSndDialog)
end

procedure NodeQuartz103 begin
   Reply(260)
   NAnswer(255,4,NodeQuartz)
   NAnswer(256,4,NodeSndDialog)
end

procedure NodeQuartz104 begin
   Reply(262)
   NAnswer(263,4,NodeQuartz105)
   NAnswer(279,-3,NodeQuartz105)
end

procedure NodeQuartz105 begin
   Reply(264)
   NAnswer(265,4,NodeQuartz106)
   NAnswer(266,4,NodeQuartz)
   NAnswer(280,-3,NodeQuartz106)
end

procedure NodeQuartz106 begin
   setQuest(GVAR_RANGERS_QST_QUARTZMAP,qStart);
   Reply(267)
   NAnswer(268,4,NodeQuartz)
   NAnswer(269,4,Node999)
   NAnswer(281,-3,Node999)
end

procedure NodeQuartz107 begin
   setQuest(GVAR_RANGERS_QST_QUARTZMAP,qEnd+1);
   set_gvar_bit_on(GVAR_RANGERS_BIT_FAMILY, bit_13);
   setBonusReaction(50)
   set_REP(3)
   exp_add(500);

   Reply(271)
   zNAnswer(272,4,Node999)
   NAnswer(273,4,Node999)
   NAnswer(283,-3,Node999)
end

//--- ВОПРОСЫ

procedure NodeAnswer100 begin
   Reply(221)
   NAnswer(222,4,NodeAnswer101)
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer101 begin
   Reply(223)
   NAnswer(224,4,NodeAnswer102)
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer102 begin
   bitDialogExp(bit_2,20)
   Reply(225)
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer103 begin
   if (global_var(GVAR_TITUL_ARIZONA_RANGER) > 0) then begin
   set_gvar_bit_on(GVAR_RANGERS_BIT_FAMILY, bit_13);
   Reply(228)
   end
   else begin
   Reply(227)
   end
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer104 begin
   Reply(230)
   NAnswer(231,4,NodeAnswer105)
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer105 begin
   Reply(232)
   NAnswer(212,4,NodeSndDialog)
end

procedure NodeAnswer106 begin
   Reply(234)
   NAnswer(212,4,NodeSndDialog)
end
