#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_RCMhvBos
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RANGERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_BANDITS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_BANDIT             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_BAD        // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_BAD          // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      70 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog100;
procedure NodeFstDialog200;
procedure NodeFstDialog201;
procedure NodeFstDialog202;
procedure NodeFstDialog203;
procedure NodeFstDialog204;
procedure NodeFstDialog300;
procedure NodeFstDialog301;
procedure NodeFstDialog302;
procedure NodeFstDialog303;
procedure NodeFstDialog304;
procedure NodeFstDialog305;
procedure NodeFstDialog306;
procedure NodeFstDialog307;
procedure NodeFstDialog308;
procedure NodeSndDialog;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (getQuest(GVAR_RANGERS_QST_IMMIGRANTS) == qStart) then begin
       set_obj_visibility(self_obj, 0);
       end
       else begin
       rm_timer_event(self_obj);
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(120,121)
   end
end

procedure critter_p_proc begin
   set_critter_options(map_var(MVAR_RNGRS_MohaveEnm),1) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_RNGRS_MohaveEnm,2);
   kill_critter_opt
end

procedure talk_p_proc begin
   if (bitDialog(bit_2) == 0) then begin
   setReaction(-1) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   fracReaction(GVAR_TITUL_ARIZONA_RANGER,-90) // Поправка к отношению за принадлежность к фракциям
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
   else begin
   floater(self_obj,102,COLOR_MSG_RED);
   end
end

procedure Node998 begin
   set_map_var(MVAR_RNGRS_MohaveEnm,2);
   set_enemy_dude;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   BAnswer(201,1,NodeFstDialog2)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(226,5,NodeFstDialog300)
   NAnswer(205,1,NodeFstDialog200)
   BAnswer(206,1,NodeFstDialog100)
end

procedure NodeFstDialog100 begin
   Reply(230)
   NAnswer(232,1,NodeFstDialog200)
   BAnswer(231,1,Node998)
end

procedure NodeFstDialog200 begin
   Reply(210)
   NAnswer(225,5,NodeFstDialog300)
   NAnswerSkill(221,4,NodeFstDialog204,SKILL_CONVERSANT,50,219,NodeFstDialog203)
   NAnswer(211,1,NodeFstDialog201)
   BAnswer(215,1,NodeFstDialog202)
end

procedure NodeFstDialog201 begin
   move_obj_inven_to_obj(dude_obj,self_obj);
   Reply(212)
   BAnswer(214,1,Node998)
   NAnswer(213,1,Node999)
end

procedure NodeFstDialog202 begin
   Reply(216)
   BAnswer(217,1,Node998)
   NAnswer(218,1,NodeFstDialog201)
end

procedure NodeFstDialog203 begin
   Reply(220)
   NAnswer(211,1,NodeFstDialog201)
   BAnswer(215,1,NodeFstDialog202)
end

procedure NodeFstDialog204 begin
   zReply(222)
   NAnswer(223,1,Node999)
   BAnswer(224,1,Node999)
end

procedure NodeFstDialog300 begin
   Reply(240)
   NAnswer(241,1,NodeFstDialog301)
   NAnswer(242,1,NodeFstDialog301)
end

procedure NodeFstDialog301 begin
   Reply(243)
   NAnswer(244,1,NodeFstDialog302)
end

procedure NodeFstDialog302 begin
   Reply(245)
   NAnswer(246,1,NodeFstDialog303)
end

procedure NodeFstDialog303 begin
   Reply(247)
   NAnswerSkill(252,5,NodeFstDialog305,SKILL_CONVERSANT,80,250,NodeFstDialog304)
   NAnswer(249,1,NodeFstDialog203)
   BAnswer(248,1,NodeFstDialog202)
end

procedure NodeFstDialog304 begin
   Reply(251)
   BAnswer(249,1,NodeFstDialog202)
   NAnswer(248,1,NodeFstDialog200)
end

procedure NodeFstDialog305 begin
   Reply(253)
   BAnswer(254,1,Node998)
   NAnswer(255,1,NodeFstDialog306)
end

procedure NodeFstDialog306 begin
   Reply(256)
   NAnswer(257,1,NodeFstDialog307)
   BAnswer(258,1,Node998)
end

procedure NodeFstDialog307 begin
   Reply(259)
   NAnswer(260,1,NodeFstDialog308)
end

procedure NodeFstDialog308 begin
   bitDialogExp(bit_2,200)
   if (item_amnt(self_obj,PID_Q_RANGER_STAR_QST) > 0) then begin
   item_add(dude_obj,PID_Q_RANGER_STAR_QST,1)
   item_remove(self_obj,PID_Q_RANGER_STAR_QST,1)
   end
   Reply(261)
   NAnswer(262,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(300)
   NAnswer(303,5,NodeFstDialog300)
   NAnswer(302,1,NodeFstDialog200)
   BAnswer(301,1,NodeFstDialog100)
end
