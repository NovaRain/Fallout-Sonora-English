#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_RCPostA
#define TOWN_REP_VAR                    GVAR_TOWN_REP_RANGERS // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_RANGERS          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_RANGER             // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_CRITICAL     // репутация за убийство этого персонажа (-100 для враждебности всего поселения)
#define KILL_FRAC_REP                   FRAC_RANGER           // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      100 // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    1  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       1  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeFstDialog4;
procedure NodeFstDialog5;
procedure NodeFstDialog6;
procedure NodeFstDialogOk;
procedure NodeFstDialogNo;
procedure NodeStopDialog10;
procedure NodeStopDialog11;
procedure NodeStopDialog12;
procedure NodeStopDialog13;
procedure NodeStopDialog14;
procedure NodeSndDialog;
procedure NodeSndDialog2;
procedure NodeAnswer100;
procedure NodeAnswer101;
procedure NodeAnswer102;
procedure NodeAnswer103;
procedure NodeAnswer104;
procedure NodeAnswer105;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       set_obj_visibility(self_obj, 0);
       if (getQuest(GVAR_RANGERS_DUMB_DESTROY) >= qEnd) then begin
       set_obj_visibility(self_obj, 1);
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 рарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 рарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
end

procedure critter_p_proc begin
   set_critter_options(1,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,1,1,1) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_map_var(MVAR_RNGRS_PostA,1);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(1) // Отношение к ГГ(1 - персонаж положительный, -1 отрицательный, 0 нейтральный)

   fracReaction(GVAR_TITUL_ARIZONA_RANGER,50) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_BOS_TRAITOR,20) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_PHENIX_CULT,-40) // Поправка к отношению за принадлежность к фракциям
   fracReaction(GVAR_TITUL_WARRIOR_ROAD,-20) // Поправка к отношению за принадлежность к фракциям

   if (((armor_pid_dude_var == PID_ARMOR_PURPLE_ROBE_A) or (armor_pid_dude_var == PID_ARMOR_PURPLE_ROBE_B)) and (global_var(GVAR_RANGERS_DOPUSK_DUM) == 0)) then begin
   floater(self_obj,103,COLOR_MSG_RED);
   end
   else begin
   dialog_proc(1,102,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if ((bitDialog(bit_5) == 0) and (global_var(GVAR_STATUS_RANGERS_FLICK) == cur_map_index)) then begin
      call NodeStopDialog13;
   end
   else if (global_var(GVAR_RANGERS_DOPUSK_DUM) < 1) then begin
      if (bitDialog(bit_1) == 0) then begin
      call NodeFstDialog;
      end
      else begin
      call NodeFstDialog4;
      end
   end
   else begin
      if ((bitDialog(bit_2) == 0) and (armor_pid_dude_var == PID_ARMOR_PURPLE_ROBE_A)) then begin
      call NodeStopDialog10;
      end
      else if ((bitDialog(bit_2) == 0) and (armor_pid_dude_var == PID_ARMOR_PURPLE_ROBE_B)) then begin
      call NodeStopDialog10;
      end
      else if ((bitDialog(bit_3) == 0) and (global_var(GVAR_GARAGE_EUGENE_STATUS) == 1)) then begin
      call NodeStopDialog12;
      end
      else begin
      call NodeSndDialog;
      end
   end
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(202)
   NAnswer(208,1,NodeFstDialog5)
   NAnswer(203,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(204)
   NAnswer(205,1,Node999)
end

procedure NodeFstDialog4 begin
   Reply(206)
   if ((getQuest(GVAR_RANGERS_QST_SPY) > qZero) and (global_var(GVAR_RANGERS_STATUS_SPY) == 0)) then begin
   NAnswer(260,1,NodeSndDialog2)
   end
   NAnswer(217,1,NodeFstDialog5)
   NAnswer(207,1,NodeFstDialog3)
end

procedure NodeFstDialog5 begin
   Reply(209)

   NAnswerSkill(212,1,NodeFstDialogOk,SKILL_CONVERSANT,100,212,NodeFstDialogNo)
   NAnswerSkill(218,1,NodeFstDialogOk,SKILL_BARTER,100,218,NodeFstDialogNo)

   if (gvar_bit(GVAR_RANGERS_RECOMMENDATION, bit_1) != 0) then begin
   NAnswer(230,1,NodeFstDialogOk)
   end
   else if (gvar_bit(GVAR_RANGERS_RECOMMENDATION, bit_2) != 0) then begin
   NAnswer(231,1,NodeFstDialogOk)
   end
   //if (gvar_bit(GVAR_RANGERS_RECOMMENDATION, bit_3) != 0) then begin
   if (getQuest(GVAR_BRAHMIN_QST_RANGER) >= qEnd) then begin
   zNAnswer(232,1,NodeFstDialogOk)
   end
   if (gvar_bit(GVAR_RANGERS_RECOMMENDATION, bit_4) != 0) then begin
   NAnswer(233,1,NodeFstDialogOk)
   end
   if (gvar_bit(GVAR_RANGERS_RECOMMENDATION, bit_5) != 0) then begin
   NAnswer(234,1,NodeFstDialogOk)
   end

   if ((town_known(AREA_PUERTO_STEEL) == MARK_STATE_VISITED) or (town_known(AREA_PUERTO_DESTROY) > MARK_STATE_UNKNOWN)) then begin
   NAnswer(235,1,NodeFstDialogOk)
   end
   else if (item_amnt(dude_obj,PID_HOLODSK_ULISS) >0) then begin
   NAnswer(237,1,NodeFstDialogOk)
   end

   BAnswer(210,1,NodeFstDialog6)
   NAnswer(211,1,Node999)
end

procedure NodeFstDialog6 begin
   Reply(219)
   NAnswer(211,1,Node999)
end

procedure NodeFstDialogOk begin
   set_global_var(GVAR_RANGERS_DOPUSK_DUM,1);
   Reply(214)
   BAnswer(215,1,Node999)
   NAnswer(216,1,Node999)
end

procedure NodeFstDialogNo begin
   Reply(213)
   BAnswer(210,1,Node999)
   NAnswer(211,1,Node999)
end

procedure NodeStopDialog10 begin
   bitDialogExp(bit_2,0)
   Reply(220)
   NAnswer(221,1,NodeStopDialog11)
end

procedure NodeStopDialog11 begin
   Reply(222)
   NAnswer(223,1,Node999)
end

procedure NodeStopDialog12 begin
   bitDialogExp(bit_3,0)
   zReply(224)
   NAnswer(225,1,NodeStartDialog)
   NAnswer(226,1,NodeStartDialog)
end

procedure NodeStopDialog13 begin
   Reply(227)
   NAnswer(228,1,NodeStopDialog14)
end

procedure NodeStopDialog14 begin
   bitDialogExp(bit_5,0)
   zReply(229)
   NAnswer(236,1,Node999)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   Reply(250)

   //--- Шпион у фермеров
   if ((getQuest(GVAR_RANGERS_QST_SPY) > qZero) and (global_var(GVAR_RANGERS_STATUS_SPY) == 0)) then begin
      NAnswer(260,1,NodeSndDialog2)
   end

   //--- Семья преступника
   if (getQuest(GVAR_RANGERS_QST_FAMILY) == qZero) then begin
      if (gvar_bit(GVAR_RANGERS_BIT_FAMILY, bit_4) != 0) then begin
      NAnswer(280,1,NodeAnswer104)
      end
   end

   //--- Про дамбу
   if ((bitDialog(bit_4) == 0) and dude_skill(SKILL_SCOUT,40)) then begin
      NAnswer(270,1,NodeAnswer100)
   end

   NAnswer(251,1,Node999)
end

procedure NodeSndDialog2 begin
   set_global_var(GVAR_RANGERS_STATUS_SPY,-2);
   set_REP(5)
   Reply(261)
   //NAnswer(262,1,Node999)
   NAnswer(263,1,Node999)
end

procedure NodeAnswer100 begin
   bitDialogExp(bit_4,50)
   Reply(271)
   NAnswer(272,1,NodeAnswer101)
end

procedure NodeAnswer101 begin
   Reply(273)
   NAnswer(274,1,NodeAnswer102)
end

procedure NodeAnswer102 begin
   Reply(275)
   BAnswer(277,1,NodeAnswer103)
   NAnswer(276,1,Node999)
end

procedure NodeAnswer103 begin
   setBonusReaction(-10)
   Reply(278)
   NAnswer(279,1,Node999)
end

procedure NodeAnswer104 begin
   Reply(281)
   BAnswer(282,1,NodeAnswer105)
   NAnswer(270,1,NodeAnswer100)
   NAnswer(284,1,Node999)
end

procedure NodeAnswer105 begin
   Reply(283)
   NAnswer(270,1,NodeAnswer100)
   NAnswer(284,1,Node999)
end
