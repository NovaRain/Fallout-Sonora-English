#include "..\headers\define.h"
//---------------------

#define NAME                            SCRIPT_MCMtlBoy
#define TOWN_REP_VAR                    GVAR_TOWN_REP_PHOENIX // привязка к репутации (-1, если не нужно)

#define NUM_TEAM                        TEAM_CARAVAN          // группа, к которой принадлежит персонаж (-1 если нужно оставить Team, заданный в редакторе)
#define NUM_AI                          AI_CARAVAN_GUARD      // AI персонажа (-1 если нужно оставить AI, заданный в редакторе)
#define KILL_SLAVA                      SLAVA_KILL_GOOD       // слава за убийство этого персонажа (SLAVA_KILL_GOOD, SLAVA_KILL_BAD, SLAVA_KILL_NEITRAL, SLAVA_KILL_CHILD)
#define KILL_TOWN_REP                   REP_KILL_NEITRAL      // репутация за убийство этого персонажа (REP_KILL_GOOD, REP_KILL_NEITRAL, REP_KILL_BAD, REP_KILL_CHILD, REP_KILL_CRITICAL)
#define KILL_FRAC_REP                   FRAC_NON              // принадлежность определенной фракции (-1, если не нужно)

#define FLAG_STEAL                      0  // Нижний порог навыка для кражи (для торговцев 200, для животных 300)
#define FLAG_ALCOHOL                    0  // Примет ли алкоголь от ГГ: 0 - принимает, 1 - не принимает
#define FLAG_FOOD                       0  // Примет ли пищу от ГГ: 0 - принимает, 1 - не принимает

//---------------------

procedure start;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure push_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure pickup_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;

procedure Node998;
procedure Node999;
procedure NodeStartDialog;
procedure NodePartyAdd;
procedure NodePartyNon;
procedure NodePartyNon2;
procedure NodeFstDialog;
procedure NodeFstDialog2;
procedure NodeFstDialog3;
procedure NodeSndDialog;
procedure NodeSndDialog2;

//---------------------

//#define LVAR_Flag_A                     (6) // отвечает за ...

//---------------------



procedure start begin
end

procedure map_enter_p_proc begin
   if (is_loading_game == false) then begin
       set_start_home
       if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) != 0) then begin
          rm_timer_event(self_obj);
       end

       if (cur_map_index == MAP_OLD_MOTEL) then begin
          if (global_var(GVAR_GAME_END) != 0) then begin
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
          end
       end
       else begin
          if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) >= 2) then begin
          set_obj_visibility(self_obj, 1);
          destroy_object(self_obj);
          end
          else begin
          add_timer_event(self_obj,3,3);
          end
       end
   end
end

procedure look_at_p_proc begin
   lookProcMsg
end

procedure description_p_proc begin
   dsrptProcMsg
end

procedure timed_event_p_proc begin
   // Таймер за номером 1 зарезервирован под перемещение персонажа по локации
   // Таймер за номером 2 зарезервирован под всплывающие реплики
   if (fixed_param == 1) then begin
       timer_move_to_home
   end
   if (fixed_param == 2) then begin
       //timer_float_reply(110,119)
   end
   if (fixed_param == 3) then begin
       terminate_combat;
       inven_unwield(self_obj);
       move_obj_inven_to_obj(self_obj, dude_obj);
       call NodePartyNon2;
       dialogue_system_enter;
   end
end

procedure critter_p_proc begin
   set_critter_options(0,0) //условие нападения (0 личная вражда, 1 вражда клановая, 2 всегда), разворот к ГГ
   if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) == 1) then begin
   partyRunToDude
   end
end

procedure push_p_proc begin
   if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) != 1) then begin
   script_overrides;
   end
end

procedure use_skill_on_p_proc begin
   skillUseSteal
   skillUseFAid
end

procedure pickup_p_proc begin
   pickupProcCritter
end

procedure use_obj_on_p_proc begin
   UsedItemToCrit_Proc
end

procedure combat_p_proc begin
   effectAttak(0,0,0,0,0) //отравление min, облучение min, травма ног %, травма рук %, травма глаз %
end

procedure damage_p_proc begin
   set_damage_dude
end

procedure destroy_p_proc begin
   set_global_var(GVAR_PHENIX_STATUS_MOTELSLAVE,-1);
   kill_critter_opt
end

procedure talk_p_proc begin
   setReaction(0) // Отношение к ГГ (1 - персонаж положительный, -1 отрицательный, 0 нейтральный)
   if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) == 2) then begin
   floater(self_obj,102,COLOR_MSG_NORMAL);
   end
   else begin
   dialog_proc(0,0,NodeStartDialog,-1,-1)
   end
end

procedure Node998 begin
   setNodeCombat;
end

procedure Node999 begin
end

procedure NodeStartDialog begin
   if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) != 0) then begin
   bitDialogExp(bit_1,0)
   end

   if (cur_map_index != MAP_OLD_MOTEL) then begin
   call NodeSndDialog2;
   end
   else if (bitDialog(bit_1) == 0) then begin
   call NodeFstDialog;
   end
   else begin
   call NodeSndDialog;
   end
end

//--- ПАРТИЯ

procedure NodePartyAdd begin
   set_global_var(GVAR_PHENIX_STATUS_MOTELSLAVE,1);
   rm_timer_event(self_obj);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,TEAM_PLAYER);
   party_add(self_obj);
   call Node999;
end

procedure NodePartyNon begin
   call NodePartyNon2;
   call Node999;
end

procedure NodePartyNon2 begin
   set_global_var(GVAR_PHENIX_STATUS_MOTELSLAVE,0);
   rm_timer_event(self_obj);
   party_remove(self_obj);
   critter_add_trait(self_obj,TRAIT_OBJECT,OBJECT_TEAM_NUM,NUM_TEAM);
end

//--- ПЕРВЫЙ ДИАЛОГ

procedure NodeFstDialog begin
   bitDialogExp(bit_1,0)
   Reply(200)
   NAnswer(201,1,NodeFstDialog2)
   NAnswer(202,1,NodeFstDialog2)
end

procedure NodeFstDialog2 begin
   Reply(203)
   NAnswer(204,1,NodeFstDialog3)
end

procedure NodeFstDialog3 begin
   Reply(205)
   NAnswer(206,1,NodeSndDialog)
end

//--- ПОВТОРНЫЙ ДИАЛОГ

procedure NodeSndDialog begin
   if (global_var(GVAR_PHENIX_STATUS_MOTELSLAVE) == 0) then begin
   Reply(210)
   NAnswer(212,1,NodePartyAdd)
   NAnswer(211,1,Node999)
   end
   else begin
   Reply(213)
   NAnswer(215,1,NodePartyNon)
   NAnswer(214,1,Node999)
   end
end

procedure NodeSndDialog2 begin
   set_global_var(GVAR_PHENIX_STATUS_MOTELSLAVE,2);
   set_local_var(LVAR_Home_Tile,self_tile);
   set_local_var(LVAR_Home_Rotat,3);
   move_obj_inven_to_obj(self_obj, dude_obj);
   set_SLAVA(25)
   set_REP(3)
   exp_add(250);

   Reply(220)
   NAnswer(221,1,Node999)
end
